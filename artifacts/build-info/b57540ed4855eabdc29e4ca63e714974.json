{"id":"b57540ed4855eabdc29e4ca63e714974","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/MemorialRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MemorialRegistry is Ownable {\n    struct Record {\n        bytes32 contentHash;\n        string storageURI;\n        address publisher;\n        uint64 timestamp;\n        bool locked;\n    }\n\n    mapping(uint256 => Record[]) private _versions;\n    uint256 public nextMemorialId = 1;\n\n    event MemorialPublished(\n        uint256 indexed memorialId,\n        uint256 indexed version,\n        bytes32 contentHash,\n        string storageURI,\n        address indexed publisher,\n        bool locked\n    );\n    event MemorialLocked(uint256 indexed memorialId);\n\n    // 🔧 OZ v5 requires this\n    constructor() Ownable(msg.sender) {}\n\n    modifier memorialExists(uint256 memorialId) {\n        require(_versions[memorialId].length > 0, \"Memorial: not found\");\n        _;\n    }\n\n    function publish(\n        bytes32 contentHash,\n        string calldata storageURI,\n        bool lockImmediately\n    ) external returns (uint256 memorialId, uint256 version) {\n        require(contentHash != bytes32(0), \"Invalid hash\");\n        require(bytes(storageURI).length > 0, \"Invalid URI\");\n\n        memorialId = nextMemorialId++;\n        _versions[memorialId].push(\n            Record({\n                contentHash: contentHash,\n                storageURI: storageURI,\n                publisher: msg.sender,\n                timestamp: uint64(block.timestamp),\n                locked: lockImmediately\n            })\n        );\n\n        emit MemorialPublished(memorialId, 0, contentHash, storageURI, msg.sender, lockImmediately);\n        if (lockImmediately) emit MemorialLocked(memorialId);\n        return (memorialId, 0);\n    }\n\n    function appendVersion(\n        uint256 memorialId,\n        bytes32 newContentHash,\n        string calldata newStorageURI\n    ) external memorialExists(memorialId) returns (uint256 version) {\n        Record memory last = _versions[memorialId][_versions[memorialId].length - 1];\n        require(!last.locked, \"Memorial is locked\");\n        require(msg.sender == last.publisher || msg.sender == owner(), \"Not authorized\");\n        require(newContentHash != bytes32(0), \"Invalid hash\");\n        require(bytes(newStorageURI).length > 0, \"Invalid URI\");\n\n        version = _versions[memorialId].length;\n        _versions[memorialId].push(\n            Record({\n                contentHash: newContentHash,\n                storageURI: newStorageURI,\n                publisher: msg.sender,\n                timestamp: uint64(block.timestamp),\n                locked: false\n            })\n        );\n\n        emit MemorialPublished(memorialId, version, newContentHash, newStorageURI, msg.sender, false);\n        return version;\n    }\n\n    function lock(uint256 memorialId) external memorialExists(memorialId) {\n        Record storage last = _versions[memorialId][_versions[memorialId].length - 1];\n        require(!last.locked, \"Already locked\");\n        require(msg.sender == last.publisher || msg.sender == owner(), \"Not authorized\");\n        last.locked = true;\n        emit MemorialLocked(memorialId);\n    }\n\n    // Views\n    function latest(uint256 memorialId) external view memorialExists(memorialId) returns (Record memory) {\n        return _versions[memorialId][_versions[memorialId].length - 1];\n    }\n\n    function versionCount(uint256 memorialId) external view memorialExists(memorialId) returns (uint256) {\n        return _versions[memorialId].length;\n    }\n\n    function getVersion(uint256 memorialId, uint256 version) external view memorialExists(memorialId) returns (Record memory) {\n        require(version < _versions[memorialId].length, \"Bad version\");\n        return _versions[memorialId][version];\n    }\n}\n"},"contracts/RemembranceBadges.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract RemembranceBadges is ERC1155, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    mapping(address => mapping(uint256 => bool)) public claimed;\n    mapping(uint256 => uint256) public totalHolders;        // badgeId -> unique holders\n    mapping(uint256 => uint256) public candlesForMemorial;  // memorialId -> unique candles (per account/year)\n\n    event CandleLit(address indexed account, uint256 indexed memorialId, uint16 indexed year, uint256 badgeId);\n\n    constructor(string memory baseURI, address admin) ERC1155(baseURI) {\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(MINTER_ROLE, admin);\n    }\n\n    function badgeIdFor(uint256 memorialId, uint16 year) public pure returns (uint256) {\n        return uint256(keccak256(abi.encodePacked(\"REMEMBRANCE_BADGE\", memorialId, year)));\n    }\n\n    function lightCandle(address to, uint256 memorialId, uint16 year) external onlyRole(MINTER_ROLE) {\n        require(to != address(0), \"Bad recipient\");\n        uint256 id = badgeIdFor(memorialId, year);\n        require(!claimed[to][id], \"Already claimed\");\n\n        claimed[to][id] = true;\n        _mint(to, id, 1, \"\");\n\n        totalHolders[id] += 1;\n        candlesForMemorial[memorialId] += 1;\n\n        emit CandleLit(to, memorialId, year, id);\n    }\n\n    /* =========================\n       Soulbound: block transfers\n       ========================= */\n\n    function safeTransferFrom(\n        address, /*from*/\n        address, /*to*/\n        uint256, /*id*/\n        uint256, /*amount*/\n        bytes memory /*data*/\n    ) public virtual override {\n        revert(\"Soulbound: non-transferable\");\n    }\n\n    function safeBatchTransferFrom(\n        address, /*from*/\n        address, /*to*/\n        uint256[] memory, /*ids*/\n        uint256[] memory, /*amounts*/\n        bytes memory /*data*/\n    ) public virtual override {\n        revert(\"Soulbound: non-transferable\");\n    }\n\n    // Optional: also block approvals to avoid confusion\n    function setApprovalForAll(address, bool) public virtual override {\n        revert(\"Soulbound: approvals disabled\");\n    }\n\n    /* ============== */\n\n    // Multiple inheritance override\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override(ERC1155, AccessControl)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n\n    // Optional admin burn\n    function adminBurn(address from, uint256 memorialId, uint16 year) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        uint256 id = badgeIdFor(memorialId, year);\n        require(balanceOf(from, id) == 1, \"No badge\");\n        _burn(from, id, 1);\n    }\n\n    function setURI(string calldata newUri) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        _setURI(newUri);\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[2956],"ERC165":[3286],"IAccessControl":[379],"IERC165":[3298]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":2957,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":3287,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2956,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,3286,3298,379,2956],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3285],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3285,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2956],"Ownable":[527]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":528,"sourceUnit":2957,"src":"128:45:2","symbolAliases":[{"foreign":{"id":382,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":385,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2956,"src":"692:7:2"},"id":386,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":527,"linearizedBaseContracts":[527,2956],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":388,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":527,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":393,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":393,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":398,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":398,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":404,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":404,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":404,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":429,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":423,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":426,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":430,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":430,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":527,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":436,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":438,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":444,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":527,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":461,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":527,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":478,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":527,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":499,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":502,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":506,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":506,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":527,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":521,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":526,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":527,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":528,"src":"663:2438:2","usedErrors":[393,398],"usedEvents":[404]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[664],"IERC20Errors":[569],"IERC721Errors":[617]},"id":665,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":529,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":569,"linearizedBaseContracts":[569],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":539,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":539,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":535,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":539,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":534,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":539,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":544,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":544,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":549,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":549,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":558,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":558,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":558,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":558,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":563,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":563,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":568,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":568,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":665,"src":"280:1764:3","usedErrors":[539,544,549,558,563,568],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":617,"linearizedBaseContracts":[617],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":575,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":575,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":580,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":580,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":589,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":589,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":589,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":589,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":594,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":594,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":599,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":599,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":600,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":606,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":606,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":606,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":611,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":611,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":616,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":616,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":665,"src":"2190:2092:3","usedErrors":[575,580,589,594,599,606,611,616],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":664,"linearizedBaseContracts":[664],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":619,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":629,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":629,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":629,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":629,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":629,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":634,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":634,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":639,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":639,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":646,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":646,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":646,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":647,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":651,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":649,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":651,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":652,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":656,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":656,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":653,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":663,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":663,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":663,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":665,"src":"4430:2107:3","usedErrors":[629,634,639,646,651,656,663],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[2894],"Context":[2956],"ERC1155":[1581],"ERC1155Utils":[1916],"ERC165":[3286],"IERC1155":[1704],"IERC1155Errors":[664],"IERC1155MetadataURI":[1762],"IERC165":[3298]},"id":1582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":666,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":668,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":1705,"src":"135:40:4","symbolAliases":[{"foreign":{"id":667,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"143:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":670,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":1763,"src":"176:73:4","symbolAliases":[{"foreign":{"id":669,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"184:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":672,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":1917,"src":"250:54:4","symbolAliases":[{"foreign":{"id":671,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"258:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":2957,"src":"305:48:4","symbolAliases":[{"foreign":{"id":673,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"313:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":677,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":3287,"src":"354:69:4","symbolAliases":[{"foreign":{"id":675,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"362:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":676,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"371:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":2895,"src":"424:46:4","symbolAliases":[{"foreign":{"id":678,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2894,"src":"432:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":681,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1582,"sourceUnit":665,"src":"471:67:4","symbolAliases":[{"foreign":{"id":680,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"479:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":683,"name":"Context","nameLocations":["754:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2956,"src":"754:7:4"},"id":684,"nodeType":"InheritanceSpecifier","src":"754:7:4"},{"baseName":{"id":685,"name":"ERC165","nameLocations":["763:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"763:6:4"},"id":686,"nodeType":"InheritanceSpecifier","src":"763:6:4"},{"baseName":{"id":687,"name":"IERC1155","nameLocations":["771:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"771:8:4"},"id":688,"nodeType":"InheritanceSpecifier","src":"771:8:4"},{"baseName":{"id":689,"name":"IERC1155MetadataURI","nameLocations":["781:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"781:19:4"},"id":690,"nodeType":"InheritanceSpecifier","src":"781:19:4"},{"baseName":{"id":691,"name":"IERC1155Errors","nameLocations":["802:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":664,"src":"802:14:4"},"id":692,"nodeType":"InheritanceSpecifier","src":"802:14:4"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"540:184:4","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1581,"linearizedBaseContracts":[1581,664,1762,1704,3286,3298,2956],"name":"ERC1155","nameLocation":"743:7:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":696,"libraryName":{"id":693,"name":"Arrays","nameLocations":["829:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"829:6:4"},"nodeType":"UsingForDirective","src":"823:27:4","typeName":{"baseType":{"id":694,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":695,"nodeType":"ArrayTypeName","src":"840:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":700,"libraryName":{"id":697,"name":"Arrays","nameLocations":["861:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"861:6:4"},"nodeType":"UsingForDirective","src":"855:27:4","typeName":{"baseType":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":699,"nodeType":"ArrayTypeName","src":"872:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":706,"mutability":"mutable","name":"_balances","nameLocation":"955:9:4","nodeType":"VariableDeclaration","scope":1581,"src":"888:76:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":705,"keyName":"id","keyNameLocation":"904:2:4","keyType":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":704,"keyName":"account","keyNameLocation":"926:7:4","keyType":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":712,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:4","nodeType":"VariableDeclaration","scope":1581,"src":"971:88:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":711,"keyName":"account","keyNameLocation":"987:7:4","keyType":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":710,"keyName":"operator","keyNameLocation":"1014:8:4","keyType":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":709,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":714,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:4","nodeType":"VariableDeclaration","scope":1581,"src":"1180:19:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":713,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":724,"nodeType":"Block","src":"1281:30:4","statements":[{"expression":{"arguments":[{"id":721,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1299:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":720,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"1291:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"1291:13:4"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"1206:38:4","text":" @dev See {_setURI}."},"id":725,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:4","nodeType":"VariableDeclaration","scope":725,"src":"1261:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":716,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:4"},"returnParameters":{"id":719,"nodeType":"ParameterList","parameters":[],"src":"1281:0:4"},"scope":1581,"src":"1249:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3285,3297],"body":{"id":755,"nodeType":"Block","src":"1453:197:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":736,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1482:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":738,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"1502:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1704_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1704_$","typeString":"type(contract IERC1155)"}],"id":737,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1704","typeString":"type(contract IERC1155)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":742,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1539:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":744,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"1559:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1762_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1762_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":743,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1762","typeString":"type(contract IERC1155MetadataURI)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":751,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1631:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":749,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1581_$","typeString":"type(contract super ERC1155)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3285,"src":"1607:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":735,"id":754,"nodeType":"Return","src":"1463:180:4"}]},"documentation":{"id":726,"nodeType":"StructuredDocumentation","src":"1317:23:4","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":756,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:4","nodeType":"FunctionDefinition","overrides":{"id":732,"nodeType":"OverrideSpecifier","overrides":[{"id":730,"name":"ERC165","nameLocations":["1421:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"1421:6:4"},{"id":731,"name":"IERC165","nameLocations":["1429:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3298,"src":"1429:7:4"}],"src":"1412:25:4"},"parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:4","nodeType":"VariableDeclaration","scope":756,"src":"1372:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":727,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:4"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":756,"src":"1447:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":733,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:4"},"scope":1581,"src":"1345:305:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1761],"body":{"id":766,"nodeType":"Block","src":"2124:28:4","statements":[{"expression":{"id":764,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"2141:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"2134:11:4"}]},"documentation":{"id":757,"nodeType":"StructuredDocumentation","src":"1656:388:4","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:4","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"2062:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:4"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"2109:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":761,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:4"},"scope":1581,"src":"2049:103:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1642],"body":{"id":783,"nodeType":"Block","src":"2273:46:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":777,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"2290:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":779,"indexExpression":{"id":778,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"2300:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":781,"indexExpression":{"id":780,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2304:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":776,"id":782,"nodeType":"Return","src":"2283:29:4"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"2158:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":784,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:4","nodeType":"FunctionDefinition","parameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"account","nameLocation":"2214:7:4","nodeType":"VariableDeclaration","scope":784,"src":"2206:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"id","nameLocation":"2231:2:4","nodeType":"VariableDeclaration","scope":784,"src":"2223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:4"},"returnParameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":784,"src":"2264:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":774,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:4"},"scope":1581,"src":"2187:132:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1655],"body":{"id":853,"nodeType":"Block","src":"2618:410:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":797,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2632:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:4","memberName":"length","nodeType":"MemberAccess","src":"2632:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":799,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2651:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:4","memberName":"length","nodeType":"MemberAccess","src":"2651:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":810,"nodeType":"IfStatement","src":"2628:121:4","trueBody":{"id":809,"nodeType":"Block","src":"2663:86:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":803,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2710:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:4","memberName":"length","nodeType":"MemberAccess","src":"2710:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":805,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2722:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:4","memberName":"length","nodeType":"MemberAccess","src":"2722:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":802,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"2684:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":808,"nodeType":"RevertStatement","src":"2677:61:4"}]}},{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:4","nodeType":"VariableDeclaration","scope":853,"src":"2759:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":814,"nodeType":"ArrayTypeName","src":"2759:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":822,"initialValue":{"arguments":[{"expression":{"id":819,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2806:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:4","memberName":"length","nodeType":"MemberAccess","src":"2806:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":817,"nodeType":"ArrayTypeName","src":"2796:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:4"},{"body":{"id":849,"nodeType":"Block","src":"2879:112:4","statements":[{"expression":{"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":834,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"2893:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":836,"indexExpression":{"id":835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2907:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":840,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2950:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":838,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2922:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"2922:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2977:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":842,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"2954:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"2954:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":837,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2912:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":848,"nodeType":"ExpressionStatement","src":"2893:87:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2853:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":828,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"2857:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:4","memberName":"length","nodeType":"MemberAccess","src":"2857:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":850,"initializationExpression":{"assignments":[824],"declarations":[{"constant":false,"id":824,"mutability":"mutable","name":"i","nameLocation":"2846:1:4","nodeType":"VariableDeclaration","scope":850,"src":"2838:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"initialValue":{"hexValue":"30","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:4"},"loopExpression":{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:4","subExpression":{"id":831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":824,"src":"2876:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"2874:3:4"},"nodeType":"ForStatement","src":"2833:158:4"},{"expression":{"id":851,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"3008:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":796,"id":852,"nodeType":"Return","src":"3001:20:4"}]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"2325:146:4","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":854,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:4","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:4","nodeType":"VariableDeclaration","scope":854,"src":"2509:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":787,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"ids","nameLocation":"2561:3:4","nodeType":"VariableDeclaration","scope":854,"src":"2544:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ArrayTypeName","src":"2544:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:4"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"2600:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"nodeType":"ArrayTypeName","src":"2600:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:4"},"scope":1581,"src":"2476:552:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1663],"body":{"id":869,"nodeType":"Block","src":"3138:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3167:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3181:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"3191:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":862,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"3148:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"3148:52:4"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"3034:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":870,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:4","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"operator","nameLocation":"3098:8:4","nodeType":"VariableDeclaration","scope":870,"src":"3090:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"approved","nameLocation":"3113:8:4","nodeType":"VariableDeclaration","scope":870,"src":"3108:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:4"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"3138:0:4"},"scope":1581,"src":"3063:144:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1673],"body":{"id":886,"nodeType":"Block","src":"3338:61:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":880,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3355:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":882,"indexExpression":{"id":881,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"3374:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":884,"indexExpression":{"id":883,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"3383:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":879,"id":885,"nodeType":"Return","src":"3348:44:4"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"3213:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":887,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:4","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"account","nameLocation":"3276:7:4","nodeType":"VariableDeclaration","scope":887,"src":"3268:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"operator","nameLocation":"3293:8:4","nodeType":"VariableDeclaration","scope":887,"src":"3285:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:4"},"returnParameters":{"id":879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"3332:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":877,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:4"},"scope":1581,"src":"3242:157:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1687],"body":{"id":930,"nodeType":"Block","src":"3547:238:4","statements":[{"assignments":[902],"declarations":[{"constant":false,"id":902,"mutability":"mutable","name":"sender","nameLocation":"3565:6:4","nodeType":"VariableDeclaration","scope":930,"src":"3557:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":901,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":905,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":903,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3574:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3600:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":907,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3608:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:4","subExpression":{"arguments":[{"id":910,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3636:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":911,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3642:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":909,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"3619:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"IfStatement","src":"3596:129:4","trueBody":{"id":920,"nodeType":"Block","src":"3651:74:4","statements":[{"errorCall":{"arguments":[{"id":916,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3701:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3709:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":915,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"3672:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"RevertStatement","src":"3665:49:4"}]}},{"expression":{"arguments":[{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"3752:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"3758:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"3762:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3766:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"3773:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":922,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3734:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"ExpressionStatement","src":"3734:44:4"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"3405:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":931,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:4","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"from","nameLocation":"3468:4:4","nodeType":"VariableDeclaration","scope":931,"src":"3460:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"to","nameLocation":"3482:2:4","nodeType":"VariableDeclaration","scope":931,"src":"3474:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"id","nameLocation":"3494:2:4","nodeType":"VariableDeclaration","scope":931,"src":"3486:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"mutability":"mutable","name":"value","nameLocation":"3506:5:4","nodeType":"VariableDeclaration","scope":931,"src":"3498:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"data","nameLocation":"3526:4:4","nodeType":"VariableDeclaration","scope":931,"src":"3513:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":897,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:4"},"returnParameters":{"id":900,"nodeType":"ParameterList","parameters":[],"src":"3547:0:4"},"scope":1581,"src":"3434:351:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1703],"body":{"id":976,"nodeType":"Block","src":"4004:245:4","statements":[{"assignments":[948],"declarations":[{"constant":false,"id":948,"mutability":"mutable","name":"sender","nameLocation":"4022:6:4","nodeType":"VariableDeclaration","scope":976,"src":"4014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":951,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":949,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4031:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"4057:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":953,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4065:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:4","subExpression":{"arguments":[{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"4093:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4099:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":955,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"4076:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":967,"nodeType":"IfStatement","src":"4053:129:4","trueBody":{"id":966,"nodeType":"Block","src":"4108:74:4","statements":[{"errorCall":{"arguments":[{"id":962,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"4158:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":963,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"4166:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":961,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4129:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":965,"nodeType":"RevertStatement","src":"4122:49:4"}]}},{"expression":{"arguments":[{"id":969,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"4220:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"4224:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":972,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"4229:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":973,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"4237:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":968,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"4191:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"ExpressionStatement","src":"4191:51:4"}]},"documentation":{"id":932,"nodeType":"StructuredDocumentation","src":"3791:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":977,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:4","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"from","nameLocation":"3868:4:4","nodeType":"VariableDeclaration","scope":977,"src":"3860:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"to","nameLocation":"3890:2:4","nodeType":"VariableDeclaration","scope":977,"src":"3882:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"ids","nameLocation":"3919:3:4","nodeType":"VariableDeclaration","scope":977,"src":"3902:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":938,"nodeType":"ArrayTypeName","src":"3902:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":942,"mutability":"mutable","name":"values","nameLocation":"3949:6:4","nodeType":"VariableDeclaration","scope":977,"src":"3932:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":941,"nodeType":"ArrayTypeName","src":"3932:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":944,"mutability":"mutable","name":"data","nameLocation":"3978:4:4","nodeType":"VariableDeclaration","scope":977,"src":"3965:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":943,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:4"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[],"src":"4004:0:4"},"scope":1581,"src":"3820:429:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1129,"nodeType":"Block","src":"5057:1174:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":991,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5071:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:4","memberName":"length","nodeType":"MemberAccess","src":"5071:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":993,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5085:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:4","memberName":"length","nodeType":"MemberAccess","src":"5085:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"5067:117:4","trueBody":{"id":1003,"nodeType":"Block","src":"5100:84:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":997,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5147:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:4","memberName":"length","nodeType":"MemberAccess","src":"5147:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":999,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5159:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:4","memberName":"length","nodeType":"MemberAccess","src":"5159:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":996,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5121:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1002,"nodeType":"RevertStatement","src":"5114:59:4"}]}},{"assignments":[1006],"declarations":[{"constant":false,"id":1006,"mutability":"mutable","name":"operator","nameLocation":"5202:8:4","nodeType":"VariableDeclaration","scope":1129,"src":"5194:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1009,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1007,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"5213:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:4"},{"body":{"id":1090,"nodeType":"Block","src":"5277:650:4","statements":[{"assignments":[1022],"declarations":[{"constant":false,"id":1022,"mutability":"mutable","name":"id","nameLocation":"5299:2:4","nodeType":"VariableDeclaration","scope":1090,"src":"5291:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1027,"initialValue":{"arguments":[{"id":1025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5327:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1023,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5304:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"5304:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:4"},{"assignments":[1029],"declarations":[{"constant":false,"id":1029,"mutability":"mutable","name":"value","nameLocation":"5351:5:4","nodeType":"VariableDeclaration","scope":1090,"src":"5343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"id":1032,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5385:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1030,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"5359:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"5359:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1035,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5406:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:4","typeDescriptions":{}}},"id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1073,"nodeType":"IfStatement","src":"5402:420:4","trueBody":{"id":1072,"nodeType":"Block","src":"5426:396:4","statements":[{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:4","nodeType":"VariableDeclaration","scope":1072,"src":"5444:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1048,"initialValue":{"baseExpression":{"baseExpression":{"id":1043,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5466:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1045,"indexExpression":{"id":1044,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5476:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1047,"indexExpression":{"id":1046,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5480:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1049,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"5507:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5521:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1060,"nodeType":"IfStatement","src":"5503:129:4","trueBody":{"id":1059,"nodeType":"Block","src":"5528:104:4","statements":[{"errorCall":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5584:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"5590:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5603:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1056,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5610:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1052,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5557:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"RevertStatement","src":"5550:63:4"}]}},{"id":1071,"nodeType":"UncheckedBlock","src":"5649:159:4","statements":[{"expression":{"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1061,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5748:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1064,"indexExpression":{"id":1062,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5758:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1065,"indexExpression":{"id":1063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5762:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"5770:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5784:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1070,"nodeType":"ExpressionStatement","src":"5748:41:4"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5840:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:4","typeDescriptions":{}}},"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1089,"nodeType":"IfStatement","src":"5836:81:4","trueBody":{"id":1088,"nodeType":"Block","src":"5858:59:4","statements":[{"expression":{"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1080,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5876:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":1083,"indexExpression":{"id":1081,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"5886:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1084,"indexExpression":{"id":1082,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5890:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"5897:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1087,"nodeType":"ExpressionStatement","src":"5876:26:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5256:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1015,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5260:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:4","memberName":"length","nodeType":"MemberAccess","src":"5260:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1091,"initializationExpression":{"assignments":[1011],"declarations":[{"constant":false,"id":1011,"mutability":"mutable","name":"i","nameLocation":"5249:1:4","nodeType":"VariableDeclaration","scope":1091,"src":"5241:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1013,"initialValue":{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:4"},"loopExpression":{"expression":{"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:4","subExpression":{"id":1018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5274:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1020,"nodeType":"ExpressionStatement","src":"5272:3:4"},"nodeType":"ForStatement","src":"5236:691:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1092,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5941:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:4","memberName":"length","nodeType":"MemberAccess","src":"5941:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1127,"nodeType":"Block","src":"6149:76:4","statements":[{"eventCall":{"arguments":[{"id":1120,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6182:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1121,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1122,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6198:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6202:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1124,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6207:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1119,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"6168:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1126,"nodeType":"EmitStatement","src":"6163:51:4"}]},"id":1128,"nodeType":"IfStatement","src":"5937:288:4","trueBody":{"id":1118,"nodeType":"Block","src":"5958:185:4","statements":[{"assignments":[1097],"declarations":[{"constant":false,"id":1097,"mutability":"mutable","name":"id","nameLocation":"5980:2:4","nodeType":"VariableDeclaration","scope":1118,"src":"5972:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1102,"initialValue":{"arguments":[{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1098,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"5985:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"5985:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:4"},{"assignments":[1104],"declarations":[{"constant":false,"id":1104,"mutability":"mutable","name":"value","nameLocation":"6032:5:4","nodeType":"VariableDeclaration","scope":1118,"src":"6024:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"arguments":[{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1105,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"6040:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"6040:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:4"},{"eventCall":{"arguments":[{"id":1111,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"6102:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"6112:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"6118:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"6122:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"6126:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1110,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"6087:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1117,"nodeType":"EmitStatement","src":"6082:50:4"}]}}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"4255:690:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:4","nodeType":"FunctionDefinition","parameters":{"id":989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"from","nameLocation":"4975:4:4","nodeType":"VariableDeclaration","scope":1130,"src":"4967:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"to","nameLocation":"4989:2:4","nodeType":"VariableDeclaration","scope":1130,"src":"4981:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"ids","nameLocation":"5010:3:4","nodeType":"VariableDeclaration","scope":1130,"src":"4993:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":984,"nodeType":"ArrayTypeName","src":"4993:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"values","nameLocation":"5032:6:4","nodeType":"VariableDeclaration","scope":1130,"src":"5015:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ArrayTypeName","src":"5015:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:4"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[],"src":"5057:0:4"},"scope":1581,"src":"4950:1281:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1209,"nodeType":"Block","src":"7001:509:4","statements":[{"expression":{"arguments":[{"id":1147,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7025:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7029:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1150,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7034:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1146,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"7011:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"ExpressionStatement","src":"7011:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1153,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7055:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:4","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1208,"nodeType":"IfStatement","src":"7051:453:4","trueBody":{"id":1207,"nodeType":"Block","src":"7073:431:4","statements":[{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"operator","nameLocation":"7095:8:4","nodeType":"VariableDeclaration","scope":1207,"src":"7087:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1163,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1161,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"7106:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1164,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7136:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:4","memberName":"length","nodeType":"MemberAccess","src":"7136:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1205,"nodeType":"Block","src":"7382:112:4","statements":[{"expression":{"arguments":[{"id":1197,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"7441:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1198,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7451:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1199,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7457:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1200,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7461:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1201,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7466:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1202,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7474:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1194,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"7400:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1916_$","typeString":"type(library ERC1155Utils)"}},"id":1196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:4","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1915,"src":"7400:40:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1204,"nodeType":"ExpressionStatement","src":"7400:79:4"}]},"id":1206,"nodeType":"IfStatement","src":"7132:362:4","trueBody":{"id":1193,"nodeType":"Block","src":"7153:223:4","statements":[{"assignments":[1169],"declarations":[{"constant":false,"id":1169,"mutability":"mutable","name":"id","nameLocation":"7179:2:4","nodeType":"VariableDeclaration","scope":1193,"src":"7171:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1168,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1170,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"7184:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"7184:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:4"},{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"value","nameLocation":"7235:5:4","nodeType":"VariableDeclaration","scope":1193,"src":"7227:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1181,"initialValue":{"arguments":[{"hexValue":"30","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1177,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"7243:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":2812,"src":"7243:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:4"},{"expression":{"arguments":[{"id":1185,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"7325:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7335:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"7341:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"7345:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7349:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1190,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"7356:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1182,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"7289:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1916_$","typeString":"type(library ERC1155Utils)"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:4","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1841,"src":"7289:35:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"7289:72:4"}]}}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"6237:568:4","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1210,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:4","nodeType":"FunctionDefinition","parameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"from","nameLocation":"6863:4:4","nodeType":"VariableDeclaration","scope":1210,"src":"6855:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"to","nameLocation":"6885:2:4","nodeType":"VariableDeclaration","scope":1210,"src":"6877:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"ids","nameLocation":"6914:3:4","nodeType":"VariableDeclaration","scope":1210,"src":"6897:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ArrayTypeName","src":"6897:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"values","nameLocation":"6944:6:4","nodeType":"VariableDeclaration","scope":1210,"src":"6927:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1140,"nodeType":"ArrayTypeName","src":"6927:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"data","nameLocation":"6973:4:4","nodeType":"VariableDeclaration","scope":1210,"src":"6960:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1142,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:4"},"returnParameters":{"id":1145,"nodeType":"ParameterList","parameters":[],"src":"7001:0:4"},"scope":1581,"src":"6810:700:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1275,"nodeType":"Block","src":"8075:355:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"8089:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:4","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"8085:88:4","trueBody":{"id":1237,"nodeType":"Block","src":"8107:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:4","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1230,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"8128:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"RevertStatement","src":"8121:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"8186:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:4","typeDescriptions":{}}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1253,"nodeType":"IfStatement","src":"8182:88:4","trueBody":{"id":1252,"nodeType":"Block","src":"8206:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:4","typeDescriptions":{}}},"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1245,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"8227:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1251,"nodeType":"RevertStatement","src":"8220:39:4"}]}},{"assignments":[1258,1261],"declarations":[{"constant":false,"id":1258,"mutability":"mutable","name":"ids","nameLocation":"8297:3:4","nodeType":"VariableDeclaration","scope":1275,"src":"8280:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1257,"nodeType":"ArrayTypeName","src":"8280:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"values","nameLocation":"8319:6:4","nodeType":"VariableDeclaration","scope":1275,"src":"8302:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1260,"nodeType":"ArrayTypeName","src":"8302:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1266,"initialValue":{"arguments":[{"id":1263,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"8348:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"8352:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"8329:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:4"},{"expression":{"arguments":[{"id":1268,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"8395:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"8401:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1270,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"8405:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1271,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"8410:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"8418:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1267,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"8368:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1274,"nodeType":"ExpressionStatement","src":"8368:55:4"}]},"documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"7516:446:4","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1276,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:4","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1213,"mutability":"mutable","name":"from","nameLocation":"8002:4:4","nodeType":"VariableDeclaration","scope":1276,"src":"7994:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"mutability":"mutable","name":"to","nameLocation":"8016:2:4","nodeType":"VariableDeclaration","scope":1276,"src":"8008:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"id","nameLocation":"8028:2:4","nodeType":"VariableDeclaration","scope":1276,"src":"8020:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"value","nameLocation":"8040:5:4","nodeType":"VariableDeclaration","scope":1276,"src":"8032:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"data","nameLocation":"8060:4:4","nodeType":"VariableDeclaration","scope":1276,"src":"8047:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:4"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"8075:0:4"},"scope":1581,"src":"7967:463:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"9010:266:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"9024:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:4","typeDescriptions":{}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"9020:88:4","trueBody":{"id":1305,"nodeType":"Block","src":"9042:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:4","typeDescriptions":{}}},"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1298,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"9063:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"RevertStatement","src":"9056:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1307,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"9121:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:4","typeDescriptions":{}}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1321,"nodeType":"IfStatement","src":"9117:88:4","trueBody":{"id":1320,"nodeType":"Block","src":"9141:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:4","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1313,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"9162:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1319,"nodeType":"RevertStatement","src":"9155:39:4"}]}},{"expression":{"arguments":[{"id":1323,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"9241:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1324,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"9247:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1325,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9251:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1326,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9256:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1327,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"9264:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1322,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"9214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1329,"nodeType":"ExpressionStatement","src":"9214:55:4"}]},"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"8436:390:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:4","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"from","nameLocation":"8880:4:4","nodeType":"VariableDeclaration","scope":1331,"src":"8872:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"to","nameLocation":"8902:2:4","nodeType":"VariableDeclaration","scope":1331,"src":"8894:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"ids","nameLocation":"8931:3:4","nodeType":"VariableDeclaration","scope":1331,"src":"8914:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1283,"nodeType":"ArrayTypeName","src":"8914:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"values","nameLocation":"8961:6:4","nodeType":"VariableDeclaration","scope":1331,"src":"8944:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ArrayTypeName","src":"8944:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"data","nameLocation":"8990:4:4","nodeType":"VariableDeclaration","scope":1331,"src":"8977:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1288,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:4"},"returnParameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"9010:0:4"},"scope":1581,"src":"8831:445:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1341,"nodeType":"Block","src":"10154:30:4","statements":[{"expression":{"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1337,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"10164:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1338,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10171:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1340,"nodeType":"ExpressionStatement","src":"10164:13:4"}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"9282:811:4","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1342,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:4","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:4","nodeType":"VariableDeclaration","scope":1342,"src":"10115:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1333,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:4"},"returnParameters":{"id":1336,"nodeType":"ParameterList","parameters":[],"src":"10154:0:4"},"scope":1581,"src":"10098:86:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"10644:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"10658:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1355,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:4","typeDescriptions":{}}},"id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1368,"nodeType":"IfStatement","src":"10654:88:4","trueBody":{"id":1367,"nodeType":"Block","src":"10676:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:4","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1360,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"10697:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1366,"nodeType":"RevertStatement","src":"10690:41:4"}]}},{"assignments":[1373,1376],"declarations":[{"constant":false,"id":1373,"mutability":"mutable","name":"ids","nameLocation":"10769:3:4","nodeType":"VariableDeclaration","scope":1393,"src":"10752:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1372,"nodeType":"ArrayTypeName","src":"10752:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"values","nameLocation":"10791:6:4","nodeType":"VariableDeclaration","scope":1393,"src":"10774:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1375,"nodeType":"ArrayTypeName","src":"10774:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1381,"initialValue":{"arguments":[{"id":1378,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"10820:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"10824:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1377,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"10801:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:4","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1387,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"10879:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1373,"src":"10883:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1389,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10888:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1390,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"10896:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1382,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"10840:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"10840:61:4"}]},"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"10190:367:4","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:4","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"to","nameLocation":"10585:2:4","nodeType":"VariableDeclaration","scope":1394,"src":"10577:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"id","nameLocation":"10597:2:4","nodeType":"VariableDeclaration","scope":1394,"src":"10589:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"value","nameLocation":"10609:5:4","nodeType":"VariableDeclaration","scope":1394,"src":"10601:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"data","nameLocation":"10629:4:4","nodeType":"VariableDeclaration","scope":1394,"src":"10616:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:4"},"returnParameters":{"id":1353,"nodeType":"ParameterList","parameters":[],"src":"10644:0:4"},"scope":1581,"src":"10562:346:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1434,"nodeType":"Block","src":"11446:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"11460:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:4","typeDescriptions":{}}},"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1422,"nodeType":"IfStatement","src":"11456:88:4","trueBody":{"id":1421,"nodeType":"Block","src":"11478:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:4","typeDescriptions":{}}},"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1414,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"11499:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1420,"nodeType":"RevertStatement","src":"11492:41:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:4","typeDescriptions":{}}},"id":1427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1428,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"11592:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1429,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"11596:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1430,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"11601:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"11609:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1423,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"11553:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"ExpressionStatement","src":"11553:61:4"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"10914:420:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1435,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:4","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"to","nameLocation":"11367:2:4","nodeType":"VariableDeclaration","scope":1435,"src":"11359:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"ids","nameLocation":"11388:3:4","nodeType":"VariableDeclaration","scope":1435,"src":"11371:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ArrayTypeName","src":"11371:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"values","nameLocation":"11410:6:4","nodeType":"VariableDeclaration","scope":1435,"src":"11393:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ArrayTypeName","src":"11393:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"data","nameLocation":"11431:4:4","nodeType":"VariableDeclaration","scope":1435,"src":"11418:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1404,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:4"},"returnParameters":{"id":1407,"nodeType":"ParameterList","parameters":[],"src":"11446:0:4"},"scope":1581,"src":"11339:282:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1484,"nodeType":"Block","src":"11980:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"11994:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:4","typeDescriptions":{}}},"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"11990:88:4","trueBody":{"id":1458,"nodeType":"Block","src":"12014:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1452,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:4","typeDescriptions":{}}},"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1451,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"12035:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1457,"nodeType":"RevertStatement","src":"12028:39:4"}]}},{"assignments":[1464,1467],"declarations":[{"constant":false,"id":1464,"mutability":"mutable","name":"ids","nameLocation":"12105:3:4","nodeType":"VariableDeclaration","scope":1484,"src":"12088:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1463,"nodeType":"ArrayTypeName","src":"12088:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"values","nameLocation":"12127:6:4","nodeType":"VariableDeclaration","scope":1484,"src":"12110:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1466,"nodeType":"ArrayTypeName","src":"12110:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1472,"initialValue":{"arguments":[{"id":1469,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"12156:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"12160:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1468,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"12137:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:4"},{"expression":{"arguments":[{"id":1474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"12203:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1475,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:4","typeDescriptions":{}}},"id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"12221:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1480,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"12226:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1473,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"12176:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1483,"nodeType":"ExpressionStatement","src":"12176:61:4"}]},"documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"11627:283:4","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:4","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"from","nameLocation":"11938:4:4","nodeType":"VariableDeclaration","scope":1485,"src":"11930:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1440,"mutability":"mutable","name":"id","nameLocation":"11952:2:4","nodeType":"VariableDeclaration","scope":1485,"src":"11944:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"value","nameLocation":"11964:5:4","nodeType":"VariableDeclaration","scope":1485,"src":"11956:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:4"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"11980:0:4"},"scope":1581,"src":"11915:329:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"12690:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"12704:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1498,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:4","typeDescriptions":{}}},"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1511,"nodeType":"IfStatement","src":"12700:88:4","trueBody":{"id":1510,"nodeType":"Block","src":"12724:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1504,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:4","typeDescriptions":{}}},"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1503,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"12745:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1509,"nodeType":"RevertStatement","src":"12738:39:4"}]}},{"expression":{"arguments":[{"id":1513,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"12824:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:4","typeDescriptions":{}}},"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"12842:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1519,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"12847:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1512,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"12797:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"12797:61:4"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"12250:345:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:4","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"from","nameLocation":"12628:4:4","nodeType":"VariableDeclaration","scope":1524,"src":"12620:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"ids","nameLocation":"12651:3:4","nodeType":"VariableDeclaration","scope":1524,"src":"12634:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ArrayTypeName","src":"12634:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"values","nameLocation":"12673:6:4","nodeType":"VariableDeclaration","scope":1524,"src":"12656:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1493,"nodeType":"ArrayTypeName","src":"12656:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:4"},"returnParameters":{"id":1496,"nodeType":"ParameterList","parameters":[],"src":"12690:0:4"},"scope":1581,"src":"12600:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"13177:222:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"13191:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1535,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:4","typeDescriptions":{}}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1548,"nodeType":"IfStatement","src":"13187:94:4","trueBody":{"id":1547,"nodeType":"Block","src":"13215:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:4","typeDescriptions":{}}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1540,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"13236:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"RevertStatement","src":"13229:41:4"}]}},{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1549,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"13290:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1552,"indexExpression":{"id":1550,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"13309:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1553,"indexExpression":{"id":1551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"13316:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1554,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"13328:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1556,"nodeType":"ExpressionStatement","src":"13290:46:4"},{"eventCall":{"arguments":[{"id":1558,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"13366:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1559,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"13373:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1560,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"13383:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1557,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"13351:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"EmitStatement","src":"13346:46:4"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"12871:208:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:4","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"13120:5:4","nodeType":"VariableDeclaration","scope":1564,"src":"13112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"operator","nameLocation":"13135:8:4","nodeType":"VariableDeclaration","scope":1564,"src":"13127:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"approved","nameLocation":"13150:8:4","nodeType":"VariableDeclaration","scope":1564,"src":"13145:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1530,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:4"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"13177:0:4"},"scope":1581,"src":"13084:315:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"13673:664:4","statements":[{"AST":{"nodeType":"YulBlock","src":"13708:623:4","statements":[{"nodeType":"YulAssignment","src":"13766:21:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13782:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13776:5:4"},"nodeType":"YulFunctionCall","src":"13776:11:4"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13766:6:4"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13844:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"13852:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13837:6:4"},"nodeType":"YulFunctionCall","src":"13837:17:4"},"nodeType":"YulExpressionStatement","src":"13837:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"13975:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"13983:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13971:3:4"},"nodeType":"YulFunctionCall","src":"13971:17:4"},{"name":"element1","nodeType":"YulIdentifier","src":"13990:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13964:6:4"},"nodeType":"YulFunctionCall","src":"13964:35:4"},"nodeType":"YulExpressionStatement","src":"13964:35:4"},{"nodeType":"YulAssignment","src":"14090:27:4","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14104:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14112:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:4"},"nodeType":"YulFunctionCall","src":"14100:17:4"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14090:6:4"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14137:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14145:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14130:6:4"},"nodeType":"YulFunctionCall","src":"14130:17:4"},"nodeType":"YulExpressionStatement","src":"14130:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14171:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14179:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14167:3:4"},"nodeType":"YulFunctionCall","src":"14167:17:4"},{"name":"element2","nodeType":"YulIdentifier","src":"14186:8:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14160:6:4"},"nodeType":"YulFunctionCall","src":"14160:35:4"},"nodeType":"YulExpressionStatement","src":"14160:35:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14297:4:4","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14307:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"14315:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14303:3:4"},"nodeType":"YulFunctionCall","src":"14303:17:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14290:6:4"},"nodeType":"YulFunctionCall","src":"14290:31:4"},"nodeType":"YulExpressionStatement","src":"14290:31:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1573,"isOffset":false,"isSlot":false,"src":"13766:6:4","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"13844:6:4","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"13975:6:4","valueSize":1},{"declaration":1573,"isOffset":false,"isSlot":false,"src":"14104:6:4","valueSize":1},{"declaration":1576,"isOffset":false,"isSlot":false,"src":"14090:6:4","valueSize":1},{"declaration":1576,"isOffset":false,"isSlot":false,"src":"14137:6:4","valueSize":1},{"declaration":1576,"isOffset":false,"isSlot":false,"src":"14171:6:4","valueSize":1},{"declaration":1576,"isOffset":false,"isSlot":false,"src":"14307:6:4","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"13990:8:4","valueSize":1},{"declaration":1569,"isOffset":false,"isSlot":false,"src":"14186:8:4","valueSize":1}],"flags":["memory-safe"],"id":1578,"nodeType":"InlineAssembly","src":"13683:648:4"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"13405:105:4","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:4","nodeType":"FunctionDefinition","parameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"element1","nameLocation":"13560:8:4","nodeType":"VariableDeclaration","scope":1580,"src":"13552:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1569,"mutability":"mutable","name":"element2","nameLocation":"13586:8:4","nodeType":"VariableDeclaration","scope":1580,"src":"13578:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:4"},"returnParameters":{"id":1577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"array1","nameLocation":"13640:6:4","nodeType":"VariableDeclaration","scope":1580,"src":"13623:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1572,"nodeType":"ArrayTypeName","src":"13623:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"array2","nameLocation":"13665:6:4","nodeType":"VariableDeclaration","scope":1580,"src":"13648:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1575,"nodeType":"ArrayTypeName","src":"13648:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:4"},"scope":1581,"src":"13515:822:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1582,"src":"725:13614:4","usedErrors":[629,634,639,646,651,656,663],"usedEvents":[1601,1616,1625,1632]}],"src":"109:14231:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1704],"IERC165":[3298]},"id":1705,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1583,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1585,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1705,"sourceUnit":3299,"src":"136:62:5","symbolAliases":[{"foreign":{"id":1584,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"144:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1587,"name":"IERC165","nameLocations":["359:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":3298,"src":"359:7:5"},"id":1588,"nodeType":"InheritanceSpecifier","src":"359:7:5"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"200:136:5","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1704,"linearizedBaseContracts":[1704,3298],"name":"IERC1155","nameLocation":"347:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"373:125:5","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1601,"name":"TransferSingle","nameLocation":"509:14:5","nodeType":"EventDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:5","nodeType":"VariableDeclaration","scope":1601,"src":"524:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1590,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1593,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:5","nodeType":"VariableDeclaration","scope":1601,"src":"550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:5","nodeType":"VariableDeclaration","scope":1601,"src":"572:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:5","nodeType":"VariableDeclaration","scope":1601,"src":"592:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1596,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1599,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:5","nodeType":"VariableDeclaration","scope":1601,"src":"604:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:5"},"src":"503:116:5"},{"anonymous":false,"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"625:144:5","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1616,"name":"TransferBatch","nameLocation":"780:13:5","nodeType":"EventDefinition","parameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:5","nodeType":"VariableDeclaration","scope":1616,"src":"803:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1606,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:5","nodeType":"VariableDeclaration","scope":1616,"src":"837:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1605,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1608,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:5","nodeType":"VariableDeclaration","scope":1616,"src":"867:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1611,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:5","nodeType":"VariableDeclaration","scope":1616,"src":"895:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1609,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"nodeType":"ArrayTypeName","src":"895:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1614,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:5","nodeType":"VariableDeclaration","scope":1616,"src":"918:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1613,"nodeType":"ArrayTypeName","src":"918:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:5"},"src":"774:167:5"},{"anonymous":false,"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"947:147:5","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1625,"name":"ApprovalForAll","nameLocation":"1105:14:5","nodeType":"EventDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:5","nodeType":"VariableDeclaration","scope":1625,"src":"1120:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:5","nodeType":"VariableDeclaration","scope":1625,"src":"1145:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1623,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:5","nodeType":"VariableDeclaration","scope":1625,"src":"1171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1622,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:5"},"src":"1099:87:5"},{"anonymous":false,"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"1192:343:5","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1632,"name":"URI","nameLocation":"1546:3:5","nodeType":"EventDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:5","nodeType":"VariableDeclaration","scope":1632,"src":"1550:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1627,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1630,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:5","nodeType":"VariableDeclaration","scope":1632,"src":"1564:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:5"},"src":"1540:44:5"},{"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"1590:90:5","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1642,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:5","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"account","nameLocation":"1712:7:5","nodeType":"VariableDeclaration","scope":1642,"src":"1704:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"id","nameLocation":"1729:2:5","nodeType":"VariableDeclaration","scope":1642,"src":"1721:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:5"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1642,"src":"1756:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:5"},"scope":1704,"src":"1685:80:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"1771:188:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1655,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:5","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:5","nodeType":"VariableDeclaration","scope":1655,"src":"1997:27:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1644,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1645,"nodeType":"ArrayTypeName","src":"1997:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"ids","nameLocation":"2053:3:5","nodeType":"VariableDeclaration","scope":1655,"src":"2034:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1648,"nodeType":"ArrayTypeName","src":"2034:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:5"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"2086:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1652,"nodeType":"ArrayTypeName","src":"2086:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:5"},"scope":1704,"src":"1964:140:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2110:254:5","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1663,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:5","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"operator","nameLocation":"2404:8:5","nodeType":"VariableDeclaration","scope":1663,"src":"2396:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"approved","nameLocation":"2419:8:5","nodeType":"VariableDeclaration","scope":1663,"src":"2414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1659,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:5"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"2437:0:5"},"scope":1704,"src":"2369:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"2444:135:5","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1673,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:5","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"mutability":"mutable","name":"account","nameLocation":"2618:7:5","nodeType":"VariableDeclaration","scope":1673,"src":"2610:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"operator","nameLocation":"2635:8:5","nodeType":"VariableDeclaration","scope":1673,"src":"2627:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:5"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1673,"src":"2668:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1670,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:5"},"scope":1704,"src":"2584:90:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"2680:927:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1687,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:5","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"from","nameLocation":"3646:4:5","nodeType":"VariableDeclaration","scope":1687,"src":"3638:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1675,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1678,"mutability":"mutable","name":"to","nameLocation":"3660:2:5","nodeType":"VariableDeclaration","scope":1687,"src":"3652:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"id","nameLocation":"3672:2:5","nodeType":"VariableDeclaration","scope":1687,"src":"3664:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"value","nameLocation":"3684:5:5","nodeType":"VariableDeclaration","scope":1687,"src":"3676:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"data","nameLocation":"3706:4:5","nodeType":"VariableDeclaration","scope":1687,"src":"3691:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:5"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[],"src":"3720:0:5"},"scope":1704,"src":"3612:109:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"3727:831:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1703,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:5","nodeType":"FunctionDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"from","nameLocation":"4611:4:5","nodeType":"VariableDeclaration","scope":1703,"src":"4603:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1692,"mutability":"mutable","name":"to","nameLocation":"4633:2:5","nodeType":"VariableDeclaration","scope":1703,"src":"4625:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"ids","nameLocation":"4664:3:5","nodeType":"VariableDeclaration","scope":1703,"src":"4645:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1694,"nodeType":"ArrayTypeName","src":"4645:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"values","nameLocation":"4696:6:5","nodeType":"VariableDeclaration","scope":1703,"src":"4677:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1697,"nodeType":"ArrayTypeName","src":"4677:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"data","nameLocation":"4727:4:5","nodeType":"VariableDeclaration","scope":1703,"src":"4712:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1699,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:5"},"returnParameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"4746:0:5"},"scope":1704,"src":"4563:184:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1705,"src":"337:4412:5","usedErrors":[],"usedEvents":[1601,1616,1625,1632]}],"src":"110:4640:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1746],"IERC165":[3298]},"id":1747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1706,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1708,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1747,"sourceUnit":3299,"src":"144:62:6","symbolAliases":[{"foreign":{"id":1707,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"152:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1710,"name":"IERC165","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":3298,"src":"357:7:6"},"id":1711,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1709,"nodeType":"StructuredDocumentation","src":"208:118:6","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1746,"linearizedBaseContracts":[1746,3298],"name":"IERC1155Receiver","nameLocation":"337:16:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1712,"nodeType":"StructuredDocumentation","src":"371:827:6","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1727,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:6","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"operator","nameLocation":"1247:8:6","nodeType":"VariableDeclaration","scope":1727,"src":"1239:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1713,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"from","nameLocation":"1273:4:6","nodeType":"VariableDeclaration","scope":1727,"src":"1265:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"id","nameLocation":"1295:2:6","nodeType":"VariableDeclaration","scope":1727,"src":"1287:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"value","nameLocation":"1315:5:6","nodeType":"VariableDeclaration","scope":1727,"src":"1307:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"data","nameLocation":"1345:4:6","nodeType":"VariableDeclaration","scope":1727,"src":"1330:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1721,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:6"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1727,"src":"1374:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1724,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:6"},"scope":1746,"src":"1203:179:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"1388:995:6","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1745,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:6","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"operator","nameLocation":"2437:8:6","nodeType":"VariableDeclaration","scope":1745,"src":"2429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"from","nameLocation":"2463:4:6","nodeType":"VariableDeclaration","scope":1745,"src":"2455:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"ids","nameLocation":"2496:3:6","nodeType":"VariableDeclaration","scope":1745,"src":"2477:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1734,"nodeType":"ArrayTypeName","src":"2477:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"values","nameLocation":"2528:6:6","nodeType":"VariableDeclaration","scope":1745,"src":"2509:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"nodeType":"ArrayTypeName","src":"2509:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"data","nameLocation":"2559:4:6","nodeType":"VariableDeclaration","scope":1745,"src":"2544:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:6"},"returnParameters":{"id":1744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1745,"src":"2588:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1742,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:6"},"scope":1746,"src":"2388:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1747,"src":"327:2271:6","usedErrors":[],"usedEvents":[]}],"src":"118:2481:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1704],"IERC1155MetadataURI":[1762]},"id":1763,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1748,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1763,"sourceUnit":1705,"src":"158:41:7","symbolAliases":[{"foreign":{"id":1749,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"166:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1752,"name":"IERC1155","nameLocations":["399:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1704,"src":"399:8:7"},"id":1753,"nodeType":"InheritanceSpecifier","src":"399:8:7"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"201:164:7","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1762,"linearizedBaseContracts":[1762,1704,3298],"name":"IERC1155MetadataURI","nameLocation":"376:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"414:192:7","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1761,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:7","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1756,"mutability":"mutable","name":"id","nameLocation":"632:2:7","nodeType":"VariableDeclaration","scope":1761,"src":"624:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:7"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1761,"src":"659:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1758,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:7"},"scope":1762,"src":"611:63:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1763,"src":"366:310:7","usedErrors":[],"usedEvents":[1601,1616,1625,1632]}],"src":"132:545:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1916],"IERC1155Errors":[664],"IERC1155Receiver":[1746]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1764,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":1747,"src":"146:57:8","symbolAliases":[{"foreign":{"id":1765,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"154:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1917,"sourceUnit":665,"src":"204:70:8","symbolAliases":[{"foreign":{"id":1767,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"212:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"276:162:8","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1916,"linearizedBaseContracts":[1916],"name":"ERC1155Utils","nameLocation":"447:12:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1840,"nodeType":"Block","src":"1191:776:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1785,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1205:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:8","memberName":"code","nodeType":"MemberAccess","src":"1205:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:8","memberName":"length","nodeType":"MemberAccess","src":"1205:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1839,"nodeType":"IfStatement","src":"1201:760:8","trueBody":{"id":1838,"nodeType":"Block","src":"1225:736:8","statements":[{"clauses":[{"block":{"id":1816,"nodeType":"Block","src":"1341:221:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"1363:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1804,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1375:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1746_$","typeString":"type(contract IERC1155Receiver)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:8","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"1375:34:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:8","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"1359:189:8","trueBody":{"id":1814,"nodeType":"Block","src":"1420:128:8","statements":[{"errorCall":{"arguments":[{"id":1811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1526:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1808,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1488:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$664_$","typeString":"type(contract IERC1155Errors)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":639,"src":"1488:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"RevertStatement","src":"1481:48:8"}]}}]},"errorName":"","id":1817,"nodeType":"TryCatchClause","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"response","nameLocation":"1331:8:8","nodeType":"VariableDeclaration","scope":1817,"src":"1324:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1800,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:8"},"src":"1315:247:8"},{"block":{"id":1835,"nodeType":"Block","src":"1591:360:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1821,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"1613:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:8","memberName":"length","nodeType":"MemberAccess","src":"1613:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1833,"nodeType":"Block","src":"1784:153:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:88:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1868:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"1876:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:8"},"nodeType":"YulFunctionCall","src":"1864:17:8"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1889:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1883:5:8"},"nodeType":"YulFunctionCall","src":"1883:13:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:8"},"nodeType":"YulFunctionCall","src":"1857:40:8"},"nodeType":"YulExpressionStatement","src":"1857:40:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1819,"isOffset":false,"isSlot":false,"src":"1868:6:8","valueSize":1},{"declaration":1819,"isOffset":false,"isSlot":false,"src":"1889:6:8","valueSize":1}],"flags":["memory-safe"],"id":1832,"nodeType":"InlineAssembly","src":"1806:113:8"}]},"id":1834,"nodeType":"IfStatement","src":"1609:328:8","trueBody":{"id":1831,"nodeType":"Block","src":"1633:145:8","statements":[{"errorCall":{"arguments":[{"id":1828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1756:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1825,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"1718:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$664_$","typeString":"type(contract IERC1155Errors)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":639,"src":"1718:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1830,"nodeType":"RevertStatement","src":"1711:48:8"}]}}]},"errorName":"","id":1836,"nodeType":"TryCatchClause","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"reason","nameLocation":"1583:6:8","nodeType":"VariableDeclaration","scope":1836,"src":"1570:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1818,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:8"},"src":"1563:388:8"}],"externalCall":{"arguments":[{"id":1794,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"1282:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1795,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1292:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1796,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"1298:2:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1798,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"1309:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1791,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1260:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1790,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"1243:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1746_$","typeString":"type(contract IERC1155Receiver)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1746","typeString":"contract IERC1155Receiver"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:8","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1727,"src":"1243:38:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:8","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1837,"nodeType":"TryStatement","src":"1239:712:8"}]}}]},"documentation":{"id":1770,"nodeType":"StructuredDocumentation","src":"466:535:8","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:8","nodeType":"FunctionDefinition","parameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1772,"mutability":"mutable","name":"operator","nameLocation":"1055:8:8","nodeType":"VariableDeclaration","scope":1841,"src":"1047:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1771,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"from","nameLocation":"1081:4:8","nodeType":"VariableDeclaration","scope":1841,"src":"1073:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"to","nameLocation":"1103:2:8","nodeType":"VariableDeclaration","scope":1841,"src":"1095:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"id","nameLocation":"1123:2:8","nodeType":"VariableDeclaration","scope":1841,"src":"1115:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"value","nameLocation":"1143:5:8","nodeType":"VariableDeclaration","scope":1841,"src":"1135:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1782,"mutability":"mutable","name":"data","nameLocation":"1171:4:8","nodeType":"VariableDeclaration","scope":1841,"src":"1158:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:8"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[],"src":"1191:0:8"},"scope":1916,"src":"1006:961:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"2733:818:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1859,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"2747:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:8","memberName":"code","nodeType":"MemberAccess","src":"2747:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:8","memberName":"length","nodeType":"MemberAccess","src":"2747:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"2743:802:8","trueBody":{"id":1912,"nodeType":"Block","src":"2767:778:8","statements":[{"clauses":[{"block":{"id":1890,"nodeType":"Block","src":"2920:226:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2942:8:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1878,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2954:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1746_$","typeString":"type(contract IERC1155Receiver)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:8","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"2954:39:8","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:8","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1889,"nodeType":"IfStatement","src":"2938:194:8","trueBody":{"id":1888,"nodeType":"Block","src":"3004:128:8","statements":[{"errorCall":{"arguments":[{"id":1885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3110:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1882,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3072:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$664_$","typeString":"type(contract IERC1155Errors)"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":639,"src":"3072:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"RevertStatement","src":"3065:48:8"}]}}]},"errorName":"","id":1891,"nodeType":"TryCatchClause","parameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"response","nameLocation":"2897:8:8","nodeType":"VariableDeclaration","scope":1891,"src":"2890:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1874,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:8"},"src":"2864:282:8"},{"block":{"id":1909,"nodeType":"Block","src":"3175:360:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1895,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"3197:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:8","memberName":"length","nodeType":"MemberAccess","src":"3197:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1907,"nodeType":"Block","src":"3368:153:8","statements":[{"AST":{"nodeType":"YulBlock","src":"3415:88:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3452:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3460:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3448:3:8"},"nodeType":"YulFunctionCall","src":"3448:17:8"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3473:6:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3467:5:8"},"nodeType":"YulFunctionCall","src":"3467:13:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3441:6:8"},"nodeType":"YulFunctionCall","src":"3441:40:8"},"nodeType":"YulExpressionStatement","src":"3441:40:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1893,"isOffset":false,"isSlot":false,"src":"3452:6:8","valueSize":1},{"declaration":1893,"isOffset":false,"isSlot":false,"src":"3473:6:8","valueSize":1}],"flags":["memory-safe"],"id":1906,"nodeType":"InlineAssembly","src":"3390:113:8"}]},"id":1908,"nodeType":"IfStatement","src":"3193:328:8","trueBody":{"id":1905,"nodeType":"Block","src":"3217:145:8","statements":[{"errorCall":{"arguments":[{"id":1902,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3340:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1899,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3302:14:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$664_$","typeString":"type(contract IERC1155Errors)"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:8","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":639,"src":"3302:37:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1904,"nodeType":"RevertStatement","src":"3295:48:8"}]}}]},"errorName":"","id":1910,"nodeType":"TryCatchClause","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"reason","nameLocation":"3167:6:8","nodeType":"VariableDeclaration","scope":1910,"src":"3154:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1892,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:8"},"src":"3147:388:8"}],"externalCall":{"arguments":[{"id":1868,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2829:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1869,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"2839:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1851,"src":"2845:3:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1871,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"2850:6:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1872,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"2858:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"2802:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2785:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1746_$","typeString":"type(contract IERC1155Receiver)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1746","typeString":"contract IERC1155Receiver"}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:8","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1745,"src":"2785:43:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:8","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1911,"nodeType":"TryStatement","src":"2781:754:8"}]}}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"1973:545:8","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:8","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"operator","nameLocation":"2577:8:8","nodeType":"VariableDeclaration","scope":1915,"src":"2569:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"from","nameLocation":"2603:4:8","nodeType":"VariableDeclaration","scope":1915,"src":"2595:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"to","nameLocation":"2625:2:8","nodeType":"VariableDeclaration","scope":1915,"src":"2617:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1851,"mutability":"mutable","name":"ids","nameLocation":"2654:3:8","nodeType":"VariableDeclaration","scope":1915,"src":"2637:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1849,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1850,"nodeType":"ArrayTypeName","src":"2637:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"values","nameLocation":"2684:6:8","nodeType":"VariableDeclaration","scope":1915,"src":"2667:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ArrayTypeName","src":"2667:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"data","nameLocation":"2713:4:8","nodeType":"VariableDeclaration","scope":1915,"src":"2700:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1855,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:8"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"2733:0:8"},"scope":1916,"src":"2523:1028:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1917,"src":"439:3114:8","usedErrors":[],"usedEvents":[]}],"src":"120:3434:8"},"id":8},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[2894],"Comparators":[2926],"Math":[4919],"SlotDerivation":[3138],"StorageSlot":[3262]},"id":2895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":1920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":2927,"src":"209:46:9","symbolAliases":[{"foreign":{"id":1919,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"217:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":1922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":3139,"src":"256:52:9","symbolAliases":[{"foreign":{"id":1921,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"264:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1924,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":3263,"src":"309:46:9","symbolAliases":[{"foreign":{"id":1923,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"317:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1926,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2895,"sourceUnit":4920,"src":"356:37:9","symbolAliases":[{"foreign":{"id":1925,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"364:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":1927,"nodeType":"StructuredDocumentation","src":"395:63:9","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":2894,"linearizedBaseContracts":[2894],"name":"Arrays","nameLocation":"467:6:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1930,"libraryName":{"id":1928,"name":"SlotDerivation","nameLocations":["486:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":3138,"src":"486:14:9"},"nodeType":"UsingForDirective","src":"480:33:9","typeName":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":1933,"libraryName":{"id":1931,"name":"StorageSlot","nameLocations":["524:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3262,"src":"524:11:9"},"nodeType":"UsingForDirective","src":"518:30:9","typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":1965,"nodeType":"Block","src":"1628:83:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1955,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1656:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1954,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"1649:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1958,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1669:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1957,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"1664:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1960,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"1677:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1953,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"1638:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1962,"nodeType":"ExpressionStatement","src":"1638:44:9"},{"expression":{"id":1963,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"1699:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1952,"id":1964,"nodeType":"Return","src":"1692:12:9"}]},"documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"554:915:9","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:9","nodeType":"FunctionDefinition","parameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"array","nameLocation":"1514:5:9","nodeType":"VariableDeclaration","scope":1966,"src":"1497:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1936,"nodeType":"ArrayTypeName","src":"1497:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"comp","nameLocation":"1576:4:9","nodeType":"VariableDeclaration","scope":1966,"src":"1529:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":1946,"nodeType":"FunctionTypeName","parameterTypes":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"1538:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1938,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"1547:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:9"},"returnParameterTypes":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1946,"src":"1570:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1943,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:9"},"src":"1529:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:9"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"1610:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1950,"nodeType":"ArrayTypeName","src":"1610:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:9"},"scope":2894,"src":"1474:237:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1984,"nodeType":"Block","src":"1894:66:9","statements":[{"expression":{"arguments":[{"id":1977,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1909:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1978,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"1916:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2926_$","typeString":"type(library Comparators)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"1916:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":1976,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1966,1985,2017,2038,2070,2091],"referencedDeclaration":1966,"src":"1904:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1981,"nodeType":"ExpressionStatement","src":"1904:27:9"},{"expression":{"id":1982,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"1948:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1975,"id":1983,"nodeType":"Return","src":"1941:12:9"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1717:93:9","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:9","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"array","nameLocation":"1846:5:9","nodeType":"VariableDeclaration","scope":1985,"src":"1829:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"nodeType":"ArrayTypeName","src":"1829:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:9"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"1876:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1973,"nodeType":"ArrayTypeName","src":"1876:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:9"},"scope":2894,"src":"1815:145:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"3040:97:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2007,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3075:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2006,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2242,2254],"referencedDeclaration":2242,"src":"3055:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2010,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3102:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2009,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2280,2306],"referencedDeclaration":2280,"src":"3083:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2005,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1966,1985,2017,2038,2070,2091],"referencedDeclaration":1966,"src":"3050:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2013,"nodeType":"ExpressionStatement","src":"3050:58:9"},{"expression":{"id":2014,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"3125:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2004,"id":2015,"nodeType":"Return","src":"3118:12:9"}]},"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"1966:915:9","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:9","nodeType":"FunctionDefinition","parameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"array","nameLocation":"2926:5:9","nodeType":"VariableDeclaration","scope":2017,"src":"2909:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1988,"nodeType":"ArrayTypeName","src":"2909:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1999,"mutability":"mutable","name":"comp","nameLocation":"2988:4:9","nodeType":"VariableDeclaration","scope":2017,"src":"2941:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":1998,"nodeType":"FunctionTypeName","parameterTypes":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"2950:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"2959:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:9"},"returnParameterTypes":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1998,"src":"2982:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1995,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:9"},"src":"2941:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:9"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"3022:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2002,"nodeType":"ArrayTypeName","src":"3022:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:9"},"scope":2894,"src":"2886:251:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"3320:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2029,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3355:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2028,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2242,2254],"referencedDeclaration":2242,"src":"3335:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2031,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"3363:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2926_$","typeString":"type(library Comparators)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"3363:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2027,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1966,1985,2017,2038,2070,2091],"referencedDeclaration":1966,"src":"3330:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2034,"nodeType":"ExpressionStatement","src":"3330:48:9"},{"expression":{"id":2035,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3395:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2026,"id":2036,"nodeType":"Return","src":"3388:12:9"}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"3143:93:9","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:9","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"array","nameLocation":"3272:5:9","nodeType":"VariableDeclaration","scope":2038,"src":"3255:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2020,"nodeType":"ArrayTypeName","src":"3255:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:9"},"returnParameters":{"id":2026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"3302:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2023,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2024,"nodeType":"ArrayTypeName","src":"3302:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:9"},"scope":2894,"src":"3241:166:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"4487:97:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2060,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4522:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2059,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2242,2254],"referencedDeclaration":2254,"src":"4502:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2063,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"4549:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2062,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[2280,2306],"referencedDeclaration":2306,"src":"4530:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2058,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1966,1985,2017,2038,2070,2091],"referencedDeclaration":1966,"src":"4497:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2066,"nodeType":"ExpressionStatement","src":"4497:58:9"},{"expression":{"id":2067,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4572:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2057,"id":2068,"nodeType":"Return","src":"4565:12:9"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"3413:915:9","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:9","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"array","nameLocation":"4373:5:9","nodeType":"VariableDeclaration","scope":2070,"src":"4356:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2040,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2041,"nodeType":"ArrayTypeName","src":"4356:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"comp","nameLocation":"4435:4:9","nodeType":"VariableDeclaration","scope":2070,"src":"4388:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2051,"nodeType":"FunctionTypeName","parameterTypes":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"4397:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"4406:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:9"},"returnParameterTypes":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2051,"src":"4429:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2048,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:9"},"src":"4388:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:9"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2070,"src":"4469:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2055,"nodeType":"ArrayTypeName","src":"4469:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:9"},"scope":2894,"src":"4333:251:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"4767:87:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2082,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"4802:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2081,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[2242,2254],"referencedDeclaration":2254,"src":"4782:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2084,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"4810:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$2926_$","typeString":"type(library Comparators)"}},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:9","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":2911,"src":"4810:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2080,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[1966,1985,2017,2038,2070,2091],"referencedDeclaration":1966,"src":"4777:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2087,"nodeType":"ExpressionStatement","src":"4777:48:9"},{"expression":{"id":2088,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"4842:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2079,"id":2089,"nodeType":"Return","src":"4835:12:9"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"4590:93:9","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:9","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2074,"mutability":"mutable","name":"array","nameLocation":"4719:5:9","nodeType":"VariableDeclaration","scope":2091,"src":"4702:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2073,"nodeType":"ArrayTypeName","src":"4702:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:9"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"4749:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2077,"nodeType":"ArrayTypeName","src":"4749:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:9"},"scope":2894,"src":"4688:166:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"5470:889:9","statements":[{"id":2177,"nodeType":"UncheckedBlock","src":"5480:873:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2109,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5508:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2110,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5514:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2115,"nodeType":"IfStatement","src":"5504:31:9","trueBody":{"functionReturnParameters":2108,"id":2114,"nodeType":"Return","src":"5528:7:9"}},{"assignments":[2117],"declarations":[{"constant":false,"id":2117,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:9","nodeType":"VariableDeclaration","scope":2177,"src":"5591:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2121,"initialValue":{"arguments":[{"id":2119,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5614:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2118,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"5607:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:9"},{"assignments":[2123],"declarations":[{"constant":false,"id":2123,"mutability":"mutable","name":"pos","nameLocation":"5715:3:9","nodeType":"VariableDeclaration","scope":2177,"src":"5707:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2125,"initialValue":{"id":2124,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5721:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:9"},{"body":{"id":2156,"nodeType":"Block","src":"5795:331:9","statements":[{"condition":{"arguments":[{"arguments":[{"id":2141,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5829:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2140,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"5822:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2143,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2117,"src":"5834:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"5817:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2155,"nodeType":"IfStatement","src":"5813:299:9","trueBody":{"id":2154,"nodeType":"Block","src":"5842:270:9","statements":[{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2145,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6046:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"6046:11:9"},{"expression":{"arguments":[{"id":2150,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6085:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2151,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"6090:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6079:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2153,"nodeType":"ExpressionStatement","src":"6079:14:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2132,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5773:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2133,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"5778:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2157,"initializationExpression":{"assignments":[2127],"declarations":[{"constant":false,"id":2127,"mutability":"mutable","name":"it","nameLocation":"5754:2:9","nodeType":"VariableDeclaration","scope":2157,"src":"5746:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2131,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2128,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5759:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:9"},"loopExpression":{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2135,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"5783:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"5783:10:9"},"nodeType":"ForStatement","src":"5741:385:9"},{"expression":{"arguments":[{"id":2159,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"6146:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2160,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6153:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2158,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"6140:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"ExpressionStatement","src":"6140:17:9"},{"expression":{"arguments":[{"id":2164,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"6207:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2165,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6214:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2166,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6219:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2163,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"6196:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2168,"nodeType":"ExpressionStatement","src":"6196:28:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"6284:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2173,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"6296:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2174,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6301:4:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2169,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2179,"src":"6273:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2176,"nodeType":"ExpressionStatement","src":"6273:33:9"}]}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"4860:491:9","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:9","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"begin","nameLocation":"5384:5:9","nodeType":"VariableDeclaration","scope":2179,"src":"5376:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2096,"mutability":"mutable","name":"end","nameLocation":"5399:3:9","nodeType":"VariableDeclaration","scope":2179,"src":"5391:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2106,"mutability":"mutable","name":"comp","nameLocation":"5451:4:9","nodeType":"VariableDeclaration","scope":2179,"src":"5404:51:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2105,"nodeType":"FunctionTypeName","parameterTypes":{"id":2101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"5413:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"5422:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2099,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:9"},"returnParameterTypes":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2105,"src":"5445:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2102,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:9"},"src":"5404:51:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:9"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[],"src":"5470:0:9"},"scope":2894,"src":"5356:1003:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2189,"nodeType":"Block","src":"6532:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:9","statements":[{"nodeType":"YulAssignment","src":"6581:23:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:9"},"nodeType":"YulFunctionCall","src":"6588:16:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2183,"isOffset":false,"isSlot":false,"src":"6592:5:9","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":false,"src":"6581:3:9","valueSize":1}],"flags":["memory-safe"],"id":2188,"nodeType":"InlineAssembly","src":"6542:72:9"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"6365:87:9","text":" @dev Pointer to the memory location of the first element of `array`."},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:9","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"array","nameLocation":"6490:5:9","nodeType":"VariableDeclaration","scope":2190,"src":"6473:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2181,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ArrayTypeName","src":"6473:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:9"},"returnParameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:9","nodeType":"VariableDeclaration","scope":2190,"src":"6519:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:9"},"scope":2894,"src":"6457:163:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2209,"nodeType":"Block","src":"6892:93:9","statements":[{"id":2208,"nodeType":"UncheckedBlock","src":"6902:77:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2200,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"6940:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2199,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2190,"src":"6933:6:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2202,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"6949:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:9","memberName":"length","nodeType":"MemberAccess","src":"6949:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":2204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2198,"id":2207,"nodeType":"Return","src":"6926:42:9"}]}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"6626:188:9","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:9","nodeType":"FunctionDefinition","parameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"array","nameLocation":"6850:5:9","nodeType":"VariableDeclaration","scope":2210,"src":"6833:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2192,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ArrayTypeName","src":"6833:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:9"},"returnParameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:9","nodeType":"VariableDeclaration","scope":2210,"src":"6879:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2196,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:9"},"scope":2894,"src":"6819:166:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2219,"nodeType":"Block","src":"7136:68:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:9","statements":[{"nodeType":"YulAssignment","src":"7169:19:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:9"},"nodeType":"YulFunctionCall","src":"7178:10:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2213,"isOffset":false,"isSlot":false,"src":"7184:3:9","valueSize":1},{"declaration":2216,"isOffset":false,"isSlot":false,"src":"7169:5:9","valueSize":1}],"id":2218,"nodeType":"InlineAssembly","src":"7146:52:9"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"6991:74:9","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:9","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:9","nodeType":"VariableDeclaration","scope":2220,"src":"7086:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2212,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:9"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"value","nameLocation":"7129:5:9","nodeType":"VariableDeclaration","scope":2220,"src":"7121:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:9"},"scope":2894,"src":"7070:134:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2229,"nodeType":"Block","src":"7348:178:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:9","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:9"},"nodeType":"YulFunctionCall","src":"7395:11:9"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:9","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:9"},"nodeType":"YulFunctionCall","src":"7433:11:9"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:9","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:9"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:9"},"nodeType":"YulFunctionCall","src":"7457:20:9"},"nodeType":"YulExpressionStatement","src":"7457:20:9"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:9"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:9"},"nodeType":"YulFunctionCall","src":"7490:20:9"},"nodeType":"YulExpressionStatement","src":"7490:20:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2223,"isOffset":false,"isSlot":false,"src":"7401:4:9","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"7464:4:9","valueSize":1},{"declaration":2225,"isOffset":false,"isSlot":false,"src":"7439:4:9","valueSize":1},{"declaration":2225,"isOffset":false,"isSlot":false,"src":"7497:4:9","valueSize":1}],"id":2228,"nodeType":"InlineAssembly","src":"7358:162:9"}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"7210:77:9","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:9","nodeType":"FunctionDefinition","parameters":{"id":2226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:9","nodeType":"VariableDeclaration","scope":2230,"src":"7307:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2222,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2225,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:9","nodeType":"VariableDeclaration","scope":2230,"src":"7321:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:9"},"returnParameters":{"id":2227,"nodeType":"ParameterList","parameters":[],"src":"7348:0:9"},"scope":2894,"src":"7292:234:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2241,"nodeType":"Block","src":"7713:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:9","statements":[{"nodeType":"YulAssignment","src":"7746:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2234,"isOffset":false,"isSlot":false,"src":"7756:5:9","valueSize":1},{"declaration":2238,"isOffset":false,"isSlot":false,"src":"7746:6:9","valueSize":1}],"id":2240,"nodeType":"InlineAssembly","src":"7723:48:9"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"7532:76:9","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:9","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"input","nameLocation":"7659:5:9","nodeType":"VariableDeclaration","scope":2242,"src":"7642:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2233,"nodeType":"ArrayTypeName","src":"7642:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:9"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"output","nameLocation":"7705:6:9","nodeType":"VariableDeclaration","scope":2242,"src":"7688:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ArrayTypeName","src":"7688:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:9"},"scope":2894,"src":"7613:164:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2253,"nodeType":"Block","src":"7964:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:9","statements":[{"nodeType":"YulAssignment","src":"7997:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2246,"isOffset":false,"isSlot":false,"src":"8007:5:9","valueSize":1},{"declaration":2250,"isOffset":false,"isSlot":false,"src":"7997:6:9","valueSize":1}],"id":2252,"nodeType":"InlineAssembly","src":"7974:48:9"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"7783:76:9","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":2254,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:9","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"input","nameLocation":"7910:5:9","nodeType":"VariableDeclaration","scope":2254,"src":"7893:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2245,"nodeType":"ArrayTypeName","src":"7893:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:9"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"output","nameLocation":"7956:6:9","nodeType":"VariableDeclaration","scope":2254,"src":"7939:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2249,"nodeType":"ArrayTypeName","src":"7939:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:9"},"scope":2894,"src":"7864:164:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2279,"nodeType":"Block","src":"8290:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:9","statements":[{"nodeType":"YulAssignment","src":"8323:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2265,"isOffset":false,"isSlot":false,"src":"8333:5:9","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"8323:6:9","valueSize":1}],"id":2278,"nodeType":"InlineAssembly","src":"8300:48:9"}]},"documentation":{"id":2255,"nodeType":"StructuredDocumentation","src":"8034:78:9","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:9","nodeType":"FunctionDefinition","parameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"input","nameLocation":"8201:5:9","nodeType":"VariableDeclaration","scope":2280,"src":"8154:52:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2264,"nodeType":"FunctionTypeName","parameterTypes":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"8163:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"8172:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2258,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:9"},"returnParameterTypes":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"8195:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2261,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:9"},"src":"8154:52:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:9"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"output","nameLocation":"8282:6:9","nodeType":"VariableDeclaration","scope":2280,"src":"8235:53:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2275,"nodeType":"FunctionTypeName","parameterTypes":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"8244:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"8253:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:9"},"returnParameterTypes":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"8276:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2272,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:9"},"src":"8235:53:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:9"},"scope":2894,"src":"8117:237:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2305,"nodeType":"Block","src":"8616:64:9","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:9","statements":[{"nodeType":"YulAssignment","src":"8649:15:9","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:9"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2291,"isOffset":false,"isSlot":false,"src":"8659:5:9","valueSize":1},{"declaration":2302,"isOffset":false,"isSlot":false,"src":"8649:6:9","valueSize":1}],"id":2304,"nodeType":"InlineAssembly","src":"8626:48:9"}]},"documentation":{"id":2281,"nodeType":"StructuredDocumentation","src":"8360:78:9","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":2306,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:9","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"input","nameLocation":"8527:5:9","nodeType":"VariableDeclaration","scope":2306,"src":"8480:52:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2290,"nodeType":"FunctionTypeName","parameterTypes":{"id":2286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"8489:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"8498:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2284,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:9"},"returnParameterTypes":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"8521:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2287,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:9"},"src":"8480:52:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:9"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"output","nameLocation":"8608:6:9","nodeType":"VariableDeclaration","scope":2306,"src":"8561:53:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2301,"nodeType":"FunctionTypeName","parameterTypes":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"8570:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"8579:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:9"},"returnParameterTypes":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2301,"src":"8602:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2298,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:9"},"src":"8561:53:9","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:9"},"scope":2894,"src":"8443:237:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2388,"nodeType":"Block","src":"9405:834:9","statements":[{"assignments":[2318],"declarations":[{"constant":false,"id":2318,"mutability":"mutable","name":"low","nameLocation":"9423:3:9","nodeType":"VariableDeclaration","scope":2388,"src":"9415:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2320,"initialValue":{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:9"},{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"high","nameLocation":"9448:4:9","nodeType":"VariableDeclaration","scope":2388,"src":"9440:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2325,"initialValue":{"expression":{"id":2323,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"9455:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:9","memberName":"length","nodeType":"MemberAccess","src":"9455:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2326,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9482:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2332,"nodeType":"IfStatement","src":"9478:48:9","trueBody":{"id":2331,"nodeType":"Block","src":"9493:33:9","statements":[{"expression":{"hexValue":"30","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2316,"id":2330,"nodeType":"Return","src":"9507:8:9"}]}},{"body":{"id":2364,"nodeType":"Block","src":"9555:423:9","statements":[{"assignments":[2337],"declarations":[{"constant":false,"id":2337,"mutability":"mutable","name":"mid","nameLocation":"9577:3:9","nodeType":"VariableDeclaration","scope":2364,"src":"9569:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2336,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2343,"initialValue":{"arguments":[{"id":2340,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"9596:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2341,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9601:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2338,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"9583:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"9583:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2345,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"9844:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2346,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9851:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2344,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2669,2695,2721,2747,2773],"referencedDeclaration":2721,"src":"9831:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3153_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"9831:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2349,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"9864:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2362,"nodeType":"Block","src":"9922:46:9","statements":[{"expression":{"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2356,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"9940:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9946:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2361,"nodeType":"ExpressionStatement","src":"9940:13:9"}]},"id":2363,"nodeType":"IfStatement","src":"9827:141:9","trueBody":{"id":2355,"nodeType":"Block","src":"9873:43:9","statements":[{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2351,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9891:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2352,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"9898:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"9891:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2333,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"9543:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2334,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9549:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2365,"nodeType":"WhileStatement","src":"9536:442:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"10095:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2370,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"10119:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"10126:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2369,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2669,2695,2721,2747,2773],"referencedDeclaration":2721,"src":"10106:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3153_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"10106:34:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2376,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"10144:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2386,"nodeType":"Block","src":"10198:35:9","statements":[{"expression":{"id":2384,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"10219:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2316,"id":2385,"nodeType":"Return","src":"10212:10:9"}]},"id":2387,"nodeType":"IfStatement","src":"10091:142:9","trueBody":{"id":2383,"nodeType":"Block","src":"10153:39:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"10174:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2316,"id":2382,"nodeType":"Return","src":"10167:14:9"}]}}]},"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"8686:616:9","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":2389,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:9","nodeType":"FunctionDefinition","parameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"array","nameLocation":"9349:5:9","nodeType":"VariableDeclaration","scope":2389,"src":"9331:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2308,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ArrayTypeName","src":"9331:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2312,"mutability":"mutable","name":"element","nameLocation":"9364:7:9","nodeType":"VariableDeclaration","scope":2389,"src":"9356:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2311,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:9"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"9396:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2314,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:9"},"scope":2894,"src":"9307:932:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2452,"nodeType":"Block","src":"10756:709:9","statements":[{"assignments":[2401],"declarations":[{"constant":false,"id":2401,"mutability":"mutable","name":"low","nameLocation":"10774:3:9","nodeType":"VariableDeclaration","scope":2452,"src":"10766:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2400,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2403,"initialValue":{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:9"},{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"high","nameLocation":"10799:4:9","nodeType":"VariableDeclaration","scope":2452,"src":"10791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2408,"initialValue":{"expression":{"id":2406,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"10806:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:9","memberName":"length","nodeType":"MemberAccess","src":"10806:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10833:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2415,"nodeType":"IfStatement","src":"10829:48:9","trueBody":{"id":2414,"nodeType":"Block","src":"10844:33:9","statements":[{"expression":{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2399,"id":2413,"nodeType":"Return","src":"10858:8:9"}]}},{"body":{"id":2448,"nodeType":"Block","src":"10906:532:9","statements":[{"assignments":[2420],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"mid","nameLocation":"10928:3:9","nodeType":"VariableDeclaration","scope":2448,"src":"10920:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2419,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2426,"initialValue":{"arguments":[{"id":2423,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"10947:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10952:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2421,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"10934:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"10934:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2428,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11195:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2429,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11202:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2427,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2669,2695,2721,2747,2773],"referencedDeclaration":2721,"src":"11182:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3153_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"11182:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2432,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"11215:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2446,"nodeType":"Block","src":"11385:43:9","statements":[{"expression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2442,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"11403:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2443,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11410:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2445,"nodeType":"ExpressionStatement","src":"11403:10:9"}]},"id":2447,"nodeType":"IfStatement","src":"11178:250:9","trueBody":{"id":2441,"nodeType":"Block","src":"11224:155:9","statements":[{"id":2440,"nodeType":"UncheckedBlock","src":"11301:64:9","statements":[{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2434,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"11333:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"11339:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2439,"nodeType":"ExpressionStatement","src":"11333:13:9"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2416,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"10894:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2417,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10900:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2449,"nodeType":"WhileStatement","src":"10887:551:9"},{"expression":{"id":2450,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"11455:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2399,"id":2451,"nodeType":"Return","src":"11448:10:9"}]},"documentation":{"id":2390,"nodeType":"StructuredDocumentation","src":"10245:412:9","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":2453,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:9","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"array","nameLocation":"10700:5:9","nodeType":"VariableDeclaration","scope":2453,"src":"10682:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2392,"nodeType":"ArrayTypeName","src":"10682:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"element","nameLocation":"10715:7:9","nodeType":"VariableDeclaration","scope":2453,"src":"10707:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:9"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2453,"src":"10747:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:9"},"scope":2894,"src":"10662:803:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2516,"nodeType":"Block","src":"11982:709:9","statements":[{"assignments":[2465],"declarations":[{"constant":false,"id":2465,"mutability":"mutable","name":"low","nameLocation":"12000:3:9","nodeType":"VariableDeclaration","scope":2516,"src":"11992:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2467,"initialValue":{"hexValue":"30","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:9"},{"assignments":[2469],"declarations":[{"constant":false,"id":2469,"mutability":"mutable","name":"high","nameLocation":"12025:4:9","nodeType":"VariableDeclaration","scope":2516,"src":"12017:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2472,"initialValue":{"expression":{"id":2470,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"12032:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:9","memberName":"length","nodeType":"MemberAccess","src":"12032:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2473,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12059:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2479,"nodeType":"IfStatement","src":"12055:48:9","trueBody":{"id":2478,"nodeType":"Block","src":"12070:33:9","statements":[{"expression":{"hexValue":"30","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2463,"id":2477,"nodeType":"Return","src":"12084:8:9"}]}},{"body":{"id":2512,"nodeType":"Block","src":"12132:532:9","statements":[{"assignments":[2484],"declarations":[{"constant":false,"id":2484,"mutability":"mutable","name":"mid","nameLocation":"12154:3:9","nodeType":"VariableDeclaration","scope":2512,"src":"12146:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2483,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2490,"initialValue":{"arguments":[{"id":2487,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12173:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2488,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12178:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2485,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"12160:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"12160:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2492,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"12421:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":2493,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"12428:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2491,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[2669,2695,2721,2747,2773],"referencedDeclaration":2721,"src":"12408:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3153_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":2495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"12408:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2496,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"12441:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2510,"nodeType":"Block","src":"12499:155:9","statements":[{"id":2509,"nodeType":"UncheckedBlock","src":"12576:64:9","statements":[{"expression":{"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2503,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12608:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"12614:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2508,"nodeType":"ExpressionStatement","src":"12608:13:9"}]}]},"id":2511,"nodeType":"IfStatement","src":"12404:250:9","trueBody":{"id":2502,"nodeType":"Block","src":"12450:43:9","statements":[{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2498,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12468:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2499,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"12475:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2501,"nodeType":"ExpressionStatement","src":"12468:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12120:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2481,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"12126:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"WhileStatement","src":"12113:551:9"},{"expression":{"id":2514,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"12681:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2463,"id":2515,"nodeType":"Return","src":"12674:10:9"}]},"documentation":{"id":2454,"nodeType":"StructuredDocumentation","src":"11471:412:9","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":2517,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:9","nodeType":"FunctionDefinition","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2457,"mutability":"mutable","name":"array","nameLocation":"11926:5:9","nodeType":"VariableDeclaration","scope":2517,"src":"11908:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2456,"nodeType":"ArrayTypeName","src":"11908:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2459,"mutability":"mutable","name":"element","nameLocation":"11941:7:9","nodeType":"VariableDeclaration","scope":2517,"src":"11933:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2458,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:9"},"returnParameters":{"id":2463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2517,"src":"11973:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2461,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:9"},"scope":2894,"src":"11888:803:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"12875:709:9","statements":[{"assignments":[2529],"declarations":[{"constant":false,"id":2529,"mutability":"mutable","name":"low","nameLocation":"12893:3:9","nodeType":"VariableDeclaration","scope":2579,"src":"12885:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2528,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2531,"initialValue":{"hexValue":"30","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:9"},{"assignments":[2533],"declarations":[{"constant":false,"id":2533,"mutability":"mutable","name":"high","nameLocation":"12918:4:9","nodeType":"VariableDeclaration","scope":2579,"src":"12910:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2536,"initialValue":{"expression":{"id":2534,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"12925:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:9","memberName":"length","nodeType":"MemberAccess","src":"12925:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2537,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"12952:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2543,"nodeType":"IfStatement","src":"12948:48:9","trueBody":{"id":2542,"nodeType":"Block","src":"12963:33:9","statements":[{"expression":{"hexValue":"30","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2527,"id":2541,"nodeType":"Return","src":"12977:8:9"}]}},{"body":{"id":2575,"nodeType":"Block","src":"13025:532:9","statements":[{"assignments":[2548],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"mid","nameLocation":"13047:3:9","nodeType":"VariableDeclaration","scope":2575,"src":"13039:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2554,"initialValue":{"arguments":[{"id":2551,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"13066:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2552,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"13071:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2549,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13053:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"13053:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2556,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2521,"src":"13320:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2557,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"13327:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2555,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2786,2799,2812,2825,2838],"referencedDeclaration":2812,"src":"13301:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2559,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"13334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2573,"nodeType":"Block","src":"13504:43:9","statements":[{"expression":{"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2569,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"13522:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2570,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"13529:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2572,"nodeType":"ExpressionStatement","src":"13522:10:9"}]},"id":2574,"nodeType":"IfStatement","src":"13297:250:9","trueBody":{"id":2568,"nodeType":"Block","src":"13343:155:9","statements":[{"id":2567,"nodeType":"UncheckedBlock","src":"13420:64:9","statements":[{"expression":{"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2561,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"13452:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2562,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"13458:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2566,"nodeType":"ExpressionStatement","src":"13452:13:9"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"13013:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2545,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"13019:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2576,"nodeType":"WhileStatement","src":"13006:551:9"},{"expression":{"id":2577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2529,"src":"13574:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2527,"id":2578,"nodeType":"Return","src":"13567:10:9"}]},"documentation":{"id":2518,"nodeType":"StructuredDocumentation","src":"12697:74:9","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:9","nodeType":"FunctionDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"array","nameLocation":"12819:5:9","nodeType":"VariableDeclaration","scope":2580,"src":"12802:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ArrayTypeName","src":"12802:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"element","nameLocation":"12834:7:9","nodeType":"VariableDeclaration","scope":2580,"src":"12826:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:9"},"returnParameters":{"id":2527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"12866:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:9"},"scope":2894,"src":"12776:808:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2642,"nodeType":"Block","src":"13768:709:9","statements":[{"assignments":[2592],"declarations":[{"constant":false,"id":2592,"mutability":"mutable","name":"low","nameLocation":"13786:3:9","nodeType":"VariableDeclaration","scope":2642,"src":"13778:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2591,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2594,"initialValue":{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:9"},{"assignments":[2596],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"high","nameLocation":"13811:4:9","nodeType":"VariableDeclaration","scope":2642,"src":"13803:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"initialValue":{"expression":{"id":2597,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"13818:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:9","memberName":"length","nodeType":"MemberAccess","src":"13818:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"13845:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2606,"nodeType":"IfStatement","src":"13841:48:9","trueBody":{"id":2605,"nodeType":"Block","src":"13856:33:9","statements":[{"expression":{"hexValue":"30","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2590,"id":2604,"nodeType":"Return","src":"13870:8:9"}]}},{"body":{"id":2638,"nodeType":"Block","src":"13918:532:9","statements":[{"assignments":[2611],"declarations":[{"constant":false,"id":2611,"mutability":"mutable","name":"mid","nameLocation":"13940:3:9","nodeType":"VariableDeclaration","scope":2638,"src":"13932:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2610,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2617,"initialValue":{"arguments":[{"id":2614,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"13959:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2615,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"13964:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2612,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"13946:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:9","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":3648,"src":"13946:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2619,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"14213:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":2620,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"14220:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2618,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[2786,2799,2812,2825,2838],"referencedDeclaration":2812,"src":"14194:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2622,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"14227:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2636,"nodeType":"Block","src":"14285:155:9","statements":[{"id":2635,"nodeType":"UncheckedBlock","src":"14362:64:9","statements":[{"expression":{"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2629,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"14394:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"14400:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2634,"nodeType":"ExpressionStatement","src":"14394:13:9"}]}]},"id":2637,"nodeType":"IfStatement","src":"14190:250:9","trueBody":{"id":2628,"nodeType":"Block","src":"14236:43:9","statements":[{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"14254:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2625,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"14261:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"14254:10:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2607,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"13906:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2608,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"13912:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"WhileStatement","src":"13899:551:9"},{"expression":{"id":2640,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2592,"src":"14467:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2590,"id":2641,"nodeType":"Return","src":"14460:10:9"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"13590:74:9","text":" @dev Same as {upperBound}, but with an array in memory."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:9","nodeType":"FunctionDefinition","parameters":{"id":2587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"array","nameLocation":"13712:5:9","nodeType":"VariableDeclaration","scope":2643,"src":"13695:22:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2583,"nodeType":"ArrayTypeName","src":"13695:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"element","nameLocation":"13727:7:9","nodeType":"VariableDeclaration","scope":2643,"src":"13719:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:9"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"13759:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:9"},"scope":2894,"src":"13669:808:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"14793:167:9","statements":[{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"slot","nameLocation":"14811:4:9","nodeType":"VariableDeclaration","scope":2668,"src":"14803:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2657,"nodeType":"VariableDeclarationStatement","src":"14803:12:9"},{"AST":{"nodeType":"YulBlock","src":"14850:40:9","statements":[{"nodeType":"YulAssignment","src":"14864:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2647,"isOffset":false,"isSlot":true,"src":"14872:8:9","suffix":"slot","valueSize":1},{"declaration":2656,"isOffset":false,"isSlot":false,"src":"14864:4:9","valueSize":1}],"flags":["memory-safe"],"id":2658,"nodeType":"InlineAssembly","src":"14825:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2663,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"14932:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2659,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"14906:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"14906:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"14906:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3173,"src":"14906:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3144_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3144_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":2654,"id":2667,"nodeType":"Return","src":"14899:54:9"}]},"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"14483:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:9","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"arr","nameLocation":"14719:3:9","nodeType":"VariableDeclaration","scope":2669,"src":"14701:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2646,"nodeType":"ArrayTypeName","src":"14701:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"pos","nameLocation":"14732:3:9","nodeType":"VariableDeclaration","scope":2669,"src":"14724:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:9"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"14760:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3144_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2652,"nodeType":"UserDefinedTypeName","pathNode":{"id":2651,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:9","14772:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3144,"src":"14760:23:9"},"referencedDeclaration":3144,"src":"14760:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3144_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:9"},"scope":2894,"src":"14679:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2694,"nodeType":"Block","src":"15276:167:9","statements":[{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"slot","nameLocation":"15294:4:9","nodeType":"VariableDeclaration","scope":2694,"src":"15286:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2683,"nodeType":"VariableDeclarationStatement","src":"15286:12:9"},{"AST":{"nodeType":"YulBlock","src":"15333:40:9","statements":[{"nodeType":"YulAssignment","src":"15347:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2673,"isOffset":false,"isSlot":true,"src":"15355:8:9","suffix":"slot","valueSize":1},{"declaration":2682,"isOffset":false,"isSlot":false,"src":"15347:4:9","valueSize":1}],"flags":["memory-safe"],"id":2684,"nodeType":"InlineAssembly","src":"15308:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2689,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"15415:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2685,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"15389:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"15389:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"15389:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:9","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3195,"src":"15389:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3150_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3150_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":2680,"id":2693,"nodeType":"Return","src":"15382:54:9"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"14966:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2695,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:9","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"arr","nameLocation":"15202:3:9","nodeType":"VariableDeclaration","scope":2695,"src":"15184:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2672,"nodeType":"ArrayTypeName","src":"15184:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"pos","nameLocation":"15215:3:9","nodeType":"VariableDeclaration","scope":2695,"src":"15207:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2674,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:9"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2695,"src":"15243:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3150_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2678,"nodeType":"UserDefinedTypeName","pathNode":{"id":2677,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:9","15255:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"15243:23:9"},"referencedDeclaration":3150,"src":"15243:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3150_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:9"},"scope":2894,"src":"15162:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2720,"nodeType":"Block","src":"15759:167:9","statements":[{"assignments":[2708],"declarations":[{"constant":false,"id":2708,"mutability":"mutable","name":"slot","nameLocation":"15777:4:9","nodeType":"VariableDeclaration","scope":2720,"src":"15769:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2709,"nodeType":"VariableDeclarationStatement","src":"15769:12:9"},{"AST":{"nodeType":"YulBlock","src":"15816:40:9","statements":[{"nodeType":"YulAssignment","src":"15830:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2699,"isOffset":false,"isSlot":true,"src":"15838:8:9","suffix":"slot","valueSize":1},{"declaration":2708,"isOffset":false,"isSlot":false,"src":"15830:4:9","valueSize":1}],"flags":["memory-safe"],"id":2710,"nodeType":"InlineAssembly","src":"15791:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2715,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"15898:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2711,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2708,"src":"15872:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"15872:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"15872:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:9","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3206,"src":"15872:45:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3153_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":2706,"id":2719,"nodeType":"Return","src":"15865:54:9"}]},"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"15449:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2721,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:9","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"arr","nameLocation":"15685:3:9","nodeType":"VariableDeclaration","scope":2721,"src":"15667:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2698,"nodeType":"ArrayTypeName","src":"15667:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"pos","nameLocation":"15698:3:9","nodeType":"VariableDeclaration","scope":2721,"src":"15690:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2700,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:9"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2721,"src":"15726:31:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2704,"nodeType":"UserDefinedTypeName","pathNode":{"id":2703,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:9","15738:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"15726:23:9"},"referencedDeclaration":3153,"src":"15726:23:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:9"},"scope":2894,"src":"15645:281:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2746,"nodeType":"Block","src":"16238:165:9","statements":[{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"slot","nameLocation":"16256:4:9","nodeType":"VariableDeclaration","scope":2746,"src":"16248:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2735,"nodeType":"VariableDeclarationStatement","src":"16248:12:9"},{"AST":{"nodeType":"YulBlock","src":"16295:40:9","statements":[{"nodeType":"YulAssignment","src":"16309:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16317:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16309:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2725,"isOffset":false,"isSlot":true,"src":"16317:8:9","suffix":"slot","valueSize":1},{"declaration":2734,"isOffset":false,"isSlot":false,"src":"16309:4:9","valueSize":1}],"flags":["memory-safe"],"id":2736,"nodeType":"InlineAssembly","src":"16270:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2741,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"16377:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2737,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16351:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"16351:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"16351:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:9","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":3250,"src":"16351:43:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$3162_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":2732,"id":2745,"nodeType":"Return","src":"16344:52:9"}]},"documentation":{"id":2722,"nodeType":"StructuredDocumentation","src":"15932:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2747,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:9","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"arr","nameLocation":"16166:3:9","nodeType":"VariableDeclaration","scope":2747,"src":"16150:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2723,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2724,"nodeType":"ArrayTypeName","src":"16150:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"pos","nameLocation":"16179:3:9","nodeType":"VariableDeclaration","scope":2747,"src":"16171:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:9"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2747,"src":"16207:29:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2730,"nodeType":"UserDefinedTypeName","pathNode":{"id":2729,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:9","16219:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":3162,"src":"16207:21:9"},"referencedDeclaration":3162,"src":"16207:21:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:9"},"scope":2894,"src":"16128:275:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"16717:166:9","statements":[{"assignments":[2760],"declarations":[{"constant":false,"id":2760,"mutability":"mutable","name":"slot","nameLocation":"16735:4:9","nodeType":"VariableDeclaration","scope":2772,"src":"16727:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2761,"nodeType":"VariableDeclarationStatement","src":"16727:12:9"},{"AST":{"nodeType":"YulBlock","src":"16774:40:9","statements":[{"nodeType":"YulAssignment","src":"16788:16:9","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"16796:8:9"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"16788:4:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2751,"isOffset":false,"isSlot":true,"src":"16796:8:9","suffix":"slot","valueSize":1},{"declaration":2760,"isOffset":false,"isSlot":false,"src":"16788:4:9","valueSize":1}],"flags":["memory-safe"],"id":2762,"nodeType":"InlineAssembly","src":"16749:65:9"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2767,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2753,"src":"16856:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2763,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2760,"src":"16830:4:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:9","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"16830:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:9","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3043,"src":"16830:25:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:9","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":3228,"src":"16830:44:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$3159_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":2758,"id":2771,"nodeType":"Return","src":"16823:53:9"}]},"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"16409:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:9","nodeType":"FunctionDefinition","parameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"arr","nameLocation":"16644:3:9","nodeType":"VariableDeclaration","scope":2773,"src":"16627:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2749,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2750,"nodeType":"ArrayTypeName","src":"16627:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"pos","nameLocation":"16657:3:9","nodeType":"VariableDeclaration","scope":2773,"src":"16649:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:9"},"returnParameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"16685:30:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2756,"nodeType":"UserDefinedTypeName","pathNode":{"id":2755,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:9","16697:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"16685:22:9"},"referencedDeclaration":3159,"src":"16685:22:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:9"},"scope":2894,"src":"16605:278:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"17184:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"17203:73:9","statements":[{"nodeType":"YulAssignment","src":"17217:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17238:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17243:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17234:3:9"},"nodeType":"YulFunctionCall","src":"17234:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17254:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17259:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17250:3:9"},"nodeType":"YulFunctionCall","src":"17250:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17230:3:9"},"nodeType":"YulFunctionCall","src":"17230:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17224:5:9"},"nodeType":"YulFunctionCall","src":"17224:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17217:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2777,"isOffset":false,"isSlot":false,"src":"17238:3:9","valueSize":1},{"declaration":2779,"isOffset":false,"isSlot":false,"src":"17254:3:9","valueSize":1},{"declaration":2782,"isOffset":false,"isSlot":false,"src":"17217:3:9","valueSize":1}],"id":2784,"nodeType":"InlineAssembly","src":"17194:82:9"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"16889:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:9","nodeType":"FunctionDefinition","parameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"arr","nameLocation":"17130:3:9","nodeType":"VariableDeclaration","scope":2786,"src":"17113:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2775,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2776,"nodeType":"ArrayTypeName","src":"17113:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"pos","nameLocation":"17143:3:9","nodeType":"VariableDeclaration","scope":2786,"src":"17135:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2778,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:9"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2782,"mutability":"mutable","name":"res","nameLocation":"17179:3:9","nodeType":"VariableDeclaration","scope":2786,"src":"17171:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2781,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:9"},"scope":2894,"src":"17085:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2798,"nodeType":"Block","src":"17583:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"17602:73:9","statements":[{"nodeType":"YulAssignment","src":"17616:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17637:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17642:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17633:3:9"},"nodeType":"YulFunctionCall","src":"17633:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17653:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17658:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17649:3:9"},"nodeType":"YulFunctionCall","src":"17649:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17629:3:9"},"nodeType":"YulFunctionCall","src":"17629:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17623:5:9"},"nodeType":"YulFunctionCall","src":"17623:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17616:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2790,"isOffset":false,"isSlot":false,"src":"17637:3:9","valueSize":1},{"declaration":2792,"isOffset":false,"isSlot":false,"src":"17653:3:9","valueSize":1},{"declaration":2795,"isOffset":false,"isSlot":false,"src":"17616:3:9","valueSize":1}],"id":2797,"nodeType":"InlineAssembly","src":"17593:82:9"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"17288:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:9","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"arr","nameLocation":"17529:3:9","nodeType":"VariableDeclaration","scope":2799,"src":"17512:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2789,"nodeType":"ArrayTypeName","src":"17512:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2792,"mutability":"mutable","name":"pos","nameLocation":"17542:3:9","nodeType":"VariableDeclaration","scope":2799,"src":"17534:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:9"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"res","nameLocation":"17578:3:9","nodeType":"VariableDeclaration","scope":2799,"src":"17570:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:9"},"scope":2894,"src":"17484:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2811,"nodeType":"Block","src":"17982:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"18001:73:9","statements":[{"nodeType":"YulAssignment","src":"18015:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18036:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18041:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18032:3:9"},"nodeType":"YulFunctionCall","src":"18032:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18057:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18048:3:9"},"nodeType":"YulFunctionCall","src":"18048:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18028:3:9"},"nodeType":"YulFunctionCall","src":"18028:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18022:5:9"},"nodeType":"YulFunctionCall","src":"18022:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18015:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2803,"isOffset":false,"isSlot":false,"src":"18036:3:9","valueSize":1},{"declaration":2805,"isOffset":false,"isSlot":false,"src":"18052:3:9","valueSize":1},{"declaration":2808,"isOffset":false,"isSlot":false,"src":"18015:3:9","valueSize":1}],"id":2810,"nodeType":"InlineAssembly","src":"17992:82:9"}]},"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"17687:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:9","nodeType":"FunctionDefinition","parameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"arr","nameLocation":"17928:3:9","nodeType":"VariableDeclaration","scope":2812,"src":"17911:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2802,"nodeType":"ArrayTypeName","src":"17911:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2805,"mutability":"mutable","name":"pos","nameLocation":"17941:3:9","nodeType":"VariableDeclaration","scope":2812,"src":"17933:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:9"},"returnParameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"res","nameLocation":"17977:3:9","nodeType":"VariableDeclaration","scope":2812,"src":"17969:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:9"},"scope":2894,"src":"17883:197:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2824,"nodeType":"Block","src":"18384:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"18403:73:9","statements":[{"nodeType":"YulAssignment","src":"18417:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18438:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18443:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18434:3:9"},"nodeType":"YulFunctionCall","src":"18434:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18454:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18459:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18450:3:9"},"nodeType":"YulFunctionCall","src":"18450:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18430:3:9"},"nodeType":"YulFunctionCall","src":"18430:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18424:5:9"},"nodeType":"YulFunctionCall","src":"18424:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18417:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2816,"isOffset":false,"isSlot":false,"src":"18438:3:9","valueSize":1},{"declaration":2818,"isOffset":false,"isSlot":false,"src":"18454:3:9","valueSize":1},{"declaration":2821,"isOffset":false,"isSlot":false,"src":"18417:3:9","valueSize":1}],"id":2823,"nodeType":"InlineAssembly","src":"18394:82:9"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"18086:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2825,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:9","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"arr","nameLocation":"18325:3:9","nodeType":"VariableDeclaration","scope":2825,"src":"18310:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2814,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2815,"nodeType":"ArrayTypeName","src":"18310:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"pos","nameLocation":"18338:3:9","nodeType":"VariableDeclaration","scope":2825,"src":"18330:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:9"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"res","nameLocation":"18379:3:9","nodeType":"VariableDeclaration","scope":2825,"src":"18366:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2820,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:9"},"scope":2894,"src":"18282:200:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2837,"nodeType":"Block","src":"18788:98:9","statements":[{"AST":{"nodeType":"YulBlock","src":"18807:73:9","statements":[{"nodeType":"YulAssignment","src":"18821:49:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"18842:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18847:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18838:3:9"},"nodeType":"YulFunctionCall","src":"18838:14:9"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18858:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18863:4:9","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18854:3:9"},"nodeType":"YulFunctionCall","src":"18854:14:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18834:3:9"},"nodeType":"YulFunctionCall","src":"18834:35:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18828:5:9"},"nodeType":"YulFunctionCall","src":"18828:42:9"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"18821:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2829,"isOffset":false,"isSlot":false,"src":"18842:3:9","valueSize":1},{"declaration":2831,"isOffset":false,"isSlot":false,"src":"18858:3:9","valueSize":1},{"declaration":2834,"isOffset":false,"isSlot":false,"src":"18821:3:9","valueSize":1}],"id":2836,"nodeType":"InlineAssembly","src":"18798:82:9"}]},"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"18488:191:9","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":2838,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:9","nodeType":"FunctionDefinition","parameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"arr","nameLocation":"18728:3:9","nodeType":"VariableDeclaration","scope":2838,"src":"18712:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2827,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2828,"nodeType":"ArrayTypeName","src":"18712:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"pos","nameLocation":"18741:3:9","nodeType":"VariableDeclaration","scope":2838,"src":"18733:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:9"},"returnParameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"res","nameLocation":"18783:3:9","nodeType":"VariableDeclaration","scope":2838,"src":"18769:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2833,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:9"},"scope":2894,"src":"18684:202:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2848,"nodeType":"Block","src":"19202:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"19237:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19258:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"19270:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19251:6:9"},"nodeType":"YulFunctionCall","src":"19251:23:9"},"nodeType":"YulExpressionStatement","src":"19251:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2842,"isOffset":false,"isSlot":true,"src":"19258:10:9","suffix":"slot","valueSize":1},{"declaration":2844,"isOffset":false,"isSlot":false,"src":"19270:3:9","valueSize":1}],"flags":["memory-safe"],"id":2847,"nodeType":"InlineAssembly","src":"19212:72:9"}]},"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"18892:233:9","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2849,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:9","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"array","nameLocation":"19173:5:9","nodeType":"VariableDeclaration","scope":2849,"src":"19155:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2841,"nodeType":"ArrayTypeName","src":"19155:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"len","nameLocation":"19188:3:9","nodeType":"VariableDeclaration","scope":2849,"src":"19180:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:9"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[],"src":"19202:0:9"},"scope":2894,"src":"19130:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2859,"nodeType":"Block","src":"19606:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"19641:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"19662:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"19674:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19655:6:9"},"nodeType":"YulFunctionCall","src":"19655:23:9"},"nodeType":"YulExpressionStatement","src":"19655:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2853,"isOffset":false,"isSlot":true,"src":"19662:10:9","suffix":"slot","valueSize":1},{"declaration":2855,"isOffset":false,"isSlot":false,"src":"19674:3:9","valueSize":1}],"flags":["memory-safe"],"id":2858,"nodeType":"InlineAssembly","src":"19616:72:9"}]},"documentation":{"id":2850,"nodeType":"StructuredDocumentation","src":"19296:233:9","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2860,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:9","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"array","nameLocation":"19577:5:9","nodeType":"VariableDeclaration","scope":2860,"src":"19559:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2852,"nodeType":"ArrayTypeName","src":"19559:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"len","nameLocation":"19592:3:9","nodeType":"VariableDeclaration","scope":2860,"src":"19584:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:9"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"19606:0:9"},"scope":2894,"src":"19534:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"20010:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"20045:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20066:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"20078:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20059:6:9"},"nodeType":"YulFunctionCall","src":"20059:23:9"},"nodeType":"YulExpressionStatement","src":"20059:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2864,"isOffset":false,"isSlot":true,"src":"20066:10:9","suffix":"slot","valueSize":1},{"declaration":2866,"isOffset":false,"isSlot":false,"src":"20078:3:9","valueSize":1}],"flags":["memory-safe"],"id":2869,"nodeType":"InlineAssembly","src":"20020:72:9"}]},"documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"19700:233:9","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:9","nodeType":"FunctionDefinition","parameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"array","nameLocation":"19981:5:9","nodeType":"VariableDeclaration","scope":2871,"src":"19963:23:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ArrayTypeName","src":"19963:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"len","nameLocation":"19996:3:9","nodeType":"VariableDeclaration","scope":2871,"src":"19988:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2865,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:9"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[],"src":"20010:0:9"},"scope":2894,"src":"19938:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2881,"nodeType":"Block","src":"20412:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"20447:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20468:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"20480:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20461:6:9"},"nodeType":"YulFunctionCall","src":"20461:23:9"},"nodeType":"YulExpressionStatement","src":"20461:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2875,"isOffset":false,"isSlot":true,"src":"20468:10:9","suffix":"slot","valueSize":1},{"declaration":2877,"isOffset":false,"isSlot":false,"src":"20480:3:9","valueSize":1}],"flags":["memory-safe"],"id":2880,"nodeType":"InlineAssembly","src":"20422:72:9"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"20104:233:9","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2882,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:9","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"array","nameLocation":"20383:5:9","nodeType":"VariableDeclaration","scope":2882,"src":"20367:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2873,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2874,"nodeType":"ArrayTypeName","src":"20367:7:9","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"len","nameLocation":"20398:3:9","nodeType":"VariableDeclaration","scope":2882,"src":"20390:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2876,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:9"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[],"src":"20412:0:9"},"scope":2894,"src":"20342:158:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"20815:88:9","statements":[{"AST":{"nodeType":"YulBlock","src":"20850:47:9","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"20871:10:9"},{"name":"len","nodeType":"YulIdentifier","src":"20883:3:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20864:6:9"},"nodeType":"YulFunctionCall","src":"20864:23:9"},"nodeType":"YulExpressionStatement","src":"20864:23:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2886,"isOffset":false,"isSlot":true,"src":"20871:10:9","suffix":"slot","valueSize":1},{"declaration":2888,"isOffset":false,"isSlot":false,"src":"20883:3:9","valueSize":1}],"flags":["memory-safe"],"id":2891,"nodeType":"InlineAssembly","src":"20825:72:9"}]},"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"20506:233:9","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:9","nodeType":"FunctionDefinition","parameters":{"id":2889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"array","nameLocation":"20786:5:9","nodeType":"VariableDeclaration","scope":2893,"src":"20769:22:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2884,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2885,"nodeType":"ArrayTypeName","src":"20769:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2888,"mutability":"mutable","name":"len","nameLocation":"20801:3:9","nodeType":"VariableDeclaration","scope":2893,"src":"20793:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:9"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[],"src":"20815:0:9"},"scope":2894,"src":"20744:159:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2895,"src":"459:20446:9","usedErrors":[],"usedEvents":[]}],"src":"183:20723:9"},"id":9},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[2926]},"id":2927,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2896,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"131:92:10","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":2926,"linearizedBaseContracts":[2926],"name":"Comparators","nameLocation":"232:11:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2910,"nodeType":"Block","src":"313:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"334:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2905,"id":2909,"nodeType":"Return","src":"323:12:10"}]},"id":2911,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:10","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"a","nameLocation":"270:1:10","nodeType":"VariableDeclaration","scope":2911,"src":"262:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2898,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"b","nameLocation":"281:1:10","nodeType":"VariableDeclaration","scope":2911,"src":"273:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:10"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2911,"src":"307:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2903,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:10"},"scope":2926,"src":"250:92:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2924,"nodeType":"Block","src":"411:29:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"428:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"432:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2919,"id":2923,"nodeType":"Return","src":"421:12:10"}]},"id":2925,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:10","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"a","nameLocation":"368:1:10","nodeType":"VariableDeclaration","scope":2925,"src":"360:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2915,"mutability":"mutable","name":"b","nameLocation":"379:1:10","nodeType":"VariableDeclaration","scope":2925,"src":"371:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:10"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2925,"src":"405:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2917,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:10"},"scope":2926,"src":"348:92:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2927,"src":"224:218:10","usedErrors":[],"usedEvents":[]}],"src":"105:338:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2956]},"id":2957,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2928,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2956,"linearizedBaseContracts":[2956],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2937,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":2934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2933,"id":2936,"nodeType":"Return","src":"728:17:11"}]},"id":2938,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2938,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":2956,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":2943,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2942,"id":2945,"nodeType":"Return","src":"835:15:11"}]},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":2939,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2940,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":2956,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2951,"id":2953,"nodeType":"Return","src":"945:8:11"}]},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2955,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2949,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":2956,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2957,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3008]},"id":3009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2958,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"125:489:12","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3008,"linearizedBaseContracts":[3008],"name":"Panic","nameLocation":"665:5:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2960,"nodeType":"StructuredDocumentation","src":"677:36:12","text":"@dev generic / unspecified error"},"id":2963,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:12","nodeType":"VariableDeclaration","scope":3008,"src":"718:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2964,"nodeType":"StructuredDocumentation","src":"764:37:12","text":"@dev used by the assert() builtin"},"id":2967,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:12","nodeType":"VariableDeclaration","scope":3008,"src":"806:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2965,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2968,"nodeType":"StructuredDocumentation","src":"851:41:12","text":"@dev arithmetic underflow or overflow"},"id":2971,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:12","nodeType":"VariableDeclaration","scope":3008,"src":"897:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2969,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:12","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2972,"nodeType":"StructuredDocumentation","src":"950:35:12","text":"@dev division or modulo by zero"},"id":2975,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:12","nodeType":"VariableDeclaration","scope":3008,"src":"990:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:12","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2976,"nodeType":"StructuredDocumentation","src":"1045:30:12","text":"@dev enum conversion error"},"id":2979,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:12","nodeType":"VariableDeclaration","scope":3008,"src":"1080:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:12","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2980,"nodeType":"StructuredDocumentation","src":"1140:36:12","text":"@dev invalid encoding in storage"},"id":2983,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:12","nodeType":"VariableDeclaration","scope":3008,"src":"1181:55:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:12","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2984,"nodeType":"StructuredDocumentation","src":"1242:24:12","text":"@dev empty array pop"},"id":2987,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:12","nodeType":"VariableDeclaration","scope":3008,"src":"1271:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:12","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2988,"nodeType":"StructuredDocumentation","src":"1325:35:12","text":"@dev array out of bounds access"},"id":2991,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:12","nodeType":"VariableDeclaration","scope":3008,"src":"1365:52:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:12","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"1423:65:12","text":"@dev resource error (too large allocation or too large array)"},"id":2995,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:12","nodeType":"VariableDeclaration","scope":3008,"src":"1493:47:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2993,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:12","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2996,"nodeType":"StructuredDocumentation","src":"1546:42:12","text":"@dev calling invalid internal function"},"id":2999,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:12","nodeType":"VariableDeclaration","scope":3008,"src":"1593:58:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2997,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:12","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3006,"nodeType":"Block","src":"1819:151:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:12","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:12","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:12"},"nodeType":"YulFunctionCall","src":"1868:24:12"},"nodeType":"YulExpressionStatement","src":"1868:24:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:12","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:12"},"nodeType":"YulFunctionCall","src":"1905:18:12"},"nodeType":"YulExpressionStatement","src":"1905:18:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:12","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:12","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:12"},"nodeType":"YulFunctionCall","src":"1936:18:12"},"nodeType":"YulExpressionStatement","src":"1936:18:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3002,"isOffset":false,"isSlot":false,"src":"1918:4:12","valueSize":1}],"flags":["memory-safe"],"id":3005,"nodeType":"InlineAssembly","src":"1829:135:12"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"1658:113:12","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:12","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"code","nameLocation":"1799:4:12","nodeType":"VariableDeclaration","scope":3007,"src":"1791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:12"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[],"src":"1819:0:12"},"scope":3008,"src":"1776:194:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3009,"src":"657:1315:12","usedErrors":[],"usedEvents":[]}],"src":"99:1874:12"},"id":12},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3138]},"id":3139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"225:1373:13","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3138,"linearizedBaseContracts":[3138],"name":"SlotDerivation","nameLocation":"1607:14:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3020,"nodeType":"Block","src":"1790:194:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:13","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:13"},"nodeType":"YulFunctionCall","src":"1866:20:13"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:13"},"nodeType":"YulFunctionCall","src":"1888:16:13"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:13"},"nodeType":"YulFunctionCall","src":"1856:49:13"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:13","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:13"},"nodeType":"YulFunctionCall","src":"1852:57:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:13"},"nodeType":"YulFunctionCall","src":"1839:71:13"},"nodeType":"YulExpressionStatement","src":"1839:71:13"},{"nodeType":"YulAssignment","src":"1923:45:13","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:13"},"nodeType":"YulFunctionCall","src":"1935:21:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:13","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:13"},"nodeType":"YulFunctionCall","src":"1958:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:13"},"nodeType":"YulFunctionCall","src":"1931:37:13"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3014,"isOffset":false,"isSlot":false,"src":"1870:9:13","valueSize":1},{"declaration":3014,"isOffset":false,"isSlot":false,"src":"1894:9:13","valueSize":1},{"declaration":3017,"isOffset":false,"isSlot":false,"src":"1923:4:13","valueSize":1}],"flags":["memory-safe"],"id":3019,"nodeType":"InlineAssembly","src":"1800:178:13"}]},"documentation":{"id":3012,"nodeType":"StructuredDocumentation","src":"1628:74:13","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3021,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:13","nodeType":"FunctionDefinition","parameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:13","nodeType":"VariableDeclaration","scope":3021,"src":"1728:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3013,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:13"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3017,"mutability":"mutable","name":"slot","nameLocation":"1784:4:13","nodeType":"VariableDeclaration","scope":3021,"src":"1776:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:13"},"scope":3138,"src":"1707:277:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3042,"nodeType":"Block","src":"2176:86:13","statements":[{"id":3041,"nodeType":"UncheckedBlock","src":"2186:70:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3035,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"2233:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:13","typeDescriptions":{}}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3037,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"2241:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:13","typeDescriptions":{}}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3030,"id":3040,"nodeType":"Return","src":"2210:35:13"}]}]},"documentation":{"id":3022,"nodeType":"StructuredDocumentation","src":"1990:99:13","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3043,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:13","nodeType":"FunctionDefinition","parameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"slot","nameLocation":"2118:4:13","nodeType":"VariableDeclaration","scope":3043,"src":"2110:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"pos","nameLocation":"2132:3:13","nodeType":"VariableDeclaration","scope":3043,"src":"2124:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:13"},"returnParameters":{"id":3030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3029,"mutability":"mutable","name":"result","nameLocation":"2168:6:13","nodeType":"VariableDeclaration","scope":3043,"src":"2160:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3028,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:13"},"scope":3138,"src":"2094:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3052,"nodeType":"Block","src":"2465:127:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:13","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:13"},"nodeType":"YulFunctionCall","src":"2514:18:13"},"nodeType":"YulExpressionStatement","src":"2514:18:13"},{"nodeType":"YulAssignment","src":"2545:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:13"},"nodeType":"YulFunctionCall","src":"2555:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3049,"isOffset":false,"isSlot":false,"src":"2545:6:13","valueSize":1},{"declaration":3046,"isOffset":false,"isSlot":false,"src":"2527:4:13","valueSize":1}],"flags":["memory-safe"],"id":3051,"nodeType":"InlineAssembly","src":"2475:111:13"}]},"documentation":{"id":3044,"nodeType":"StructuredDocumentation","src":"2268:118:13","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3053,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:13","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"slot","nameLocation":"2420:4:13","nodeType":"VariableDeclaration","scope":3053,"src":"2412:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:13"},"returnParameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"result","nameLocation":"2457:6:13","nodeType":"VariableDeclaration","scope":3053,"src":"2449:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:13"},"scope":3138,"src":"2391:201:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3064,"nodeType":"Block","src":"2770:179:13","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:13","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:13","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:13","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:13"},"nodeType":"YulFunctionCall","src":"2849:6:13"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:13"},"nodeType":"YulFunctionCall","src":"2841:15:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:13"},"nodeType":"YulFunctionCall","src":"2832:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:13"},"nodeType":"YulFunctionCall","src":"2819:39:13"},"nodeType":"YulExpressionStatement","src":"2819:39:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:13","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:13"},"nodeType":"YulFunctionCall","src":"2871:18:13"},"nodeType":"YulExpressionStatement","src":"2871:18:13"},{"nodeType":"YulAssignment","src":"2902:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:13"},"nodeType":"YulFunctionCall","src":"2912:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3058,"isOffset":false,"isSlot":false,"src":"2836:3:13","valueSize":1},{"declaration":3061,"isOffset":false,"isSlot":false,"src":"2902:6:13","valueSize":1},{"declaration":3056,"isOffset":false,"isSlot":false,"src":"2884:4:13","valueSize":1}],"flags":["memory-safe"],"id":3063,"nodeType":"InlineAssembly","src":"2780:163:13"}]},"documentation":{"id":3054,"nodeType":"StructuredDocumentation","src":"2598:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3065,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:13","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"slot","nameLocation":"2712:4:13","nodeType":"VariableDeclaration","scope":3065,"src":"2704:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3058,"mutability":"mutable","name":"key","nameLocation":"2726:3:13","nodeType":"VariableDeclaration","scope":3065,"src":"2718:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3057,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:13"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"result","nameLocation":"2762:6:13","nodeType":"VariableDeclaration","scope":3065,"src":"2754:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:13"},"scope":3138,"src":"2681:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"3124:173:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:13","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:13"},"nodeType":"YulFunctionCall","src":"3193:11:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:13"},"nodeType":"YulFunctionCall","src":"3186:19:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:13"},"nodeType":"YulFunctionCall","src":"3173:33:13"},"nodeType":"YulExpressionStatement","src":"3173:33:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:13","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:13"},"nodeType":"YulFunctionCall","src":"3219:18:13"},"nodeType":"YulExpressionStatement","src":"3219:18:13"},{"nodeType":"YulAssignment","src":"3250:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:13"},"nodeType":"YulFunctionCall","src":"3260:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3070,"isOffset":false,"isSlot":false,"src":"3200:3:13","valueSize":1},{"declaration":3073,"isOffset":false,"isSlot":false,"src":"3250:6:13","valueSize":1},{"declaration":3068,"isOffset":false,"isSlot":false,"src":"3232:4:13","valueSize":1}],"flags":["memory-safe"],"id":3075,"nodeType":"InlineAssembly","src":"3134:157:13"}]},"documentation":{"id":3066,"nodeType":"StructuredDocumentation","src":"2955:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:13","nodeType":"FunctionDefinition","parameters":{"id":3071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3068,"mutability":"mutable","name":"slot","nameLocation":"3069:4:13","nodeType":"VariableDeclaration","scope":3077,"src":"3061:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"key","nameLocation":"3080:3:13","nodeType":"VariableDeclaration","scope":3077,"src":"3075:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3069,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:13"},"returnParameters":{"id":3074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3073,"mutability":"mutable","name":"result","nameLocation":"3116:6:13","nodeType":"VariableDeclaration","scope":3077,"src":"3108:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:13"},"scope":3138,"src":"3038:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3088,"nodeType":"Block","src":"3475:157:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:13","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:13"},"nodeType":"YulFunctionCall","src":"3524:17:13"},"nodeType":"YulExpressionStatement","src":"3524:17:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:13","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:13"},"nodeType":"YulFunctionCall","src":"3554:18:13"},"nodeType":"YulExpressionStatement","src":"3554:18:13"},{"nodeType":"YulAssignment","src":"3585:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:13"},"nodeType":"YulFunctionCall","src":"3595:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3082,"isOffset":false,"isSlot":false,"src":"3537:3:13","valueSize":1},{"declaration":3085,"isOffset":false,"isSlot":false,"src":"3585:6:13","valueSize":1},{"declaration":3080,"isOffset":false,"isSlot":false,"src":"3567:4:13","valueSize":1}],"flags":["memory-safe"],"id":3087,"nodeType":"InlineAssembly","src":"3485:141:13"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"3303:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3089,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:13","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"slot","nameLocation":"3417:4:13","nodeType":"VariableDeclaration","scope":3089,"src":"3409:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"key","nameLocation":"3431:3:13","nodeType":"VariableDeclaration","scope":3089,"src":"3423:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3081,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:13"},"returnParameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"result","nameLocation":"3467:6:13","nodeType":"VariableDeclaration","scope":3089,"src":"3459:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:13"},"scope":3138,"src":"3386:246:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3100,"nodeType":"Block","src":"3810:157:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:13","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:13"},"nodeType":"YulFunctionCall","src":"3859:17:13"},"nodeType":"YulExpressionStatement","src":"3859:17:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:13","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:13"},"nodeType":"YulFunctionCall","src":"3889:18:13"},"nodeType":"YulExpressionStatement","src":"3889:18:13"},{"nodeType":"YulAssignment","src":"3920:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:13"},"nodeType":"YulFunctionCall","src":"3930:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3094,"isOffset":false,"isSlot":false,"src":"3872:3:13","valueSize":1},{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3920:6:13","valueSize":1},{"declaration":3092,"isOffset":false,"isSlot":false,"src":"3902:4:13","valueSize":1}],"flags":["memory-safe"],"id":3099,"nodeType":"InlineAssembly","src":"3820:141:13"}]},"documentation":{"id":3090,"nodeType":"StructuredDocumentation","src":"3638:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3101,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:13","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3092,"mutability":"mutable","name":"slot","nameLocation":"3752:4:13","nodeType":"VariableDeclaration","scope":3101,"src":"3744:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3091,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"key","nameLocation":"3766:3:13","nodeType":"VariableDeclaration","scope":3101,"src":"3758:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3093,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:13"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"result","nameLocation":"3802:6:13","nodeType":"VariableDeclaration","scope":3101,"src":"3794:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:13"},"scope":3138,"src":"3721:246:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3112,"nodeType":"Block","src":"4144:157:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:13","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:13"},"nodeType":"YulFunctionCall","src":"4193:17:13"},"nodeType":"YulExpressionStatement","src":"4193:17:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:13","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:13"},"nodeType":"YulFunctionCall","src":"4223:18:13"},"nodeType":"YulExpressionStatement","src":"4223:18:13"},{"nodeType":"YulAssignment","src":"4254:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:13","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:13"},"nodeType":"YulFunctionCall","src":"4264:21:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3106,"isOffset":false,"isSlot":false,"src":"4206:3:13","valueSize":1},{"declaration":3109,"isOffset":false,"isSlot":false,"src":"4254:6:13","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"4236:4:13","valueSize":1}],"flags":["memory-safe"],"id":3111,"nodeType":"InlineAssembly","src":"4154:141:13"}]},"documentation":{"id":3102,"nodeType":"StructuredDocumentation","src":"3973:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:13","nodeType":"FunctionDefinition","parameters":{"id":3107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"slot","nameLocation":"4087:4:13","nodeType":"VariableDeclaration","scope":3113,"src":"4079:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3103,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"key","nameLocation":"4100:3:13","nodeType":"VariableDeclaration","scope":3113,"src":"4093:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3105,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:13"},"returnParameters":{"id":3110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"result","nameLocation":"4136:6:13","nodeType":"VariableDeclaration","scope":3113,"src":"4128:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:13"},"scope":3138,"src":"4056:245:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"4485:326:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:13","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:13"},"nodeType":"YulFunctionCall","src":"4548:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:13","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:13"},"nodeType":"YulFunctionCall","src":"4584:14:13"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:13","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:13"},"nodeType":"YulFunctionCall","src":"4622:18:13"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:13","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:13"},"nodeType":"YulFunctionCall","src":"4666:10:13"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:13","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:13"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:13"},"nodeType":"YulFunctionCall","src":"4689:17:13"},"nodeType":"YulExpressionStatement","src":"4689:17:13"},{"nodeType":"YulAssignment","src":"4719:45:13","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:13"},"nodeType":"YulFunctionCall","src":"4746:17:13"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:13"},"nodeType":"YulFunctionCall","src":"4729:35:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:13"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:13"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:13"},"nodeType":"YulFunctionCall","src":"4777:18:13"},"nodeType":"YulExpressionStatement","src":"4777:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3118,"isOffset":false,"isSlot":false,"src":"4554:3:13","valueSize":1},{"declaration":3118,"isOffset":false,"isSlot":false,"src":"4588:3:13","valueSize":1},{"declaration":3121,"isOffset":false,"isSlot":false,"src":"4719:6:13","valueSize":1},{"declaration":3116,"isOffset":false,"isSlot":false,"src":"4701:4:13","valueSize":1}],"flags":["memory-safe"],"id":3123,"nodeType":"InlineAssembly","src":"4495:310:13"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"4307:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:13","nodeType":"FunctionDefinition","parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"slot","nameLocation":"4421:4:13","nodeType":"VariableDeclaration","scope":3125,"src":"4413:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"key","nameLocation":"4441:3:13","nodeType":"VariableDeclaration","scope":3125,"src":"4427:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3117,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:13"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"result","nameLocation":"4477:6:13","nodeType":"VariableDeclaration","scope":3125,"src":"4469:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:13"},"scope":3138,"src":"4390:421:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3136,"nodeType":"Block","src":"4994:326:13","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:13","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:13"},"nodeType":"YulFunctionCall","src":"5057:10:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:13","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:13"},"nodeType":"YulFunctionCall","src":"5093:14:13"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:13","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:13"},"nodeType":"YulFunctionCall","src":"5131:18:13"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:13","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:13"},"nodeType":"YulFunctionCall","src":"5175:10:13"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:13","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:13"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:13"},"nodeType":"YulFunctionCall","src":"5198:17:13"},"nodeType":"YulExpressionStatement","src":"5198:17:13"},{"nodeType":"YulAssignment","src":"5228:45:13","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:13"},"nodeType":"YulFunctionCall","src":"5255:17:13"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:13"},"nodeType":"YulFunctionCall","src":"5238:35:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:13"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:13"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:13"},"nodeType":"YulFunctionCall","src":"5286:18:13"},"nodeType":"YulExpressionStatement","src":"5286:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3130,"isOffset":false,"isSlot":false,"src":"5063:3:13","valueSize":1},{"declaration":3130,"isOffset":false,"isSlot":false,"src":"5097:3:13","valueSize":1},{"declaration":3133,"isOffset":false,"isSlot":false,"src":"5228:6:13","valueSize":1},{"declaration":3128,"isOffset":false,"isSlot":false,"src":"5210:4:13","valueSize":1}],"flags":["memory-safe"],"id":3135,"nodeType":"InlineAssembly","src":"5004:310:13"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"4817:78:13","text":" @dev Derive the location of a mapping element from the key."},"id":3137,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:13","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"slot","nameLocation":"4931:4:13","nodeType":"VariableDeclaration","scope":3137,"src":"4923:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"key","nameLocation":"4950:3:13","nodeType":"VariableDeclaration","scope":3137,"src":"4937:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3129,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:13"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"result","nameLocation":"4986:6:13","nodeType":"VariableDeclaration","scope":3137,"src":"4978:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:13"},"scope":3138,"src":"4900:420:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3139,"src":"1599:3723:13","usedErrors":[],"usedEvents":[]}],"src":"199:5124:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3262]},"id":3263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3140,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3141,"nodeType":"StructuredDocumentation","src":"219:1187:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3262,"linearizedBaseContracts":[3262],"name":"StorageSlot","nameLocation":"1415:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3144,"members":[{"constant":false,"id":3143,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":3144,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":3262,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3147,"members":[{"constant":false,"id":3146,"mutability":"mutable","name":"value","nameLocation":"1522:5:14","nodeType":"VariableDeclaration","scope":3147,"src":"1517:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3145,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:14","nodeType":"StructDefinition","scope":3262,"src":"1488:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3150,"members":[{"constant":false,"id":3149,"mutability":"mutable","name":"value","nameLocation":"1577:5:14","nodeType":"VariableDeclaration","scope":3150,"src":"1569:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:14","nodeType":"StructDefinition","scope":3262,"src":"1540:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3153,"members":[{"constant":false,"id":3152,"mutability":"mutable","name":"value","nameLocation":"1632:5:14","nodeType":"VariableDeclaration","scope":3153,"src":"1624:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3151,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:14","nodeType":"StructDefinition","scope":3262,"src":"1595:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3156,"members":[{"constant":false,"id":3155,"mutability":"mutable","name":"value","nameLocation":"1685:5:14","nodeType":"VariableDeclaration","scope":3156,"src":"1678:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3154,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:14","nodeType":"StructDefinition","scope":3262,"src":"1650:47:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3159,"members":[{"constant":false,"id":3158,"mutability":"mutable","name":"value","nameLocation":"1738:5:14","nodeType":"VariableDeclaration","scope":3159,"src":"1731:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3157,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:14","nodeType":"StructDefinition","scope":3262,"src":"1703:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3162,"members":[{"constant":false,"id":3161,"mutability":"mutable","name":"value","nameLocation":"1789:5:14","nodeType":"VariableDeclaration","scope":3162,"src":"1783:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3160,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:14","nodeType":"StructDefinition","scope":3262,"src":"1756:45:14","visibility":"public"},{"body":{"id":3172,"nodeType":"Block","src":"1983:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:14","statements":[{"nodeType":"YulAssignment","src":"2032:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3169,"isOffset":false,"isSlot":true,"src":"2032:6:14","suffix":"slot","valueSize":1},{"declaration":3165,"isOffset":false,"isSlot":false,"src":"2042:4:14","valueSize":1}],"flags":["memory-safe"],"id":3171,"nodeType":"InlineAssembly","src":"1993:63:14"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"1807:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:14","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"slot","nameLocation":"1931:4:14","nodeType":"VariableDeclaration","scope":3173,"src":"1923:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:14"},"returnParameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"r","nameLocation":"1980:1:14","nodeType":"VariableDeclaration","scope":3173,"src":"1960:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3144_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3168,"nodeType":"UserDefinedTypeName","pathNode":{"id":3167,"name":"AddressSlot","nameLocations":["1960:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":3144,"src":"1960:11:14"},"referencedDeclaration":3144,"src":"1960:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3144_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:14"},"scope":3262,"src":"1899:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3183,"nodeType":"Block","src":"2243:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:14","statements":[{"nodeType":"YulAssignment","src":"2292:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3180,"isOffset":false,"isSlot":true,"src":"2292:6:14","suffix":"slot","valueSize":1},{"declaration":3176,"isOffset":false,"isSlot":false,"src":"2302:4:14","valueSize":1}],"flags":["memory-safe"],"id":3182,"nodeType":"InlineAssembly","src":"2253:63:14"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"2068:86:14","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:14","nodeType":"FunctionDefinition","parameters":{"id":3177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"slot","nameLocation":"2191:4:14","nodeType":"VariableDeclaration","scope":3184,"src":"2183:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:14"},"returnParameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"r","nameLocation":"2240:1:14","nodeType":"VariableDeclaration","scope":3184,"src":"2220:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3147_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3179,"nodeType":"UserDefinedTypeName","pathNode":{"id":3178,"name":"BooleanSlot","nameLocations":["2220:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":3147,"src":"2220:11:14"},"referencedDeclaration":3147,"src":"2220:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3147_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:14"},"scope":3262,"src":"2159:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3194,"nodeType":"Block","src":"2503:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:14","statements":[{"nodeType":"YulAssignment","src":"2552:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3191,"isOffset":false,"isSlot":true,"src":"2552:6:14","suffix":"slot","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"2562:4:14","valueSize":1}],"flags":["memory-safe"],"id":3193,"nodeType":"InlineAssembly","src":"2513:63:14"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"2328:86:14","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:14","nodeType":"FunctionDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"slot","nameLocation":"2451:4:14","nodeType":"VariableDeclaration","scope":3195,"src":"2443:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3186,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:14"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"r","nameLocation":"2500:1:14","nodeType":"VariableDeclaration","scope":3195,"src":"2480:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3150_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3190,"nodeType":"UserDefinedTypeName","pathNode":{"id":3189,"name":"Bytes32Slot","nameLocations":["2480:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":3150,"src":"2480:11:14"},"referencedDeclaration":3150,"src":"2480:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3150_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:14"},"scope":3262,"src":"2419:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"2763:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:14","statements":[{"nodeType":"YulAssignment","src":"2812:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3202,"isOffset":false,"isSlot":true,"src":"2812:6:14","suffix":"slot","valueSize":1},{"declaration":3198,"isOffset":false,"isSlot":false,"src":"2822:4:14","valueSize":1}],"flags":["memory-safe"],"id":3204,"nodeType":"InlineAssembly","src":"2773:63:14"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"2588:86:14","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:14","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"slot","nameLocation":"2711:4:14","nodeType":"VariableDeclaration","scope":3206,"src":"2703:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:14"},"returnParameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"r","nameLocation":"2760:1:14","nodeType":"VariableDeclaration","scope":3206,"src":"2740:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3201,"nodeType":"UserDefinedTypeName","pathNode":{"id":3200,"name":"Uint256Slot","nameLocations":["2740:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"2740:11:14"},"referencedDeclaration":3153,"src":"2740:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3153_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:14"},"scope":3262,"src":"2679:163:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3216,"nodeType":"Block","src":"3020:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:14","statements":[{"nodeType":"YulAssignment","src":"3069:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3213,"isOffset":false,"isSlot":true,"src":"3069:6:14","suffix":"slot","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"3079:4:14","valueSize":1}],"flags":["memory-safe"],"id":3215,"nodeType":"InlineAssembly","src":"3030:63:14"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"2848:85:14","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3217,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:14","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"slot","nameLocation":"2969:4:14","nodeType":"VariableDeclaration","scope":3217,"src":"2961:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:14"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"r","nameLocation":"3017:1:14","nodeType":"VariableDeclaration","scope":3217,"src":"2998:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3156_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3212,"nodeType":"UserDefinedTypeName","pathNode":{"id":3211,"name":"Int256Slot","nameLocations":["2998:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"2998:10:14"},"referencedDeclaration":3156,"src":"2998:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3156_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:14"},"scope":3262,"src":"2938:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"3277:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:14","statements":[{"nodeType":"YulAssignment","src":"3326:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3224,"isOffset":false,"isSlot":true,"src":"3326:6:14","suffix":"slot","valueSize":1},{"declaration":3220,"isOffset":false,"isSlot":false,"src":"3336:4:14","valueSize":1}],"flags":["memory-safe"],"id":3226,"nodeType":"InlineAssembly","src":"3287:63:14"}]},"documentation":{"id":3218,"nodeType":"StructuredDocumentation","src":"3105:85:14","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:14","nodeType":"FunctionDefinition","parameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"slot","nameLocation":"3226:4:14","nodeType":"VariableDeclaration","scope":3228,"src":"3218:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:14"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"r","nameLocation":"3274:1:14","nodeType":"VariableDeclaration","scope":3228,"src":"3255:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3223,"nodeType":"UserDefinedTypeName","pathNode":{"id":3222,"name":"StringSlot","nameLocations":["3255:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"3255:10:14"},"referencedDeclaration":3159,"src":"3255:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:14"},"scope":3262,"src":"3195:161:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3238,"nodeType":"Block","src":"3558:85:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:14","statements":[{"nodeType":"YulAssignment","src":"3607:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3235,"isOffset":false,"isSlot":true,"src":"3607:6:14","suffix":"slot","valueSize":1},{"declaration":3231,"isOffset":false,"isSlot":true,"src":"3617:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3237,"nodeType":"InlineAssembly","src":"3568:69:14"}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"3362:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3239,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:14","nodeType":"FunctionDefinition","parameters":{"id":3232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"store","nameLocation":"3506:5:14","nodeType":"VariableDeclaration","scope":3239,"src":"3491:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3230,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:14"},"returnParameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"r","nameLocation":"3555:1:14","nodeType":"VariableDeclaration","scope":3239,"src":"3536:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3234,"nodeType":"UserDefinedTypeName","pathNode":{"id":3233,"name":"StringSlot","nameLocations":["3536:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"3536:10:14"},"referencedDeclaration":3159,"src":"3536:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3159_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:14"},"scope":3262,"src":"3468:175:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3249,"nodeType":"Block","src":"3818:79:14","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:14","statements":[{"nodeType":"YulAssignment","src":"3867:14:14","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3246,"isOffset":false,"isSlot":true,"src":"3867:6:14","suffix":"slot","valueSize":1},{"declaration":3242,"isOffset":false,"isSlot":false,"src":"3877:4:14","valueSize":1}],"flags":["memory-safe"],"id":3248,"nodeType":"InlineAssembly","src":"3828:63:14"}]},"documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"3649:84:14","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3250,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:14","nodeType":"FunctionDefinition","parameters":{"id":3243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3242,"mutability":"mutable","name":"slot","nameLocation":"3768:4:14","nodeType":"VariableDeclaration","scope":3250,"src":"3760:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:14"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"r","nameLocation":"3815:1:14","nodeType":"VariableDeclaration","scope":3250,"src":"3797:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3245,"nodeType":"UserDefinedTypeName","pathNode":{"id":3244,"name":"BytesSlot","nameLocations":["3797:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":3162,"src":"3797:9:14"},"referencedDeclaration":3162,"src":"3797:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:14"},"scope":3262,"src":"3738:159:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3260,"nodeType":"Block","src":"4094:85:14","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:14","statements":[{"nodeType":"YulAssignment","src":"4143:20:14","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:14"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3257,"isOffset":false,"isSlot":true,"src":"4143:6:14","suffix":"slot","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":true,"src":"4153:10:14","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3259,"nodeType":"InlineAssembly","src":"4104:69:14"}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"3903:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3261,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:14","nodeType":"FunctionDefinition","parameters":{"id":3254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"store","nameLocation":"4043:5:14","nodeType":"VariableDeclaration","scope":3261,"src":"4029:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3252,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:14"},"returnParameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"r","nameLocation":"4091:1:14","nodeType":"VariableDeclaration","scope":3261,"src":"4073:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3256,"nodeType":"UserDefinedTypeName","pathNode":{"id":3255,"name":"BytesSlot","nameLocations":["4073:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":3162,"src":"4073:9:14"},"referencedDeclaration":3162,"src":"4073:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3162_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:14"},"scope":3262,"src":"4007:172:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3263,"src":"1407:2774:14","usedErrors":[],"usedEvents":[]}],"src":"193:3989:14"},"id":14},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3286],"IERC165":[3298]},"id":3287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3264,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3266,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":3299,"src":"140:38:15","symbolAliases":[{"foreign":{"id":3265,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"148:7:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3268,"name":"IERC165","nameLocations":["688:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":3298,"src":"688:7:15"},"id":3269,"nodeType":"InheritanceSpecifier","src":"688:7:15"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3267,"nodeType":"StructuredDocumentation","src":"180:479:15","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3286,"linearizedBaseContracts":[3286,3298],"name":"ERC165","nameLocation":"678:6:15","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3297],"body":{"id":3284,"nodeType":"Block","src":"812:64:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3277,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"829:11:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3279,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"849:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3298_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3298_$","typeString":"type(contract IERC165)"}],"id":3278,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3298","typeString":"type(contract IERC165)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:15","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3276,"id":3283,"nodeType":"Return","src":"822:47:15"}]},"documentation":{"id":3270,"nodeType":"StructuredDocumentation","src":"702:23:15","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:15","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3272,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:15","nodeType":"VariableDeclaration","scope":3285,"src":"757:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3271,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:15"},"returnParameters":{"id":3276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"806:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3274,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:15"},"scope":3286,"src":"730:146:15","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3287,"src":"660:218:15","usedErrors":[],"usedEvents":[]}],"src":"114:765:15"},"id":15},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3298]},"id":3299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3288,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"142:280:16","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3298,"linearizedBaseContracts":[3298],"name":"IERC165","nameLocation":"433:7:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3290,"nodeType":"StructuredDocumentation","src":"447:340:16","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3297,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:16","nodeType":"FunctionDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3292,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:16","nodeType":"VariableDeclaration","scope":3297,"src":"819:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3291,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:16"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3297,"src":"862:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3294,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:16"},"scope":3298,"src":"792:76:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3299,"src":"423:447:16","usedErrors":[],"usedEvents":[]}],"src":"115:756:16"},"id":16},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4919],"Panic":[3008],"SafeCast":[6684]},"id":4920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3300,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4920,"sourceUnit":3009,"src":"129:35:17","symbolAliases":[{"foreign":{"id":3301,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"137:5:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4920,"sourceUnit":6685,"src":"165:40:17","symbolAliases":[{"foreign":{"id":3303,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"173:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"207:73:17","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4919,"linearizedBaseContracts":[4919],"name":"Math","nameLocation":"289:4:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3310,"members":[{"id":3306,"name":"Floor","nameLocation":"324:5:17","nodeType":"EnumValue","src":"324:5:17"},{"id":3307,"name":"Ceil","nameLocation":"367:4:17","nodeType":"EnumValue","src":"367:4:17"},{"id":3308,"name":"Trunc","nameLocation":"409:5:17","nodeType":"EnumValue","src":"409:5:17"},{"id":3309,"name":"Expand","nameLocation":"439:6:17","nodeType":"EnumValue","src":"439:6:17"}],"name":"Rounding","nameLocation":"305:8:17","nodeType":"EnumDefinition","src":"300:169:17"},{"body":{"id":3323,"nodeType":"Block","src":"731:112:17","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:17","statements":[{"nodeType":"YulAssignment","src":"780:16:17","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:17"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:17"},"nodeType":"YulFunctionCall","src":"787:9:17"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:17"}]},{"nodeType":"YulAssignment","src":"809:18:17","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:17"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:17"},"nodeType":"YulFunctionCall","src":"817:10:17"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3313,"isOffset":false,"isSlot":false,"src":"791:1:17","valueSize":1},{"declaration":3313,"isOffset":false,"isSlot":false,"src":"825:1:17","valueSize":1},{"declaration":3315,"isOffset":false,"isSlot":false,"src":"794:1:17","valueSize":1},{"declaration":3318,"isOffset":false,"isSlot":false,"src":"809:4:17","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"780:3:17","valueSize":1},{"declaration":3320,"isOffset":false,"isSlot":false,"src":"820:3:17","valueSize":1}],"flags":["memory-safe"],"id":3322,"nodeType":"InlineAssembly","src":"741:96:17"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"475:163:17","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3324,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:17","nodeType":"FunctionDefinition","parameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"a","nameLocation":"667:1:17","nodeType":"VariableDeclaration","scope":3324,"src":"659:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"b","nameLocation":"678:1:17","nodeType":"VariableDeclaration","scope":3324,"src":"670:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:17"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3318,"mutability":"mutable","name":"high","nameLocation":"712:4:17","nodeType":"VariableDeclaration","scope":3324,"src":"704:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"low","nameLocation":"726:3:17","nodeType":"VariableDeclaration","scope":3324,"src":"718:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:17"},"scope":4919,"src":"643:200:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3337,"nodeType":"Block","src":"1115:462:17","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:17","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:17"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:17","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:17"},"nodeType":"YulFunctionCall","src":"1474:6:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:17"},"nodeType":"YulFunctionCall","src":"1461:20:17"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:17","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:17","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:17"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:17"},"nodeType":"YulFunctionCall","src":"1501:9:17"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:17"}]},{"nodeType":"YulAssignment","src":"1523:38:17","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:17"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:17"},"nodeType":"YulFunctionCall","src":"1535:12:17"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:17"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:17"},"nodeType":"YulFunctionCall","src":"1549:11:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:17"},"nodeType":"YulFunctionCall","src":"1531:30:17"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3327,"isOffset":false,"isSlot":false,"src":"1468:1:17","valueSize":1},{"declaration":3327,"isOffset":false,"isSlot":false,"src":"1505:1:17","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1471:1:17","valueSize":1},{"declaration":3329,"isOffset":false,"isSlot":false,"src":"1508:1:17","valueSize":1},{"declaration":3332,"isOffset":false,"isSlot":false,"src":"1523:4:17","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"1494:3:17","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"1543:3:17","valueSize":1},{"declaration":3334,"isOffset":false,"isSlot":false,"src":"1556:3:17","valueSize":1}],"flags":["memory-safe"],"id":3336,"nodeType":"InlineAssembly","src":"1412:159:17"}]},"documentation":{"id":3325,"nodeType":"StructuredDocumentation","src":"849:173:17","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3338,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:17","nodeType":"FunctionDefinition","parameters":{"id":3330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"a","nameLocation":"1051:1:17","nodeType":"VariableDeclaration","scope":3338,"src":"1043:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3329,"mutability":"mutable","name":"b","nameLocation":"1062:1:17","nodeType":"VariableDeclaration","scope":3338,"src":"1054:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:17"},"returnParameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3332,"mutability":"mutable","name":"high","nameLocation":"1096:4:17","nodeType":"VariableDeclaration","scope":3338,"src":"1088:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3334,"mutability":"mutable","name":"low","nameLocation":"1110:3:17","nodeType":"VariableDeclaration","scope":3338,"src":"1102:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:17"},"scope":4919,"src":"1027:550:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"1784:149:17","statements":[{"id":3371,"nodeType":"UncheckedBlock","src":"1794:133:17","statements":[{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"c","nameLocation":"1826:1:17","nodeType":"VariableDeclaration","scope":3371,"src":"1818:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1830:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"1834:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:17"},{"expression":{"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3356,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1849:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1859:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"1864:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"ExpressionStatement","src":"1849:16:17"},{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"1879:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"1908:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"1892:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"1892:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3370,"nodeType":"ExpressionStatement","src":"1879:37:17"}]}]},"documentation":{"id":3339,"nodeType":"StructuredDocumentation","src":"1583:105:17","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:17","nodeType":"FunctionDefinition","parameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"a","nameLocation":"1717:1:17","nodeType":"VariableDeclaration","scope":3373,"src":"1709:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3343,"mutability":"mutable","name":"b","nameLocation":"1728:1:17","nodeType":"VariableDeclaration","scope":3373,"src":"1720:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:17"},"returnParameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"success","nameLocation":"1759:7:17","nodeType":"VariableDeclaration","scope":3373,"src":"1754:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3345,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3348,"mutability":"mutable","name":"result","nameLocation":"1776:6:17","nodeType":"VariableDeclaration","scope":3373,"src":"1768:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:17"},"scope":4919,"src":"1693:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3407,"nodeType":"Block","src":"2143:149:17","statements":[{"id":3406,"nodeType":"UncheckedBlock","src":"2153:133:17","statements":[{"assignments":[3386],"declarations":[{"constant":false,"id":3386,"mutability":"mutable","name":"c","nameLocation":"2185:1:17","nodeType":"VariableDeclaration","scope":3406,"src":"2177:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3390,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2189:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"2193:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:17"},{"expression":{"id":3395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3391,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"2208:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3392,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"2218:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2223:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3396,"nodeType":"ExpressionStatement","src":"2208:16:17"},{"expression":{"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"2238:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3398,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"2247:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3401,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"2267:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3399,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"2251:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"2251:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3405,"nodeType":"ExpressionStatement","src":"2238:37:17"}]}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"1939:108:17","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3408,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:17","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"a","nameLocation":"2076:1:17","nodeType":"VariableDeclaration","scope":3408,"src":"2068:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"b","nameLocation":"2087:1:17","nodeType":"VariableDeclaration","scope":3408,"src":"2079:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:17"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"success","nameLocation":"2118:7:17","nodeType":"VariableDeclaration","scope":3408,"src":"2113:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3380,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"result","nameLocation":"2135:6:17","nodeType":"VariableDeclaration","scope":3408,"src":"2127:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:17"},"scope":4919,"src":"2052:240:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3437,"nodeType":"Block","src":"2505:391:17","statements":[{"id":3436,"nodeType":"UncheckedBlock","src":"2515:375:17","statements":[{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"c","nameLocation":"2547:1:17","nodeType":"VariableDeclaration","scope":3436,"src":"2539:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3425,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"2551:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"2555:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:17"},{"AST":{"nodeType":"YulBlock","src":"2595:188:17","statements":[{"nodeType":"YulAssignment","src":"2727:42:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:17"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:17"},"nodeType":"YulFunctionCall","src":"2744:9:17"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:17"},"nodeType":"YulFunctionCall","src":"2741:16:17"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:17"},"nodeType":"YulFunctionCall","src":"2759:9:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:17"},"nodeType":"YulFunctionCall","src":"2738:31:17"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3411,"isOffset":false,"isSlot":false,"src":"2751:1:17","valueSize":1},{"declaration":3411,"isOffset":false,"isSlot":false,"src":"2766:1:17","valueSize":1},{"declaration":3413,"isOffset":false,"isSlot":false,"src":"2755:1:17","valueSize":1},{"declaration":3421,"isOffset":false,"isSlot":false,"src":"2748:1:17","valueSize":1},{"declaration":3416,"isOffset":false,"isSlot":false,"src":"2727:7:17","valueSize":1}],"flags":["memory-safe"],"id":3426,"nodeType":"InlineAssembly","src":"2570:213:17"},{"expression":{"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3427,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"2842:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3428,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"2851:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3431,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"2871:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3429,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"2855:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"2855:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3435,"nodeType":"ExpressionStatement","src":"2842:37:17"}]}]},"documentation":{"id":3409,"nodeType":"StructuredDocumentation","src":"2298:111:17","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3438,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:17","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3411,"mutability":"mutable","name":"a","nameLocation":"2438:1:17","nodeType":"VariableDeclaration","scope":3438,"src":"2430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3413,"mutability":"mutable","name":"b","nameLocation":"2449:1:17","nodeType":"VariableDeclaration","scope":3438,"src":"2441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:17"},"returnParameters":{"id":3419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"success","nameLocation":"2480:7:17","nodeType":"VariableDeclaration","scope":3438,"src":"2475:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3415,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3418,"mutability":"mutable","name":"result","nameLocation":"2497:6:17","nodeType":"VariableDeclaration","scope":3438,"src":"2489:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:17"},"scope":4919,"src":"2414:482:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"3111:231:17","statements":[{"id":3457,"nodeType":"UncheckedBlock","src":"3121:215:17","statements":[{"expression":{"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"3145:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3443,"src":"3155:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3455,"nodeType":"ExpressionStatement","src":"3145:15:17"},{"AST":{"nodeType":"YulBlock","src":"3199:127:17","statements":[{"nodeType":"YulAssignment","src":"3293:19:17","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:17"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:17"},"nodeType":"YulFunctionCall","src":"3303:9:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3441,"isOffset":false,"isSlot":false,"src":"3307:1:17","valueSize":1},{"declaration":3443,"isOffset":false,"isSlot":false,"src":"3310:1:17","valueSize":1},{"declaration":3448,"isOffset":false,"isSlot":false,"src":"3293:6:17","valueSize":1}],"flags":["memory-safe"],"id":3456,"nodeType":"InlineAssembly","src":"3174:152:17"}]}]},"documentation":{"id":3439,"nodeType":"StructuredDocumentation","src":"2902:113:17","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3459,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:17","nodeType":"FunctionDefinition","parameters":{"id":3444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3441,"mutability":"mutable","name":"a","nameLocation":"3044:1:17","nodeType":"VariableDeclaration","scope":3459,"src":"3036:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3440,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3443,"mutability":"mutable","name":"b","nameLocation":"3055:1:17","nodeType":"VariableDeclaration","scope":3459,"src":"3047:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3442,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:17"},"returnParameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3446,"mutability":"mutable","name":"success","nameLocation":"3086:7:17","nodeType":"VariableDeclaration","scope":3459,"src":"3081:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3445,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3448,"mutability":"mutable","name":"result","nameLocation":"3103:6:17","nodeType":"VariableDeclaration","scope":3459,"src":"3095:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:17"},"scope":4919,"src":"3020:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3479,"nodeType":"Block","src":"3567:231:17","statements":[{"id":3478,"nodeType":"UncheckedBlock","src":"3577:215:17","statements":[{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"3601:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"3611:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3476,"nodeType":"ExpressionStatement","src":"3601:15:17"},{"AST":{"nodeType":"YulBlock","src":"3655:127:17","statements":[{"nodeType":"YulAssignment","src":"3749:19:17","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:17"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:17"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:17"},"nodeType":"YulFunctionCall","src":"3759:9:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3462,"isOffset":false,"isSlot":false,"src":"3763:1:17","valueSize":1},{"declaration":3464,"isOffset":false,"isSlot":false,"src":"3766:1:17","valueSize":1},{"declaration":3469,"isOffset":false,"isSlot":false,"src":"3749:6:17","valueSize":1}],"flags":["memory-safe"],"id":3477,"nodeType":"InlineAssembly","src":"3630:152:17"}]}]},"documentation":{"id":3460,"nodeType":"StructuredDocumentation","src":"3348:123:17","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3480,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:17","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"a","nameLocation":"3500:1:17","nodeType":"VariableDeclaration","scope":3480,"src":"3492:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"b","nameLocation":"3511:1:17","nodeType":"VariableDeclaration","scope":3480,"src":"3503:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:17"},"returnParameters":{"id":3470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3467,"mutability":"mutable","name":"success","nameLocation":"3542:7:17","nodeType":"VariableDeclaration","scope":3480,"src":"3537:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3466,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3469,"mutability":"mutable","name":"result","nameLocation":"3559:6:17","nodeType":"VariableDeclaration","scope":3480,"src":"3551:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:17"},"scope":4919,"src":"3476:322:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3509,"nodeType":"Block","src":"3989:122:17","statements":[{"assignments":[3491,3493],"declarations":[{"constant":false,"id":3491,"mutability":"mutable","name":"success","nameLocation":"4005:7:17","nodeType":"VariableDeclaration","scope":3509,"src":"4000:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3490,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"result","nameLocation":"4022:6:17","nodeType":"VariableDeclaration","scope":3509,"src":"4014:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3498,"initialValue":{"arguments":[{"id":3495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3483,"src":"4039:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"4042:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3494,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4032:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:17"},{"expression":{"arguments":[{"id":3500,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"4069:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"4078:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3502,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:17","memberName":"max","nodeType":"MemberAccess","src":"4086:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4061:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3489,"id":3508,"nodeType":"Return","src":"4054:50:17"}]},"documentation":{"id":3481,"nodeType":"StructuredDocumentation","src":"3804:103:17","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3510,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:17","nodeType":"FunctionDefinition","parameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"a","nameLocation":"3943:1:17","nodeType":"VariableDeclaration","scope":3510,"src":"3935:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"b","nameLocation":"3954:1:17","nodeType":"VariableDeclaration","scope":3510,"src":"3946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:17"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3510,"src":"3980:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:17"},"scope":4919,"src":"3912:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"4294:73:17","statements":[{"assignments":[null,3521],"declarations":[null,{"constant":false,"id":3521,"mutability":"mutable","name":"result","nameLocation":"4315:6:17","nodeType":"VariableDeclaration","scope":3529,"src":"4307:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3526,"initialValue":{"arguments":[{"id":3523,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"4332:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"4335:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3522,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"4325:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:17"},{"expression":{"id":3527,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"4354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3519,"id":3528,"nodeType":"Return","src":"4347:13:17"}]},"documentation":{"id":3511,"nodeType":"StructuredDocumentation","src":"4117:95:17","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:17","nodeType":"FunctionDefinition","parameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"a","nameLocation":"4248:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"4240:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3515,"mutability":"mutable","name":"b","nameLocation":"4259:1:17","nodeType":"VariableDeclaration","scope":3530,"src":"4251:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:17"},"returnParameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3530,"src":"4285:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:17"},"scope":4919,"src":"4217:150:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3559,"nodeType":"Block","src":"4564:122:17","statements":[{"assignments":[3541,3543],"declarations":[{"constant":false,"id":3541,"mutability":"mutable","name":"success","nameLocation":"4580:7:17","nodeType":"VariableDeclaration","scope":3559,"src":"4575:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3540,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3543,"mutability":"mutable","name":"result","nameLocation":"4597:6:17","nodeType":"VariableDeclaration","scope":3559,"src":"4589:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3548,"initialValue":{"arguments":[{"id":3545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"4614:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"4617:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3544,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"4607:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:17"},{"expression":{"arguments":[{"id":3550,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"4644:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"4653:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:17","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:17","memberName":"max","nodeType":"MemberAccess","src":"4661:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3549,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"4636:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3539,"id":3558,"nodeType":"Return","src":"4629:50:17"}]},"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"4373:109:17","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:17","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"a","nameLocation":"4518:1:17","nodeType":"VariableDeclaration","scope":3560,"src":"4510:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"b","nameLocation":"4529:1:17","nodeType":"VariableDeclaration","scope":3560,"src":"4521:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:17"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3560,"src":"4555:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:17"},"scope":4919,"src":"4487:199:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"5158:207:17","statements":[{"id":3585,"nodeType":"UncheckedBlock","src":"5168:191:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3572,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"5306:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"5312:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"5316:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3579,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5337:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3577,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"5321:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"5321:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3582,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3571,"id":3584,"nodeType":"Return","src":"5299:49:17"}]}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"4692:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:17","nodeType":"FunctionDefinition","parameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"condition","nameLocation":"5093:9:17","nodeType":"VariableDeclaration","scope":3587,"src":"5088:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3562,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"a","nameLocation":"5112:1:17","nodeType":"VariableDeclaration","scope":3587,"src":"5104:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3567,"mutability":"mutable","name":"b","nameLocation":"5123:1:17","nodeType":"VariableDeclaration","scope":3587,"src":"5115:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:17"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"5149:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:17"},"scope":4919,"src":"5071:294:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3605,"nodeType":"Block","src":"5502:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"5527:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3599,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"5531:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3601,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"5534:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3602,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"5537:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3597,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"5519:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3596,"id":3604,"nodeType":"Return","src":"5512:27:17"}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"5371:59:17","text":" @dev Returns the largest of two numbers."},"id":3606,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:17","nodeType":"FunctionDefinition","parameters":{"id":3593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"a","nameLocation":"5456:1:17","nodeType":"VariableDeclaration","scope":3606,"src":"5448:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3592,"mutability":"mutable","name":"b","nameLocation":"5467:1:17","nodeType":"VariableDeclaration","scope":3606,"src":"5459:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3591,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:17"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3606,"src":"5493:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:17"},"scope":4919,"src":"5435:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3624,"nodeType":"Block","src":"5684:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"5709:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3618,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"5713:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3620,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"5716:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3621,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"5719:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3616,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"5701:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3615,"id":3623,"nodeType":"Return","src":"5694:27:17"}]},"documentation":{"id":3607,"nodeType":"StructuredDocumentation","src":"5552:60:17","text":" @dev Returns the smallest of two numbers."},"id":3625,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:17","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"a","nameLocation":"5638:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"5630:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3608,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3611,"mutability":"mutable","name":"b","nameLocation":"5649:1:17","nodeType":"VariableDeclaration","scope":3625,"src":"5641:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3610,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:17"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3625,"src":"5675:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3613,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:17"},"scope":4919,"src":"5617:111:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3647,"nodeType":"Block","src":"5912:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3635,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"5967:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"5971:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"5977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"5981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3634,"id":3646,"nodeType":"Return","src":"5959:28:17"}]},"documentation":{"id":3626,"nodeType":"StructuredDocumentation","src":"5734:102:17","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3648,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:17","nodeType":"FunctionDefinition","parameters":{"id":3631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"a","nameLocation":"5866:1:17","nodeType":"VariableDeclaration","scope":3648,"src":"5858:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3630,"mutability":"mutable","name":"b","nameLocation":"5877:1:17","nodeType":"VariableDeclaration","scope":3648,"src":"5869:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:17"},"returnParameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3648,"src":"5903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:17"},"scope":4919,"src":"5841:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"6286:633:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"6300:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"IfStatement","src":"6296:150:17","trueBody":{"id":3668,"nodeType":"Block","src":"6308:138:17","statements":[{"expression":{"arguments":[{"expression":{"id":3664,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6412:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"6412:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3661,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6400:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"6400:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"ExpressionStatement","src":"6400:35:17"}]}},{"id":3687,"nodeType":"UncheckedBlock","src":"6829:84:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"6876:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3670,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"6860:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"6860:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3651,"src":"6887:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3680,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"6896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3657,"id":3686,"nodeType":"Return","src":"6853:49:17"}]}]},"documentation":{"id":3649,"nodeType":"StructuredDocumentation","src":"6000:210:17","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:17","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"a","nameLocation":"6240:1:17","nodeType":"VariableDeclaration","scope":3689,"src":"6232:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3653,"mutability":"mutable","name":"b","nameLocation":"6251:1:17","nodeType":"VariableDeclaration","scope":3689,"src":"6243:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:17"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3689,"src":"6277:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3655,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:17"},"scope":4919,"src":"6215:704:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"7340:3585:17","statements":[{"id":3823,"nodeType":"UncheckedBlock","src":"7350:3569:17","statements":[{"assignments":[3702,3704],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"high","nameLocation":"7383:4:17","nodeType":"VariableDeclaration","scope":3823,"src":"7375:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"low","nameLocation":"7397:3:17","nodeType":"VariableDeclaration","scope":3823,"src":"7389:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3709,"initialValue":{"arguments":[{"id":3706,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"7411:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3707,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"7414:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3705,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"7404:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3710,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"7498:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3718,"nodeType":"IfStatement","src":"7494:365:17","trueBody":{"id":3717,"nodeType":"Block","src":"7509:350:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"7827:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3714,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7833:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3700,"id":3716,"nodeType":"Return","src":"7820:24:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3719,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"7969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3720,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"7984:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3737,"nodeType":"IfStatement","src":"7965:142:17","trueBody":{"id":3736,"nodeType":"Block","src":"7990:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8028:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3729,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"8046:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"8046:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3731,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"8070:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"8070:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3725,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"8020:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3722,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"8008:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"8008:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3735,"nodeType":"ExpressionStatement","src":"8008:84:17"}]}},{"assignments":[3739],"declarations":[{"constant":false,"id":3739,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:17","nodeType":"VariableDeclaration","scope":3823,"src":"8359:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3740,"nodeType":"VariableDeclarationStatement","src":"8359:17:17"},{"AST":{"nodeType":"YulBlock","src":"8415:283:17","statements":[{"nodeType":"YulAssignment","src":"8484:38:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:17"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:17"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:17"},"nodeType":"YulFunctionCall","src":"8497:25:17"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:17"}]},{"nodeType":"YulAssignment","src":"8604:37:17","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:17"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:17"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:17"},"nodeType":"YulFunctionCall","src":"8622:18:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:17"},"nodeType":"YulFunctionCall","src":"8612:29:17"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:17"}]},{"nodeType":"YulAssignment","src":"8658:26:17","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:17"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:17"},"nodeType":"YulFunctionCall","src":"8665:19:17"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3696,"isOffset":false,"isSlot":false,"src":"8510:11:17","valueSize":1},{"declaration":3702,"isOffset":false,"isSlot":false,"src":"8604:4:17","valueSize":1},{"declaration":3702,"isOffset":false,"isSlot":false,"src":"8616:4:17","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"8636:3:17","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"8658:3:17","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"8669:3:17","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"8484:9:17","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"8625:9:17","valueSize":1},{"declaration":3739,"isOffset":false,"isSlot":false,"src":"8674:9:17","valueSize":1},{"declaration":3692,"isOffset":false,"isSlot":false,"src":"8504:1:17","valueSize":1},{"declaration":3694,"isOffset":false,"isSlot":false,"src":"8507:1:17","valueSize":1}],"flags":["memory-safe"],"id":3741,"nodeType":"InlineAssembly","src":"8390:308:17"},{"assignments":[3743],"declarations":[{"constant":false,"id":3743,"mutability":"mutable","name":"twos","nameLocation":"8910:4:17","nodeType":"VariableDeclaration","scope":3823,"src":"8902:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3750,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8917:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3746,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"8936:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:17"},{"AST":{"nodeType":"YulBlock","src":"8987:359:17","statements":[{"nodeType":"YulAssignment","src":"9052:37:17","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:17"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:17"},"nodeType":"YulFunctionCall","src":"9067:22:17"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:17"}]},{"nodeType":"YulAssignment","src":"9153:21:17","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:17"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:17"},"nodeType":"YulFunctionCall","src":"9160:14:17"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:17"}]},{"nodeType":"YulAssignment","src":"9293:39:17","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:17","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:17"},"nodeType":"YulFunctionCall","src":"9309:12:17"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:17"},"nodeType":"YulFunctionCall","src":"9305:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:17"},"nodeType":"YulFunctionCall","src":"9301:31:17"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3696,"isOffset":false,"isSlot":false,"src":"9052:11:17","valueSize":1},{"declaration":3696,"isOffset":false,"isSlot":false,"src":"9071:11:17","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"9153:3:17","valueSize":1},{"declaration":3704,"isOffset":false,"isSlot":false,"src":"9164:3:17","valueSize":1},{"declaration":3743,"isOffset":false,"isSlot":false,"src":"9084:4:17","valueSize":1},{"declaration":3743,"isOffset":false,"isSlot":false,"src":"9169:4:17","valueSize":1},{"declaration":3743,"isOffset":false,"isSlot":false,"src":"9293:4:17","valueSize":1},{"declaration":3743,"isOffset":false,"isSlot":false,"src":"9316:4:17","valueSize":1},{"declaration":3743,"isOffset":false,"isSlot":false,"src":"9323:4:17","valueSize":1}],"flags":["memory-safe"],"id":3751,"nodeType":"InlineAssembly","src":"8962:384:17"},{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3752,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"9409:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9416:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3754,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"9423:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3757,"nodeType":"ExpressionStatement","src":"9409:18:17"},{"assignments":[3759],"declarations":[{"constant":false,"id":3759,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:17","nodeType":"VariableDeclaration","scope":3823,"src":"9762:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3766,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3761,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"9785:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:17"},{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3767,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10018:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3769,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10033:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3770,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10047:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3774,"nodeType":"ExpressionStatement","src":"10018:36:17"},{"expression":{"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10088:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10103:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3778,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3782,"nodeType":"ExpressionStatement","src":"10088:36:17"},{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3783,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10160:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3785,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10175:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3786,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10189:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3790,"nodeType":"ExpressionStatement","src":"10160:36:17"},{"expression":{"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3791,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10231:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3793,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10246:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3794,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10260:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3798,"nodeType":"ExpressionStatement","src":"10231:36:17"},{"expression":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3799,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10304:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3801,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10319:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3802,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10333:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3806,"nodeType":"ExpressionStatement","src":"10304:36:17"},{"expression":{"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3807,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10378:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3809,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"10393:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3810,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10407:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3814,"nodeType":"ExpressionStatement","src":"10378:36:17"},{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"10859:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3816,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"10868:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3817,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"10874:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"10859:22:17"},{"expression":{"id":3821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"10902:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3700,"id":3822,"nodeType":"Return","src":"10895:13:17"}]}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"6925:312:17","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:17","nodeType":"FunctionDefinition","parameters":{"id":3697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"x","nameLocation":"7266:1:17","nodeType":"VariableDeclaration","scope":3825,"src":"7258:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"y","nameLocation":"7277:1:17","nodeType":"VariableDeclaration","scope":3825,"src":"7269:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3696,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:17","nodeType":"VariableDeclaration","scope":3825,"src":"7280:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3695,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:17"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3699,"mutability":"mutable","name":"result","nameLocation":"7332:6:17","nodeType":"VariableDeclaration","scope":3825,"src":"7324:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:17"},"scope":4919,"src":"7242:3683:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"11164:128:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3841,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"11188:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3842,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"11191:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3843,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"11194:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3840,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3825,3862],"referencedDeclaration":3825,"src":"11181:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3848,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"11242:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":3847,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"11225:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3851,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"11262:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3852,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"11265:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3853,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"11268:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3845,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11209:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"11209:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3839,"id":3860,"nodeType":"Return","src":"11174:111:17"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"10931:118:17","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:17","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"x","nameLocation":"11078:1:17","nodeType":"VariableDeclaration","scope":3862,"src":"11070:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"y","nameLocation":"11089:1:17","nodeType":"VariableDeclaration","scope":3862,"src":"11081:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:17","nodeType":"VariableDeclaration","scope":3862,"src":"11092:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:17","nodeType":"VariableDeclaration","scope":3862,"src":"11113:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":3834,"nodeType":"UserDefinedTypeName","pathNode":{"id":3833,"name":"Rounding","nameLocations":["11113:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"11113:8:17"},"referencedDeclaration":3310,"src":"11113:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:17"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3862,"src":"11155:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:17"},"scope":4919,"src":"11054:238:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"11500:245:17","statements":[{"id":3910,"nodeType":"UncheckedBlock","src":"11510:229:17","statements":[{"assignments":[3875,3877],"declarations":[{"constant":false,"id":3875,"mutability":"mutable","name":"high","nameLocation":"11543:4:17","nodeType":"VariableDeclaration","scope":3910,"src":"11535:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3874,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3877,"mutability":"mutable","name":"low","nameLocation":"11557:3:17","nodeType":"VariableDeclaration","scope":3910,"src":"11549:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3882,"initialValue":{"arguments":[{"id":3879,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11571:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3880,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"11574:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3878,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"11564:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3883,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"11594:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3885,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11607:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"11590:86:17","trueBody":{"id":3895,"nodeType":"Block","src":"11610:66:17","statements":[{"expression":{"arguments":[{"expression":{"id":3891,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"11640:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:17","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2971,"src":"11640:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3888,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"11628:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"11628:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3894,"nodeType":"ExpressionStatement","src":"11628:33:17"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"11697:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3899,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11712:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3903,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"11719:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3905,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"11726:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3873,"id":3909,"nodeType":"Return","src":"11689:39:17"}]}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"11298:111:17","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:17","nodeType":"FunctionDefinition","parameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"x","nameLocation":"11438:1:17","nodeType":"VariableDeclaration","scope":3912,"src":"11430:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"y","nameLocation":"11449:1:17","nodeType":"VariableDeclaration","scope":3912,"src":"11441:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"n","nameLocation":"11458:1:17","nodeType":"VariableDeclaration","scope":3912,"src":"11452:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3868,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:17"},"returnParameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3872,"mutability":"mutable","name":"result","nameLocation":"11492:6:17","nodeType":"VariableDeclaration","scope":3912,"src":"11484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:17"},"scope":4919,"src":"11414:331:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"11963:113:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3928,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"11987:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3929,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"11990:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3930,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"11993:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3927,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3912,3951],"referencedDeclaration":3912,"src":"11980:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3935,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3922,"src":"12031:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":3934,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"12014:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3938,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3915,"src":"12051:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3939,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"12054:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3941,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"12062:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3937,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:17","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3932,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"11998:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"11998:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3926,"id":3949,"nodeType":"Return","src":"11973:96:17"}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"11751:109:17","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:17","nodeType":"FunctionDefinition","parameters":{"id":3923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"x","nameLocation":"11889:1:17","nodeType":"VariableDeclaration","scope":3951,"src":"11881:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3914,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3917,"mutability":"mutable","name":"y","nameLocation":"11900:1:17","nodeType":"VariableDeclaration","scope":3951,"src":"11892:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3919,"mutability":"mutable","name":"n","nameLocation":"11909:1:17","nodeType":"VariableDeclaration","scope":3951,"src":"11903:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3918,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3922,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:17","nodeType":"VariableDeclaration","scope":3951,"src":"11912:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":3921,"nodeType":"UserDefinedTypeName","pathNode":{"id":3920,"name":"Rounding","nameLocations":["11912:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"11912:8:17"},"referencedDeclaration":3310,"src":"11912:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:17"},"returnParameters":{"id":3926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"11954:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3924,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:17"},"scope":4919,"src":"11865:211:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4047,"nodeType":"Block","src":"12710:1849:17","statements":[{"id":4046,"nodeType":"UncheckedBlock","src":"12720:1833:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3961,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"12748:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3966,"nodeType":"IfStatement","src":"12744:20:17","trueBody":{"expression":{"hexValue":"30","id":3964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3960,"id":3965,"nodeType":"Return","src":"12756:8:17"}},{"assignments":[3968],"declarations":[{"constant":false,"id":3968,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:17","nodeType":"VariableDeclaration","scope":4046,"src":"13235:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3969,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"13255:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3970,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"13259:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:17"},{"assignments":[3974],"declarations":[{"constant":false,"id":3974,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:17","nodeType":"VariableDeclaration","scope":4046,"src":"13274:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3973,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3976,"initialValue":{"id":3975,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"13288:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:17"},{"assignments":[3978],"declarations":[{"constant":false,"id":3978,"mutability":"mutable","name":"x","nameLocation":"13432:1:17","nodeType":"VariableDeclaration","scope":4046,"src":"13425:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3977,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3980,"initialValue":{"hexValue":"30","id":3979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:17"},{"assignments":[3982],"declarations":[{"constant":false,"id":3982,"mutability":"mutable","name":"y","nameLocation":"13458:1:17","nodeType":"VariableDeclaration","scope":4046,"src":"13451:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3981,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3984,"initialValue":{"hexValue":"31","id":3983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:17"},{"body":{"id":4021,"nodeType":"Block","src":"13501:882:17","statements":[{"assignments":[3989],"declarations":[{"constant":false,"id":3989,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:17","nodeType":"VariableDeclaration","scope":4021,"src":"13519:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3988,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3993,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"13538:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3991,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13544:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:17"},{"expression":{"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3994,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"13573:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3995,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13578:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3996,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3997,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13678:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3998,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"13923:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13929:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4000,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"13941:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"ExpressionStatement","src":"13572:395:17"},{"expression":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4006,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"13987:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4007,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"13990:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4008,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4009,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"14072:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14326:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4011,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"14330:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4014,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"14341:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4012,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:17","typeDescriptions":{}}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:17","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4020,"nodeType":"ExpressionStatement","src":"13986:382:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3985,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3968,"src":"13485:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4022,"nodeType":"WhileStatement","src":"13478:905:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3974,"src":"14401:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4028,"nodeType":"IfStatement","src":"14397:22:17","trueBody":{"expression":{"hexValue":"30","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3960,"id":4027,"nodeType":"Return","src":"14411:8:17"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4030,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14470:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3956,"src":"14477:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:17","subExpression":{"id":4036,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14490:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:17","typeDescriptions":{}}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4042,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"14502:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4040,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:17","typeDescriptions":{}}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4029,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"14462:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3960,"id":4045,"nodeType":"Return","src":"14455:50:17"}]}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"12082:553:17","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4048,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:17","nodeType":"FunctionDefinition","parameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"a","nameLocation":"12664:1:17","nodeType":"VariableDeclaration","scope":4048,"src":"12656:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3956,"mutability":"mutable","name":"n","nameLocation":"12675:1:17","nodeType":"VariableDeclaration","scope":4048,"src":"12667:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:17"},"returnParameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4048,"src":"12701:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3958,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:17"},"scope":4919,"src":"12640:1919:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4068,"nodeType":"Block","src":"15159:82:17","statements":[{"id":4067,"nodeType":"UncheckedBlock","src":"15169:66:17","statements":[{"expression":{"arguments":[{"id":4060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"15212:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"15215:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4064,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"15222:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4058,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"15200:4:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4919_$","typeString":"type(library Math)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:17","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4105,"src":"15200:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4057,"id":4066,"nodeType":"Return","src":"15193:31:17"}]}]},"documentation":{"id":4049,"nodeType":"StructuredDocumentation","src":"14565:514:17","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4069,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:17","nodeType":"FunctionDefinition","parameters":{"id":4054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"a","nameLocation":"15113:1:17","nodeType":"VariableDeclaration","scope":4069,"src":"15105:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4053,"mutability":"mutable","name":"p","nameLocation":"15124:1:17","nodeType":"VariableDeclaration","scope":4069,"src":"15116:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:17"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4069,"src":"15150:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:17"},"scope":4919,"src":"15084:157:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"16011:174:17","statements":[{"assignments":[4082,4084],"declarations":[{"constant":false,"id":4082,"mutability":"mutable","name":"success","nameLocation":"16027:7:17","nodeType":"VariableDeclaration","scope":4104,"src":"16022:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"result","nameLocation":"16044:6:17","nodeType":"VariableDeclaration","scope":4104,"src":"16036:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4090,"initialValue":{"arguments":[{"id":4086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"16064:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4087,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4074,"src":"16067:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4088,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4076,"src":"16070:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4085,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4129,4211],"referencedDeclaration":4129,"src":"16054:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:17"},{"condition":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:17","subExpression":{"id":4091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"16087:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4101,"nodeType":"IfStatement","src":"16082:74:17","trueBody":{"id":4100,"nodeType":"Block","src":"16096:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4096,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"16122:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":4097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"16122:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4093,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"16110:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"16110:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4099,"nodeType":"ExpressionStatement","src":"16110:35:17"}]}},{"expression":{"id":4102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"16172:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4080,"id":4103,"nodeType":"Return","src":"16165:13:17"}]},"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"15247:678:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:17","nodeType":"FunctionDefinition","parameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"b","nameLocation":"15954:1:17","nodeType":"VariableDeclaration","scope":4105,"src":"15946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4071,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4074,"mutability":"mutable","name":"e","nameLocation":"15965:1:17","nodeType":"VariableDeclaration","scope":4105,"src":"15957:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4073,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4076,"mutability":"mutable","name":"m","nameLocation":"15976:1:17","nodeType":"VariableDeclaration","scope":4105,"src":"15968:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4075,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:17"},"returnParameters":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4105,"src":"16002:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4078,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:17"},"scope":4919,"src":"15930:255:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4128,"nodeType":"Block","src":"17039:1493:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"17053:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4126,"nodeType":"IfStatement","src":"17049:29:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4118,"id":4125,"nodeType":"Return","src":"17061:17:17"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:17","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:17"},"nodeType":"YulFunctionCall","src":"17138:11:17"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:17"},"nodeType":"YulFunctionCall","src":"18050:17:17"},"nodeType":"YulExpressionStatement","src":"18050:17:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:17"},"nodeType":"YulFunctionCall","src":"18087:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:17"},"nodeType":"YulFunctionCall","src":"18080:28:17"},"nodeType":"YulExpressionStatement","src":"18080:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:17"},"nodeType":"YulFunctionCall","src":"18128:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:17","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:17"},"nodeType":"YulFunctionCall","src":"18121:28:17"},"nodeType":"YulExpressionStatement","src":"18121:28:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:17"},"nodeType":"YulFunctionCall","src":"18169:14:17"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:17"},"nodeType":"YulFunctionCall","src":"18162:25:17"},"nodeType":"YulExpressionStatement","src":"18162:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:17"},"nodeType":"YulFunctionCall","src":"18207:14:17"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:17"},"nodeType":"YulFunctionCall","src":"18200:25:17"},"nodeType":"YulExpressionStatement","src":"18200:25:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:17"},"nodeType":"YulFunctionCall","src":"18245:14:17"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:17"},"nodeType":"YulFunctionCall","src":"18238:25:17"},"nodeType":"YulExpressionStatement","src":"18238:25:17"},{"nodeType":"YulAssignment","src":"18425:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:17"},"nodeType":"YulFunctionCall","src":"18447:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:17","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:17","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:17","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:17","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:17"},"nodeType":"YulFunctionCall","src":"18436:46:17"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:17"}]},{"nodeType":"YulAssignment","src":"18495:21:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:17","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:17"},"nodeType":"YulFunctionCall","src":"18505:11:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4108,"isOffset":false,"isSlot":false,"src":"18185:1:17","valueSize":1},{"declaration":4110,"isOffset":false,"isSlot":false,"src":"18223:1:17","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"18261:1:17","valueSize":1},{"declaration":4117,"isOffset":false,"isSlot":false,"src":"18495:6:17","valueSize":1},{"declaration":4115,"isOffset":false,"isSlot":false,"src":"18425:7:17","valueSize":1}],"flags":["memory-safe"],"id":4127,"nodeType":"InlineAssembly","src":"17088:1438:17"}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"16191:738:17","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4129,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:17","nodeType":"FunctionDefinition","parameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"b","nameLocation":"16961:1:17","nodeType":"VariableDeclaration","scope":4129,"src":"16953:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4107,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4110,"mutability":"mutable","name":"e","nameLocation":"16972:1:17","nodeType":"VariableDeclaration","scope":4129,"src":"16964:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"m","nameLocation":"16983:1:17","nodeType":"VariableDeclaration","scope":4129,"src":"16975:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:17"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4115,"mutability":"mutable","name":"success","nameLocation":"17014:7:17","nodeType":"VariableDeclaration","scope":4129,"src":"17009:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4114,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4117,"mutability":"mutable","name":"result","nameLocation":"17031:6:17","nodeType":"VariableDeclaration","scope":4129,"src":"17023:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:17"},"scope":4919,"src":"16934:1598:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4164,"nodeType":"Block","src":"18729:179:17","statements":[{"assignments":[4142,4144],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"success","nameLocation":"18745:7:17","nodeType":"VariableDeclaration","scope":4164,"src":"18740:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4141,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"result","nameLocation":"18767:6:17","nodeType":"VariableDeclaration","scope":4164,"src":"18754:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4143,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4150,"initialValue":{"arguments":[{"id":4146,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"18787:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4147,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"18790:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4148,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"18793:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4145,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4129,4211],"referencedDeclaration":4211,"src":"18777:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:17"},{"condition":{"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:17","subExpression":{"id":4151,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"18810:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"IfStatement","src":"18805:74:17","trueBody":{"id":4160,"nodeType":"Block","src":"18819:60:17","statements":[{"expression":{"arguments":[{"expression":{"id":4156,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"18845:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":4157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:17","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2975,"src":"18845:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4153,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"18833:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3008_$","typeString":"type(library Panic)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:17","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3007,"src":"18833:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4159,"nodeType":"ExpressionStatement","src":"18833:35:17"}]}},{"expression":{"id":4162,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"18895:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4140,"id":4163,"nodeType":"Return","src":"18888:13:17"}]},"documentation":{"id":4130,"nodeType":"StructuredDocumentation","src":"18538:85:17","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4165,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:17","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4132,"mutability":"mutable","name":"b","nameLocation":"18657:1:17","nodeType":"VariableDeclaration","scope":4165,"src":"18644:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4131,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4134,"mutability":"mutable","name":"e","nameLocation":"18673:1:17","nodeType":"VariableDeclaration","scope":4165,"src":"18660:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4133,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4136,"mutability":"mutable","name":"m","nameLocation":"18689:1:17","nodeType":"VariableDeclaration","scope":4165,"src":"18676:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4135,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:17"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4165,"src":"18715:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4138,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:17"},"scope":4919,"src":"18628:280:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4210,"nodeType":"Block","src":"19162:771:17","statements":[{"condition":{"arguments":[{"id":4180,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"19187:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4179,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4244,"src":"19176:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4189,"nodeType":"IfStatement","src":"19172:47:17","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4183,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4178,"id":4188,"nodeType":"Return","src":"19191:28:17"}},{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:17","nodeType":"VariableDeclaration","scope":4210,"src":"19230:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4194,"initialValue":{"expression":{"id":4192,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"19245:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:17","memberName":"length","nodeType":"MemberAccess","src":"19245:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:17"},{"expression":{"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"19335:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"19361:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:17","memberName":"length","nodeType":"MemberAccess","src":"19361:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4200,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"19371:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:17","memberName":"length","nodeType":"MemberAccess","src":"19371:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4202,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"19381:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4203,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"19387:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4204,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4170,"src":"19390:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4205,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"19393:1:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4196,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4208,"nodeType":"ExpressionStatement","src":"19335:60:17"},{"AST":{"nodeType":"YulBlock","src":"19431:496:17","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:17","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:17"},"nodeType":"YulFunctionCall","src":"19460:17:17"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:17","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:17"},"nodeType":"YulFunctionCall","src":"19589:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:17","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:17"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:17"},"nodeType":"YulFunctionCall","src":"19611:13:17"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:17"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:17"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:17"},"nodeType":"YulFunctionCall","src":"19578:62:17"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:17"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:17"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:17"},"nodeType":"YulFunctionCall","src":"19789:20:17"},"nodeType":"YulExpressionStatement","src":"19789:20:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:17","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:17"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:17"},"nodeType":"YulFunctionCall","src":"19898:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:17"},"nodeType":"YulFunctionCall","src":"19885:32:17"},"nodeType":"YulExpressionStatement","src":"19885:32:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":4191,"isOffset":false,"isSlot":false,"src":"19635:4:17","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"19804:4:17","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"19911:4:17","valueSize":1},{"declaration":4177,"isOffset":false,"isSlot":false,"src":"19464:6:17","valueSize":1},{"declaration":4177,"isOffset":false,"isSlot":false,"src":"19617:6:17","valueSize":1},{"declaration":4177,"isOffset":false,"isSlot":false,"src":"19796:6:17","valueSize":1},{"declaration":4175,"isOffset":false,"isSlot":false,"src":"19567:7:17","valueSize":1}],"flags":["memory-safe"],"id":4209,"nodeType":"InlineAssembly","src":"19406:521:17"}]},"documentation":{"id":4166,"nodeType":"StructuredDocumentation","src":"18914:88:17","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4211,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:17","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"b","nameLocation":"19048:1:17","nodeType":"VariableDeclaration","scope":4211,"src":"19035:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4167,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4170,"mutability":"mutable","name":"e","nameLocation":"19072:1:17","nodeType":"VariableDeclaration","scope":4211,"src":"19059:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4169,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"m","nameLocation":"19096:1:17","nodeType":"VariableDeclaration","scope":4211,"src":"19083:14:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4171,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:17"},"returnParameters":{"id":4178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"success","nameLocation":"19132:7:17","nodeType":"VariableDeclaration","scope":4211,"src":"19127:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4174,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4177,"mutability":"mutable","name":"result","nameLocation":"19154:6:17","nodeType":"VariableDeclaration","scope":4211,"src":"19141:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4176,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:17"},"scope":4919,"src":"19007:926:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"20088:176:17","statements":[{"body":{"id":4239,"nodeType":"Block","src":"20145:92:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4230,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"20163:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4232,"indexExpression":{"id":4231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"20173:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4238,"nodeType":"IfStatement","src":"20159:68:17","trueBody":{"id":4237,"nodeType":"Block","src":"20182:45:17","statements":[{"expression":{"hexValue":"66616c7365","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4218,"id":4236,"nodeType":"Return","src":"20200:12:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4223,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"20118:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4224,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"20122:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:17","memberName":"length","nodeType":"MemberAccess","src":"20122:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4240,"initializationExpression":{"assignments":[4220],"declarations":[{"constant":false,"id":4220,"mutability":"mutable","name":"i","nameLocation":"20111:1:17","nodeType":"VariableDeclaration","scope":4240,"src":"20103:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4219,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4222,"initialValue":{"hexValue":"30","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:17"},"loopExpression":{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:17","subExpression":{"id":4227,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4220,"src":"20142:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4229,"nodeType":"ExpressionStatement","src":"20140:3:17"},"nodeType":"ForStatement","src":"20098:139:17"},{"expression":{"hexValue":"74727565","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4218,"id":4242,"nodeType":"Return","src":"20246:11:17"}]},"documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"19939:72:17","text":" @dev Returns whether the provided byte array is zero."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:17","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:17","nodeType":"VariableDeclaration","scope":4244,"src":"20036:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4213,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:17"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"20082:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4216,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:17"},"scope":4919,"src":"20016:248:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4462,"nodeType":"Block","src":"20624:5124:17","statements":[{"id":4461,"nodeType":"UncheckedBlock","src":"20634:5108:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"20728:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4258,"nodeType":"IfStatement","src":"20724:53:17","trueBody":{"id":4257,"nodeType":"Block","src":"20736:41:17","statements":[{"expression":{"id":4255,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"20761:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4251,"id":4256,"nodeType":"Return","src":"20754:8:17"}]}},{"assignments":[4260],"declarations":[{"constant":false,"id":4260,"mutability":"mutable","name":"aa","nameLocation":"21712:2:17","nodeType":"VariableDeclaration","scope":4461,"src":"21704:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4262,"initialValue":{"id":4261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"21717:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:17"},{"assignments":[4264],"declarations":[{"constant":false,"id":4264,"mutability":"mutable","name":"xn","nameLocation":"21740:2:17","nodeType":"VariableDeclaration","scope":4461,"src":"21732:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4266,"initialValue":{"hexValue":"31","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"21765:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4282,"nodeType":"IfStatement","src":"21761:92:17","trueBody":{"id":4281,"nodeType":"Block","src":"21783:70:17","statements":[{"expression":{"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"21801:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ExpressionStatement","src":"21801:10:17"},{"expression":{"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4277,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"21829:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4280,"nodeType":"ExpressionStatement","src":"21829:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4283,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"21870:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"21866:90:17","trueBody":{"id":4297,"nodeType":"Block","src":"21887:69:17","statements":[{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4289,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"21905:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4292,"nodeType":"ExpressionStatement","src":"21905:9:17"},{"expression":{"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4293,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"21932:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4296,"nodeType":"ExpressionStatement","src":"21932:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4299,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"21973:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4314,"nodeType":"IfStatement","src":"21969:90:17","trueBody":{"id":4313,"nodeType":"Block","src":"21990:69:17","statements":[{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22008:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"22008:9:17"},{"expression":{"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22035:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4312,"nodeType":"ExpressionStatement","src":"22035:9:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4315,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22076:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4319,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:17","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4330,"nodeType":"IfStatement","src":"22072:89:17","trueBody":{"id":4329,"nodeType":"Block","src":"22093:68:17","statements":[{"expression":{"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4321,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22111:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4324,"nodeType":"ExpressionStatement","src":"22111:9:17"},{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4325,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22138:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"22138:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22178:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:17","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4346,"nodeType":"IfStatement","src":"22174:87:17","trueBody":{"id":4345,"nodeType":"Block","src":"22194:67:17","statements":[{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4337,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22212:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"22212:8:17"},{"expression":{"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22238:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4344,"nodeType":"ExpressionStatement","src":"22238:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22278:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4362,"nodeType":"IfStatement","src":"22274:87:17","trueBody":{"id":4361,"nodeType":"Block","src":"22294:67:17","statements":[{"expression":{"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4353,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22312:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4356,"nodeType":"ExpressionStatement","src":"22312:8:17"},{"expression":{"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22338:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4360,"nodeType":"ExpressionStatement","src":"22338:8:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4363,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"22378:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"22374:61:17","trueBody":{"id":4373,"nodeType":"Block","src":"22394:41:17","statements":[{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22412:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"22412:8:17"}]}},{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22855:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"22865:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"22855:18:17"},{"expression":{"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24760:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24766:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24771:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4387,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24775:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4394,"nodeType":"ExpressionStatement","src":"24760:23:17"},{"expression":{"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4395,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24869:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4396,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24875:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24880:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4398,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24884:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4401,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4405,"nodeType":"ExpressionStatement","src":"24869:23:17"},{"expression":{"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4406,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24980:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24986:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"24991:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4409,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"24995:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4416,"nodeType":"ExpressionStatement","src":"24980:23:17"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4417,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25089:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4418,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25095:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"25100:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4420,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25104:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"25089:23:17"},{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25199:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25205:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"25210:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4431,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25214:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ExpressionStatement","src":"25199:23:17"},{"expression":{"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25309:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4440,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25315:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"25320:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4442,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25324:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4449,"nodeType":"ExpressionStatement","src":"25309:23:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25698:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4453,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25719:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4454,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"25724:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4455,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"25728:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4451,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"25703:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"25703:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4251,"id":4460,"nodeType":"Return","src":"25691:40:17"}]}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"20270:292:17","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:17","nodeType":"FunctionDefinition","parameters":{"id":4248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"a","nameLocation":"20589:1:17","nodeType":"VariableDeclaration","scope":4463,"src":"20581:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:17"},"returnParameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"20615:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:17"},"scope":4919,"src":"20567:5181:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4496,"nodeType":"Block","src":"25921:171:17","statements":[{"id":4495,"nodeType":"UncheckedBlock","src":"25931:155:17","statements":[{"assignments":[4475],"declarations":[{"constant":false,"id":4475,"mutability":"mutable","name":"result","nameLocation":"25963:6:17","nodeType":"VariableDeclaration","scope":4495,"src":"25955:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4479,"initialValue":{"arguments":[{"id":4477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"25977:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4476,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4463,4497],"referencedDeclaration":4463,"src":"25972:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"26000:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4484,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"26042:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":4483,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"26025:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"26055:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"26064:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"26073:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4481,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26009:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26009:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4473,"id":4494,"nodeType":"Return","src":"25993:82:17"}]}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"25754:86:17","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4497,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:17","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4466,"mutability":"mutable","name":"a","nameLocation":"25867:1:17","nodeType":"VariableDeclaration","scope":4497,"src":"25859:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:17","nodeType":"VariableDeclaration","scope":4497,"src":"25870:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":4468,"nodeType":"UserDefinedTypeName","pathNode":{"id":4467,"name":"Rounding","nameLocations":["25870:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"25870:8:17"},"referencedDeclaration":3310,"src":"25870:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:17"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4497,"src":"25912:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:17"},"scope":4919,"src":"25845:247:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4587,"nodeType":"Block","src":"26281:2334:17","statements":[{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26363:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"26383:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4506,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26367:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26367:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"26363:64:17"},{"expression":{"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26503:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"26525:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4520,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26530:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4517,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26508:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26508:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4529,"nodeType":"ExpressionStatement","src":"26503:56:17"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4530,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26634:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4533,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"26656:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4534,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26661:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4531,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26639:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26639:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"26634:48:17"},{"expression":{"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4544,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26757:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"26779:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4548,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26784:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4550,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4545,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26762:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26762:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4557,"nodeType":"ExpressionStatement","src":"26757:44:17"},{"expression":{"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4558,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26874:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"26896:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4562,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4559,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26879:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26879:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4571,"nodeType":"ExpressionStatement","src":"26874:42:17"},{"expression":{"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4572,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"26988:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4500,"src":"27010:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4576,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"27015:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4578,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4573,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"26993:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"26993:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4585,"nodeType":"ExpressionStatement","src":"26988:41:17"},{"AST":{"nodeType":"YulBlock","src":"28490:119:17","statements":[{"nodeType":"YulAssignment","src":"28504:95:17","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:17"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:17"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:17"},"nodeType":"YulFunctionCall","src":"28520:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:17","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:17"},"nodeType":"YulFunctionCall","src":"28515:83:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:17"},"nodeType":"YulFunctionCall","src":"28509:90:17"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4503,"isOffset":false,"isSlot":false,"src":"28504:1:17","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"28512:1:17","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"28524:1:17","valueSize":1},{"declaration":4500,"isOffset":false,"isSlot":false,"src":"28527:1:17","valueSize":1}],"flags":["memory-safe"],"id":4586,"nodeType":"InlineAssembly","src":"28465:144:17"}]},"documentation":{"id":4498,"nodeType":"StructuredDocumentation","src":"26098:119:17","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4588,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:17","nodeType":"FunctionDefinition","parameters":{"id":4501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4500,"mutability":"mutable","name":"x","nameLocation":"26244:1:17","nodeType":"VariableDeclaration","scope":4588,"src":"26236:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:17"},"returnParameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4503,"mutability":"mutable","name":"r","nameLocation":"26278:1:17","nodeType":"VariableDeclaration","scope":4588,"src":"26270:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:17"},"scope":4919,"src":"26222:2393:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4621,"nodeType":"Block","src":"28848:175:17","statements":[{"id":4620,"nodeType":"UncheckedBlock","src":"28858:159:17","statements":[{"assignments":[4600],"declarations":[{"constant":false,"id":4600,"mutability":"mutable","name":"result","nameLocation":"28890:6:17","nodeType":"VariableDeclaration","scope":4620,"src":"28882:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4604,"initialValue":{"arguments":[{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"28904:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4601,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4588,4622],"referencedDeclaration":4588,"src":"28899:4:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"28931:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4609,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4594,"src":"28973:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":4608,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"28956:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4612,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4600,"src":"28991:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"29000:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"28940:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"28940:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4598,"id":4619,"nodeType":"Return","src":"28924:82:17"}]}]},"documentation":{"id":4589,"nodeType":"StructuredDocumentation","src":"28621:142:17","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4622,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:17","nodeType":"FunctionDefinition","parameters":{"id":4595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"value","nameLocation":"28790:5:17","nodeType":"VariableDeclaration","scope":4622,"src":"28782:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4594,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:17","nodeType":"VariableDeclaration","scope":4622,"src":"28797:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":4593,"nodeType":"UserDefinedTypeName","pathNode":{"id":4592,"name":"Rounding","nameLocations":["28797:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"28797:8:17"},"referencedDeclaration":3310,"src":"28797:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:17"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4622,"src":"28839:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:17"},"scope":4919,"src":"28768:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4750,"nodeType":"Block","src":"29216:854:17","statements":[{"assignments":[4631],"declarations":[{"constant":false,"id":4631,"mutability":"mutable","name":"result","nameLocation":"29234:6:17","nodeType":"VariableDeclaration","scope":4750,"src":"29226:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4633,"initialValue":{"hexValue":"30","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:17"},{"id":4747,"nodeType":"UncheckedBlock","src":"29254:787:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29282:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4650,"nodeType":"IfStatement","src":"29278:103:17","trueBody":{"id":4649,"nodeType":"Block","src":"29301:80:17","statements":[{"expression":{"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29319:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4644,"nodeType":"ExpressionStatement","src":"29319:17:17"},{"expression":{"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29354:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4648,"nodeType":"ExpressionStatement","src":"29354:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29398:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4667,"nodeType":"IfStatement","src":"29394:103:17","trueBody":{"id":4666,"nodeType":"Block","src":"29417:80:17","statements":[{"expression":{"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29435:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4661,"nodeType":"ExpressionStatement","src":"29435:17:17"},{"expression":{"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4662,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29470:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4665,"nodeType":"ExpressionStatement","src":"29470:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29514:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4684,"nodeType":"IfStatement","src":"29510:103:17","trueBody":{"id":4683,"nodeType":"Block","src":"29533:80:17","statements":[{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29551:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:17","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"29551:17:17"},{"expression":{"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4679,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29586:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4682,"nodeType":"ExpressionStatement","src":"29586:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29630:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4701,"nodeType":"IfStatement","src":"29626:100:17","trueBody":{"id":4700,"nodeType":"Block","src":"29648:78:17","statements":[{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29666:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"29666:16:17"},{"expression":{"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29700:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4699,"nodeType":"ExpressionStatement","src":"29700:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29743:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"IfStatement","src":"29739:100:17","trueBody":{"id":4717,"nodeType":"Block","src":"29761:78:17","statements":[{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29779:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"29779:16:17"},{"expression":{"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29813:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4716,"nodeType":"ExpressionStatement","src":"29813:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29856:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"29852:100:17","trueBody":{"id":4734,"nodeType":"Block","src":"29874:78:17","statements":[{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29892:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"29892:16:17"},{"expression":{"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"29926:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4733,"nodeType":"ExpressionStatement","src":"29926:11:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"29969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4746,"nodeType":"IfStatement","src":"29965:66:17","trueBody":{"id":4745,"nodeType":"Block","src":"29987:44:17","statements":[{"expression":{"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"30005:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4744,"nodeType":"ExpressionStatement","src":"30005:11:17"}]}}]},{"expression":{"id":4748,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"30057:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4629,"id":4749,"nodeType":"Return","src":"30050:13:17"}]},"documentation":{"id":4623,"nodeType":"StructuredDocumentation","src":"29029:120:17","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4751,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:17","nodeType":"FunctionDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"value","nameLocation":"29177:5:17","nodeType":"VariableDeclaration","scope":4751,"src":"29169:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4624,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:17"},"returnParameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4751,"src":"29207:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:17"},"scope":4919,"src":"29154:916:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"30305:177:17","statements":[{"id":4783,"nodeType":"UncheckedBlock","src":"30315:161:17","statements":[{"assignments":[4763],"declarations":[{"constant":false,"id":4763,"mutability":"mutable","name":"result","nameLocation":"30347:6:17","nodeType":"VariableDeclaration","scope":4783,"src":"30339:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4762,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4767,"initialValue":{"arguments":[{"id":4765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"30362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4764,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4751,4785],"referencedDeclaration":4751,"src":"30356:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"30389:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4772,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"30431:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":4771,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"30414:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"30450:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"30459:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4769,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"30398:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"30398:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4761,"id":4782,"nodeType":"Return","src":"30382:83:17"}]}]},"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"30076:143:17","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:17","nodeType":"FunctionDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4754,"mutability":"mutable","name":"value","nameLocation":"30247:5:17","nodeType":"VariableDeclaration","scope":4785,"src":"30239:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4753,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:17","nodeType":"VariableDeclaration","scope":4785,"src":"30254:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":4756,"nodeType":"UserDefinedTypeName","pathNode":{"id":4755,"name":"Rounding","nameLocations":["30254:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"30254:8:17"},"referencedDeclaration":3310,"src":"30254:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:17"},"returnParameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4785,"src":"30296:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:17"},"scope":4919,"src":"30224:258:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4861,"nodeType":"Block","src":"30800:675:17","statements":[{"expression":{"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4793,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"30882:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"30902:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:17","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4794,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"30886:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"30886:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4803,"nodeType":"ExpressionStatement","src":"30882:64:17"},{"expression":{"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4804,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"31044:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4808,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31049:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:17","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4805,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"31027:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"31027:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:17","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4817,"nodeType":"ExpressionStatement","src":"31022:56:17"},{"expression":{"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4818,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31153:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"31175:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4822,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31180:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:17","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4819,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"31158:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"31158:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:17","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4831,"nodeType":"ExpressionStatement","src":"31153:48:17"},{"expression":{"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4832,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31276:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"31298:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4836,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31303:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:17","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4833,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"31281:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"31281:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4845,"nodeType":"ExpressionStatement","src":"31276:44:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4846,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31426:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4849,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"31453:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4853,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"31458:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"31436:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"31436:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4792,"id":4860,"nodeType":"Return","src":"31418:50:17"}]},"documentation":{"id":4786,"nodeType":"StructuredDocumentation","src":"30488:246:17","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4862,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:17","nodeType":"FunctionDefinition","parameters":{"id":4789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"x","nameLocation":"30763:1:17","nodeType":"VariableDeclaration","scope":4862,"src":"30755:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4787,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:17"},"returnParameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"r","nameLocation":"30797:1:17","nodeType":"VariableDeclaration","scope":4862,"src":"30789:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4790,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:17"},"scope":4919,"src":"30739:736:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4898,"nodeType":"Block","src":"31712:184:17","statements":[{"id":4897,"nodeType":"UncheckedBlock","src":"31722:168:17","statements":[{"assignments":[4874],"declarations":[{"constant":false,"id":4874,"mutability":"mutable","name":"result","nameLocation":"31754:6:17","nodeType":"VariableDeclaration","scope":4897,"src":"31746:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4873,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4878,"initialValue":{"arguments":[{"id":4876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"31770:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4875,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4862,4899],"referencedDeclaration":4862,"src":"31763:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"31797:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4883,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"31839:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":4882,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"31822:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3310_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4886,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4874,"src":"31858:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:17","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"31873:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4880,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"31806:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6684_$","typeString":"type(library SafeCast)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6683,"src":"31806:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4872,"id":4896,"nodeType":"Return","src":"31790:89:17"}]}]},"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"31481:144:17","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:17","nodeType":"FunctionDefinition","parameters":{"id":4869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"value","nameLocation":"31654:5:17","nodeType":"VariableDeclaration","scope":4899,"src":"31646:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:17","nodeType":"VariableDeclaration","scope":4899,"src":"31661:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":4867,"nodeType":"UserDefinedTypeName","pathNode":{"id":4866,"name":"Rounding","nameLocations":["31661:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"31661:8:17"},"referencedDeclaration":3310,"src":"31661:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:17"},"returnParameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4899,"src":"31703:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:17"},"scope":4919,"src":"31630:266:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"32094:48:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4910,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"32117:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}],"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4908,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:17","typeDescriptions":{}}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4907,"id":4916,"nodeType":"Return","src":"32104:31:17"}]},"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"31902:113:17","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:17","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:17","nodeType":"VariableDeclaration","scope":4918,"src":"32046:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"},"typeName":{"id":4902,"nodeType":"UserDefinedTypeName","pathNode":{"id":4901,"name":"Rounding","nameLocations":["32046:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":3310,"src":"32046:8:17"},"referencedDeclaration":3310,"src":"32046:8:17","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3310","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:17"},"returnParameters":{"id":4907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4918,"src":"32088:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4905,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:17"},"scope":4919,"src":"32020:122:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4920,"src":"281:31863:17","usedErrors":[],"usedEvents":[]}],"src":"103:32042:17"},"id":17},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6684]},"id":6685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4921,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"218:550:18","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6684,"linearizedBaseContracts":[6684],"name":"SafeCast","nameLocation":"777:8:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"792:68:18","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4929,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:18","nodeType":"ErrorDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"bits","nameLocation":"908:4:18","nodeType":"VariableDeclaration","scope":4929,"src":"902:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4924,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"value","nameLocation":"922:5:18","nodeType":"VariableDeclaration","scope":4929,"src":"914:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4926,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:18"},"src":"865:64:18"},{"documentation":{"id":4930,"nodeType":"StructuredDocumentation","src":"935:75:18","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4934,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:18","nodeType":"ErrorDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"value","nameLocation":"1056:5:18","nodeType":"VariableDeclaration","scope":4934,"src":"1049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4931,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:18"},"src":"1015:48:18"},{"documentation":{"id":4935,"nodeType":"StructuredDocumentation","src":"1069:67:18","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4941,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:18","nodeType":"ErrorDefinition","parameters":{"id":4940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4937,"mutability":"mutable","name":"bits","nameLocation":"1183:4:18","nodeType":"VariableDeclaration","scope":4941,"src":"1177:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4936,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4939,"mutability":"mutable","name":"value","nameLocation":"1196:5:18","nodeType":"VariableDeclaration","scope":4941,"src":"1189:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4938,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:18"},"src":"1141:62:18"},{"documentation":{"id":4942,"nodeType":"StructuredDocumentation","src":"1209:75:18","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4946,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:18","nodeType":"ErrorDefinition","parameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"value","nameLocation":"1331:5:18","nodeType":"VariableDeclaration","scope":4946,"src":"1323:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:18"},"src":"1289:49:18"},{"body":{"id":4973,"nodeType":"Block","src":"1695:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"1709:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4956,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4955,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:18","memberName":"max","nodeType":"MemberAccess","src":"1717:17:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"1705:105:18","trueBody":{"id":4966,"nodeType":"Block","src":"1736:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"1793:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4961,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"1757:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4965,"nodeType":"RevertStatement","src":"1750:49:18"}]}},{"expression":{"arguments":[{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4949,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4968,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:18","typeDescriptions":{}}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4953,"id":4972,"nodeType":"Return","src":"1819:21:18"}]},"documentation":{"id":4947,"nodeType":"StructuredDocumentation","src":"1344:280:18","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4974,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:18","nodeType":"FunctionDefinition","parameters":{"id":4950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4949,"mutability":"mutable","name":"value","nameLocation":"1656:5:18","nodeType":"VariableDeclaration","scope":4974,"src":"1648:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4948,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:18"},"returnParameters":{"id":4953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4974,"src":"1686:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4951,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:18","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:18"},"scope":6684,"src":"1629:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5001,"nodeType":"Block","src":"2204:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"2218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4984,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4983,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:18","memberName":"max","nodeType":"MemberAccess","src":"2226:17:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4995,"nodeType":"IfStatement","src":"2214:105:18","trueBody":{"id":4994,"nodeType":"Block","src":"2245:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"2302:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4989,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4993,"nodeType":"RevertStatement","src":"2259:49:18"}]}},{"expression":{"arguments":[{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"2343:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4996,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:18","typeDescriptions":{}}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4981,"id":5000,"nodeType":"Return","src":"2328:21:18"}]},"documentation":{"id":4975,"nodeType":"StructuredDocumentation","src":"1853:280:18","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5002,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:18","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"value","nameLocation":"2165:5:18","nodeType":"VariableDeclaration","scope":5002,"src":"2157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:18"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5002,"src":"2195:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4979,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:18","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:18"},"scope":6684,"src":"2138:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"2713:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"2727:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5012,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5011,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:18","memberName":"max","nodeType":"MemberAccess","src":"2735:17:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"IfStatement","src":"2723:105:18","trueBody":{"id":5022,"nodeType":"Block","src":"2754:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"2811:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5017,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"2775:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5021,"nodeType":"RevertStatement","src":"2768:49:18"}]}},{"expression":{"arguments":[{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5005,"src":"2852:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5024,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:18","typeDescriptions":{}}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5009,"id":5028,"nodeType":"Return","src":"2837:21:18"}]},"documentation":{"id":5003,"nodeType":"StructuredDocumentation","src":"2362:280:18","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:18","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5005,"mutability":"mutable","name":"value","nameLocation":"2674:5:18","nodeType":"VariableDeclaration","scope":5030,"src":"2666:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:18"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5030,"src":"2704:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5007,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:18","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:18"},"scope":6684,"src":"2647:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5057,"nodeType":"Block","src":"3222:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"3236:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5040,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5039,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:18","memberName":"max","nodeType":"MemberAccess","src":"3244:17:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5051,"nodeType":"IfStatement","src":"3232:105:18","trueBody":{"id":5050,"nodeType":"Block","src":"3263:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"3320:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"3284:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5049,"nodeType":"RevertStatement","src":"3277:49:18"}]}},{"expression":{"arguments":[{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5033,"src":"3361:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5052,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:18","typeDescriptions":{}}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5037,"id":5056,"nodeType":"Return","src":"3346:21:18"}]},"documentation":{"id":5031,"nodeType":"StructuredDocumentation","src":"2871:280:18","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5058,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:18","nodeType":"FunctionDefinition","parameters":{"id":5034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5033,"mutability":"mutable","name":"value","nameLocation":"3183:5:18","nodeType":"VariableDeclaration","scope":5058,"src":"3175:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5032,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:18"},"returnParameters":{"id":5037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5058,"src":"3213:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5035,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:18","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:18"},"scope":6684,"src":"3156:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5085,"nodeType":"Block","src":"3731:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"3745:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5068,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5067,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:18","memberName":"max","nodeType":"MemberAccess","src":"3753:17:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5079,"nodeType":"IfStatement","src":"3741:105:18","trueBody":{"id":5078,"nodeType":"Block","src":"3772:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"3829:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5073,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"3793:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5077,"nodeType":"RevertStatement","src":"3786:49:18"}]}},{"expression":{"arguments":[{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5061,"src":"3870:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5080,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:18","typeDescriptions":{}}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5065,"id":5084,"nodeType":"Return","src":"3855:21:18"}]},"documentation":{"id":5059,"nodeType":"StructuredDocumentation","src":"3380:280:18","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5086,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:18","nodeType":"FunctionDefinition","parameters":{"id":5062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5061,"mutability":"mutable","name":"value","nameLocation":"3692:5:18","nodeType":"VariableDeclaration","scope":5086,"src":"3684:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5060,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:18"},"returnParameters":{"id":5065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5086,"src":"3722:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5063,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:18","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:18"},"scope":6684,"src":"3665:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5113,"nodeType":"Block","src":"4240:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"4254:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5096,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5095,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:18","memberName":"max","nodeType":"MemberAccess","src":"4262:17:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5107,"nodeType":"IfStatement","src":"4250:105:18","trueBody":{"id":5106,"nodeType":"Block","src":"4281:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"4338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5101,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"4302:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5105,"nodeType":"RevertStatement","src":"4295:49:18"}]}},{"expression":{"arguments":[{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"4379:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5108,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:18","typeDescriptions":{}}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5093,"id":5112,"nodeType":"Return","src":"4364:21:18"}]},"documentation":{"id":5087,"nodeType":"StructuredDocumentation","src":"3889:280:18","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5114,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:18","nodeType":"FunctionDefinition","parameters":{"id":5090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5089,"mutability":"mutable","name":"value","nameLocation":"4201:5:18","nodeType":"VariableDeclaration","scope":5114,"src":"4193:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:18"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5114,"src":"4231:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5091,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:18","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:18"},"scope":6684,"src":"4174:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"4749:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"4763:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5124,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5123,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:18","memberName":"max","nodeType":"MemberAccess","src":"4771:17:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5135,"nodeType":"IfStatement","src":"4759:105:18","trueBody":{"id":5134,"nodeType":"Block","src":"4790:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"4847:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5129,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"4811:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5133,"nodeType":"RevertStatement","src":"4804:49:18"}]}},{"expression":{"arguments":[{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"4888:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5136,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:18","typeDescriptions":{}}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5121,"id":5140,"nodeType":"Return","src":"4873:21:18"}]},"documentation":{"id":5115,"nodeType":"StructuredDocumentation","src":"4398:280:18","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:18","nodeType":"FunctionDefinition","parameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"value","nameLocation":"4710:5:18","nodeType":"VariableDeclaration","scope":5142,"src":"4702:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:18"},"returnParameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5142,"src":"4740:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5119,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:18","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:18"},"scope":6684,"src":"4683:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5169,"nodeType":"Block","src":"5258:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5272:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5152,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5151,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:18","memberName":"max","nodeType":"MemberAccess","src":"5280:17:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5163,"nodeType":"IfStatement","src":"5268:105:18","trueBody":{"id":5162,"nodeType":"Block","src":"5299:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5356:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5157,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"5320:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5161,"nodeType":"RevertStatement","src":"5313:49:18"}]}},{"expression":{"arguments":[{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"5397:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5164,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:18","typeDescriptions":{}}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5149,"id":5168,"nodeType":"Return","src":"5382:21:18"}]},"documentation":{"id":5143,"nodeType":"StructuredDocumentation","src":"4907:280:18","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:18","nodeType":"FunctionDefinition","parameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"value","nameLocation":"5219:5:18","nodeType":"VariableDeclaration","scope":5170,"src":"5211:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:18"},"returnParameters":{"id":5149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5170,"src":"5249:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5147,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:18","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:18"},"scope":6684,"src":"5192:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5197,"nodeType":"Block","src":"5767:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"5781:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5180,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5179,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:18","memberName":"max","nodeType":"MemberAccess","src":"5789:17:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5191,"nodeType":"IfStatement","src":"5777:105:18","trueBody":{"id":5190,"nodeType":"Block","src":"5808:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"5865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5185,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"5829:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5189,"nodeType":"RevertStatement","src":"5822:49:18"}]}},{"expression":{"arguments":[{"id":5194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"5906:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5192,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:18","typeDescriptions":{}}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5177,"id":5196,"nodeType":"Return","src":"5891:21:18"}]},"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"5416:280:18","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5198,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:18","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"value","nameLocation":"5728:5:18","nodeType":"VariableDeclaration","scope":5198,"src":"5720:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:18"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5198,"src":"5758:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5175,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:18","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:18"},"scope":6684,"src":"5701:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5225,"nodeType":"Block","src":"6276:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"6290:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5208,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5207,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:18","memberName":"max","nodeType":"MemberAccess","src":"6298:17:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5219,"nodeType":"IfStatement","src":"6286:105:18","trueBody":{"id":5218,"nodeType":"Block","src":"6317:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6338:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5217,"nodeType":"RevertStatement","src":"6331:49:18"}]}},{"expression":{"arguments":[{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"6415:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5220,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:18","typeDescriptions":{}}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5205,"id":5224,"nodeType":"Return","src":"6400:21:18"}]},"documentation":{"id":5199,"nodeType":"StructuredDocumentation","src":"5925:280:18","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5226,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:18","nodeType":"FunctionDefinition","parameters":{"id":5202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5201,"mutability":"mutable","name":"value","nameLocation":"6237:5:18","nodeType":"VariableDeclaration","scope":5226,"src":"6229:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:18"},"returnParameters":{"id":5205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5226,"src":"6267:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5203,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:18","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:18"},"scope":6684,"src":"6210:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5253,"nodeType":"Block","src":"6785:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"6799:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5236,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5235,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:18","memberName":"max","nodeType":"MemberAccess","src":"6807:17:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5247,"nodeType":"IfStatement","src":"6795:105:18","trueBody":{"id":5246,"nodeType":"Block","src":"6826:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"6883:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5241,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"6847:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5245,"nodeType":"RevertStatement","src":"6840:49:18"}]}},{"expression":{"arguments":[{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"6924:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5248,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:18","typeDescriptions":{}}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5233,"id":5252,"nodeType":"Return","src":"6909:21:18"}]},"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"6434:280:18","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5254,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:18","nodeType":"FunctionDefinition","parameters":{"id":5230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"value","nameLocation":"6746:5:18","nodeType":"VariableDeclaration","scope":5254,"src":"6738:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:18"},"returnParameters":{"id":5233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5254,"src":"6776:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5231,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:18","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:18"},"scope":6684,"src":"6719:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5281,"nodeType":"Block","src":"7294:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"7308:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5264,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5263,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:18","memberName":"max","nodeType":"MemberAccess","src":"7316:17:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5275,"nodeType":"IfStatement","src":"7304:105:18","trueBody":{"id":5274,"nodeType":"Block","src":"7335:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"7392:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5269,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"7356:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5273,"nodeType":"RevertStatement","src":"7349:49:18"}]}},{"expression":{"arguments":[{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"7433:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5276,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:18","typeDescriptions":{}}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5261,"id":5280,"nodeType":"Return","src":"7418:21:18"}]},"documentation":{"id":5255,"nodeType":"StructuredDocumentation","src":"6943:280:18","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5282,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:18","nodeType":"FunctionDefinition","parameters":{"id":5258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5257,"mutability":"mutable","name":"value","nameLocation":"7255:5:18","nodeType":"VariableDeclaration","scope":5282,"src":"7247:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5256,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:18"},"returnParameters":{"id":5261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5282,"src":"7285:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5259,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:18","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:18"},"scope":6684,"src":"7228:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5309,"nodeType":"Block","src":"7803:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"7817:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5292,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5291,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:18","memberName":"max","nodeType":"MemberAccess","src":"7825:17:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"nodeType":"IfStatement","src":"7813:105:18","trueBody":{"id":5302,"nodeType":"Block","src":"7844:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"7901:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"7865:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5301,"nodeType":"RevertStatement","src":"7858:49:18"}]}},{"expression":{"arguments":[{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5285,"src":"7942:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5304,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:18","typeDescriptions":{}}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5289,"id":5308,"nodeType":"Return","src":"7927:21:18"}]},"documentation":{"id":5283,"nodeType":"StructuredDocumentation","src":"7452:280:18","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5310,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:18","nodeType":"FunctionDefinition","parameters":{"id":5286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5285,"mutability":"mutable","name":"value","nameLocation":"7764:5:18","nodeType":"VariableDeclaration","scope":5310,"src":"7756:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5284,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:18"},"returnParameters":{"id":5289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5310,"src":"7794:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5287,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:18","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:18"},"scope":6684,"src":"7737:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5337,"nodeType":"Block","src":"8312:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"8326:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5320,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5319,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:18","memberName":"max","nodeType":"MemberAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5331,"nodeType":"IfStatement","src":"8322:105:18","trueBody":{"id":5330,"nodeType":"Block","src":"8353:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"8410:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5325,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"8374:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5329,"nodeType":"RevertStatement","src":"8367:49:18"}]}},{"expression":{"arguments":[{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5313,"src":"8451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5332,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:18","typeDescriptions":{}}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5317,"id":5336,"nodeType":"Return","src":"8436:21:18"}]},"documentation":{"id":5311,"nodeType":"StructuredDocumentation","src":"7961:280:18","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5338,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:18","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"value","nameLocation":"8273:5:18","nodeType":"VariableDeclaration","scope":5338,"src":"8265:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5312,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:18"},"returnParameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5338,"src":"8303:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5315,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:18"},"scope":6684,"src":"8246:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5365,"nodeType":"Block","src":"8821:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"8835:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5348,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5347,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:18","memberName":"max","nodeType":"MemberAccess","src":"8843:17:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5359,"nodeType":"IfStatement","src":"8831:105:18","trueBody":{"id":5358,"nodeType":"Block","src":"8862:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"8919:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5353,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"8883:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5357,"nodeType":"RevertStatement","src":"8876:49:18"}]}},{"expression":{"arguments":[{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5341,"src":"8960:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5360,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:18","typeDescriptions":{}}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5345,"id":5364,"nodeType":"Return","src":"8945:21:18"}]},"documentation":{"id":5339,"nodeType":"StructuredDocumentation","src":"8470:280:18","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5366,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:18","nodeType":"FunctionDefinition","parameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"value","nameLocation":"8782:5:18","nodeType":"VariableDeclaration","scope":5366,"src":"8774:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5340,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:18"},"returnParameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5366,"src":"8812:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5343,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:18","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:18"},"scope":6684,"src":"8755:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5393,"nodeType":"Block","src":"9330:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"9344:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5376,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5375,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:18","memberName":"max","nodeType":"MemberAccess","src":"9352:17:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5387,"nodeType":"IfStatement","src":"9340:105:18","trueBody":{"id":5386,"nodeType":"Block","src":"9371:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"9428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5381,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"9392:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5385,"nodeType":"RevertStatement","src":"9385:49:18"}]}},{"expression":{"arguments":[{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5369,"src":"9469:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5388,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:18","typeDescriptions":{}}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5373,"id":5392,"nodeType":"Return","src":"9454:21:18"}]},"documentation":{"id":5367,"nodeType":"StructuredDocumentation","src":"8979:280:18","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:18","nodeType":"FunctionDefinition","parameters":{"id":5370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5369,"mutability":"mutable","name":"value","nameLocation":"9291:5:18","nodeType":"VariableDeclaration","scope":5394,"src":"9283:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5368,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:18"},"returnParameters":{"id":5373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5394,"src":"9321:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5371,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:18"},"scope":6684,"src":"9264:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5421,"nodeType":"Block","src":"9839:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5404,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5403,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:18","memberName":"max","nodeType":"MemberAccess","src":"9861:17:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5415,"nodeType":"IfStatement","src":"9849:105:18","trueBody":{"id":5414,"nodeType":"Block","src":"9880:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"9937:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"9901:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5413,"nodeType":"RevertStatement","src":"9894:49:18"}]}},{"expression":{"arguments":[{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"9978:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5416,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:18","typeDescriptions":{}}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5401,"id":5420,"nodeType":"Return","src":"9963:21:18"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"9488:280:18","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5422,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:18","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"value","nameLocation":"9800:5:18","nodeType":"VariableDeclaration","scope":5422,"src":"9792:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5396,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:18"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5422,"src":"9830:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5399,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:18","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:18"},"scope":6684,"src":"9773:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5449,"nodeType":"Block","src":"10348:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"10362:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5432,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5431,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:18","memberName":"max","nodeType":"MemberAccess","src":"10370:17:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5443,"nodeType":"IfStatement","src":"10358:105:18","trueBody":{"id":5442,"nodeType":"Block","src":"10389:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"10446:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"10410:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5441,"nodeType":"RevertStatement","src":"10403:49:18"}]}},{"expression":{"arguments":[{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"10487:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5444,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:18","typeDescriptions":{}}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5429,"id":5448,"nodeType":"Return","src":"10472:21:18"}]},"documentation":{"id":5423,"nodeType":"StructuredDocumentation","src":"9997:280:18","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5450,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:18","nodeType":"FunctionDefinition","parameters":{"id":5426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"value","nameLocation":"10309:5:18","nodeType":"VariableDeclaration","scope":5450,"src":"10301:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:18"},"returnParameters":{"id":5429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5450,"src":"10339:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5427,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:18","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:18"},"scope":6684,"src":"10282:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5477,"nodeType":"Block","src":"10857:152:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"10871:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5460,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5459,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:18","memberName":"max","nodeType":"MemberAccess","src":"10879:17:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5471,"nodeType":"IfStatement","src":"10867:105:18","trueBody":{"id":5470,"nodeType":"Block","src":"10898:74:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"10955:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5465,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"10919:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5469,"nodeType":"RevertStatement","src":"10912:49:18"}]}},{"expression":{"arguments":[{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5453,"src":"10996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5472,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:18","typeDescriptions":{}}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5457,"id":5476,"nodeType":"Return","src":"10981:21:18"}]},"documentation":{"id":5451,"nodeType":"StructuredDocumentation","src":"10506:280:18","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5478,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:18","nodeType":"FunctionDefinition","parameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5453,"mutability":"mutable","name":"value","nameLocation":"10818:5:18","nodeType":"VariableDeclaration","scope":5478,"src":"10810:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5452,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:18"},"returnParameters":{"id":5457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5456,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5478,"src":"10848:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5455,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:18","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:18"},"scope":6684,"src":"10791:218:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5505,"nodeType":"Block","src":"11360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"11374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5488,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:18","memberName":"max","nodeType":"MemberAccess","src":"11382:16:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5499,"nodeType":"IfStatement","src":"11370:103:18","trueBody":{"id":5498,"nodeType":"Block","src":"11400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"11456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5493,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5497,"nodeType":"RevertStatement","src":"11414:48:18"}]}},{"expression":{"arguments":[{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5481,"src":"11496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5500,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:18","typeDescriptions":{}}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5485,"id":5504,"nodeType":"Return","src":"11482:20:18"}]},"documentation":{"id":5479,"nodeType":"StructuredDocumentation","src":"11015:276:18","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5506,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5481,"mutability":"mutable","name":"value","nameLocation":"11322:5:18","nodeType":"VariableDeclaration","scope":5506,"src":"11314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5480,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:18"},"returnParameters":{"id":5485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5506,"src":"11352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5483,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:18"},"scope":6684,"src":"11296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5533,"nodeType":"Block","src":"11860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"11874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5516,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5515,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:18","memberName":"max","nodeType":"MemberAccess","src":"11882:16:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5527,"nodeType":"IfStatement","src":"11870:103:18","trueBody":{"id":5526,"nodeType":"Block","src":"11900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"11956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5521,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"11921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5525,"nodeType":"RevertStatement","src":"11914:48:18"}]}},{"expression":{"arguments":[{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"11996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5528,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:18","typeDescriptions":{}}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5513,"id":5532,"nodeType":"Return","src":"11982:20:18"}]},"documentation":{"id":5507,"nodeType":"StructuredDocumentation","src":"11515:276:18","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5534,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"value","nameLocation":"11822:5:18","nodeType":"VariableDeclaration","scope":5534,"src":"11814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:18"},"returnParameters":{"id":5513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5534,"src":"11852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5511,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:18","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:18"},"scope":6684,"src":"11796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5561,"nodeType":"Block","src":"12360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"12374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5544,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:18","memberName":"max","nodeType":"MemberAccess","src":"12382:16:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5555,"nodeType":"IfStatement","src":"12370:103:18","trueBody":{"id":5554,"nodeType":"Block","src":"12400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"12456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5549,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"12421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"RevertStatement","src":"12414:48:18"}]}},{"expression":{"arguments":[{"id":5558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"12496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5556,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:18","typeDescriptions":{}}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5541,"id":5560,"nodeType":"Return","src":"12482:20:18"}]},"documentation":{"id":5535,"nodeType":"StructuredDocumentation","src":"12015:276:18","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5562,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5537,"mutability":"mutable","name":"value","nameLocation":"12322:5:18","nodeType":"VariableDeclaration","scope":5562,"src":"12314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:18"},"returnParameters":{"id":5541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5562,"src":"12352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5539,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:18"},"scope":6684,"src":"12296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5589,"nodeType":"Block","src":"12860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"12874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5572,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5571,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:18","memberName":"max","nodeType":"MemberAccess","src":"12882:16:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5583,"nodeType":"IfStatement","src":"12870:103:18","trueBody":{"id":5582,"nodeType":"Block","src":"12900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"12956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5577,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"12921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5581,"nodeType":"RevertStatement","src":"12914:48:18"}]}},{"expression":{"arguments":[{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"12996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5584,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:18","typeDescriptions":{}}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5569,"id":5588,"nodeType":"Return","src":"12982:20:18"}]},"documentation":{"id":5563,"nodeType":"StructuredDocumentation","src":"12515:276:18","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5590,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"value","nameLocation":"12822:5:18","nodeType":"VariableDeclaration","scope":5590,"src":"12814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:18"},"returnParameters":{"id":5569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5590,"src":"12852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5567,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:18","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:18"},"scope":6684,"src":"12796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5617,"nodeType":"Block","src":"13360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"13374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5600,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:18","memberName":"max","nodeType":"MemberAccess","src":"13382:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5611,"nodeType":"IfStatement","src":"13370:103:18","trueBody":{"id":5610,"nodeType":"Block","src":"13400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"13456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5605,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"13421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5609,"nodeType":"RevertStatement","src":"13414:48:18"}]}},{"expression":{"arguments":[{"id":5614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5593,"src":"13496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5612,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:18","typeDescriptions":{}}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5597,"id":5616,"nodeType":"Return","src":"13482:20:18"}]},"documentation":{"id":5591,"nodeType":"StructuredDocumentation","src":"13015:276:18","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5593,"mutability":"mutable","name":"value","nameLocation":"13322:5:18","nodeType":"VariableDeclaration","scope":5618,"src":"13314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5592,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:18"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5618,"src":"13352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5595,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:18"},"scope":6684,"src":"13296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5645,"nodeType":"Block","src":"13860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"13874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5628,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:18","memberName":"max","nodeType":"MemberAccess","src":"13882:16:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5639,"nodeType":"IfStatement","src":"13870:103:18","trueBody":{"id":5638,"nodeType":"Block","src":"13900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"13956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5633,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"13921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5637,"nodeType":"RevertStatement","src":"13914:48:18"}]}},{"expression":{"arguments":[{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"13996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5640,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:18","typeDescriptions":{}}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5625,"id":5644,"nodeType":"Return","src":"13982:20:18"}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"13515:276:18","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5646,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"value","nameLocation":"13822:5:18","nodeType":"VariableDeclaration","scope":5646,"src":"13814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:18"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5646,"src":"13852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5623,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:18","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:18"},"scope":6684,"src":"13796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5673,"nodeType":"Block","src":"14360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"14374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5656,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:18","memberName":"max","nodeType":"MemberAccess","src":"14382:16:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5667,"nodeType":"IfStatement","src":"14370:103:18","trueBody":{"id":5666,"nodeType":"Block","src":"14400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"14456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5661,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"14421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5665,"nodeType":"RevertStatement","src":"14414:48:18"}]}},{"expression":{"arguments":[{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"14496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5668,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:18","typeDescriptions":{}}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5653,"id":5672,"nodeType":"Return","src":"14482:20:18"}]},"documentation":{"id":5647,"nodeType":"StructuredDocumentation","src":"14015:276:18","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"value","nameLocation":"14322:5:18","nodeType":"VariableDeclaration","scope":5674,"src":"14314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5648,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:18"},"returnParameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5674,"src":"14352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5651,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:18","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:18"},"scope":6684,"src":"14296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5701,"nodeType":"Block","src":"14860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"14874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5684,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:18","memberName":"max","nodeType":"MemberAccess","src":"14882:16:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5695,"nodeType":"IfStatement","src":"14870:103:18","trueBody":{"id":5694,"nodeType":"Block","src":"14900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"14956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5689,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"14921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5693,"nodeType":"RevertStatement","src":"14914:48:18"}]}},{"expression":{"arguments":[{"id":5698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5677,"src":"14996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5696,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:18","typeDescriptions":{}}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5681,"id":5700,"nodeType":"Return","src":"14982:20:18"}]},"documentation":{"id":5675,"nodeType":"StructuredDocumentation","src":"14515:276:18","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5677,"mutability":"mutable","name":"value","nameLocation":"14822:5:18","nodeType":"VariableDeclaration","scope":5702,"src":"14814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5676,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:18"},"returnParameters":{"id":5681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5702,"src":"14852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5679,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:18","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:18"},"scope":6684,"src":"14796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"15360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5712,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:18","memberName":"max","nodeType":"MemberAccess","src":"15382:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5723,"nodeType":"IfStatement","src":"15370:103:18","trueBody":{"id":5722,"nodeType":"Block","src":"15400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5717,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"15421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5721,"nodeType":"RevertStatement","src":"15414:48:18"}]}},{"expression":{"arguments":[{"id":5726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5705,"src":"15496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5724,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:18","typeDescriptions":{}}},"id":5727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5709,"id":5728,"nodeType":"Return","src":"15482:20:18"}]},"documentation":{"id":5703,"nodeType":"StructuredDocumentation","src":"15015:276:18","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5705,"mutability":"mutable","name":"value","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":5730,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5704,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:18"},"returnParameters":{"id":5709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5730,"src":"15352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5707,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:18"},"scope":6684,"src":"15296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5757,"nodeType":"Block","src":"15860:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"15874:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5740,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:18","memberName":"max","nodeType":"MemberAccess","src":"15882:16:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5751,"nodeType":"IfStatement","src":"15870:103:18","trueBody":{"id":5750,"nodeType":"Block","src":"15900:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"15956:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5745,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"15921:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5749,"nodeType":"RevertStatement","src":"15914:48:18"}]}},{"expression":{"arguments":[{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"15996:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5752,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:18","typeDescriptions":{}}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5737,"id":5756,"nodeType":"Return","src":"15982:20:18"}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"15515:276:18","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:18","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"15822:5:18","nodeType":"VariableDeclaration","scope":5758,"src":"15814:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:18"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5758,"src":"15852:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5735,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:18"},"scope":6684,"src":"15796:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5785,"nodeType":"Block","src":"16360:149:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"16374:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5768,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:18","memberName":"max","nodeType":"MemberAccess","src":"16382:16:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5779,"nodeType":"IfStatement","src":"16370:103:18","trueBody":{"id":5778,"nodeType":"Block","src":"16400:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"16456:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5773,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"16421:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5777,"nodeType":"RevertStatement","src":"16414:48:18"}]}},{"expression":{"arguments":[{"id":5782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"16496:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5780,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:18","typeDescriptions":{}}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5765,"id":5784,"nodeType":"Return","src":"16482:20:18"}]},"documentation":{"id":5759,"nodeType":"StructuredDocumentation","src":"16015:276:18","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:18","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"value","nameLocation":"16322:5:18","nodeType":"VariableDeclaration","scope":5786,"src":"16314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:18"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5786,"src":"16352:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5763,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:18"},"scope":6684,"src":"16296:213:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5813,"nodeType":"Block","src":"16854:146:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"16868:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5796,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:18","memberName":"max","nodeType":"MemberAccess","src":"16876:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5807,"nodeType":"IfStatement","src":"16864:101:18","trueBody":{"id":5806,"nodeType":"Block","src":"16893:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"16948:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5801,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4929,"src":"16914:30:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5805,"nodeType":"RevertStatement","src":"16907:47:18"}]}},{"expression":{"arguments":[{"id":5810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"16987:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5808,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:18","typeDescriptions":{}}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5793,"id":5812,"nodeType":"Return","src":"16974:19:18"}]},"documentation":{"id":5787,"nodeType":"StructuredDocumentation","src":"16515:272:18","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5814,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:18","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"value","nameLocation":"16817:5:18","nodeType":"VariableDeclaration","scope":5814,"src":"16809:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:18"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5814,"src":"16847:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5791,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:18"},"scope":6684,"src":"16792:208:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5836,"nodeType":"Block","src":"17236:128:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"17250:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5830,"nodeType":"IfStatement","src":"17246:81:18","trueBody":{"id":5829,"nodeType":"Block","src":"17261:66:18","statements":[{"errorCall":{"arguments":[{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"17310:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5825,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4934,"src":"17282:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5828,"nodeType":"RevertStatement","src":"17275:41:18"}]}},{"expression":{"arguments":[{"id":5833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5817,"src":"17351:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:18","typeDescriptions":{}}},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5821,"id":5835,"nodeType":"Return","src":"17336:21:18"}]},"documentation":{"id":5815,"nodeType":"StructuredDocumentation","src":"17006:160:18","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5837,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:18","nodeType":"FunctionDefinition","parameters":{"id":5818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5817,"mutability":"mutable","name":"value","nameLocation":"17197:5:18","nodeType":"VariableDeclaration","scope":5837,"src":"17190:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5816,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:18"},"returnParameters":{"id":5821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5837,"src":"17227:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5819,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:18"},"scope":6684,"src":"17171:193:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"17761:150:18","statements":[{"expression":{"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5845,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"17771:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"17791:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5846,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:18","typeDescriptions":{}}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5851,"nodeType":"ExpressionStatement","src":"17771:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5843,"src":"17811:10:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"17825:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5861,"nodeType":"IfStatement","src":"17807:98:18","trueBody":{"id":5860,"nodeType":"Block","src":"17832:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:18","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"17888:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5855,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"17853:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5859,"nodeType":"RevertStatement","src":"17846:48:18"}]}}]},"documentation":{"id":5838,"nodeType":"StructuredDocumentation","src":"17370:312:18","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:18","nodeType":"FunctionDefinition","parameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"value","nameLocation":"17712:5:18","nodeType":"VariableDeclaration","scope":5863,"src":"17705:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5839,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:18"},"returnParameters":{"id":5844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5843,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:18","nodeType":"VariableDeclaration","scope":5863,"src":"17742:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5842,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:18","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:18"},"scope":6684,"src":"17687:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5888,"nodeType":"Block","src":"18308:150:18","statements":[{"expression":{"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"18318:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"18338:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5872,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:18","typeDescriptions":{}}},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5877,"nodeType":"ExpressionStatement","src":"18318:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5878,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"18358:10:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"18372:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5887,"nodeType":"IfStatement","src":"18354:98:18","trueBody":{"id":5886,"nodeType":"Block","src":"18379:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:18","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"18435:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5881,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"18400:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5885,"nodeType":"RevertStatement","src":"18393:48:18"}]}}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"17917:312:18","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5889,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:18","nodeType":"FunctionDefinition","parameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"18259:5:18","nodeType":"VariableDeclaration","scope":5889,"src":"18252:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5865,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:18"},"returnParameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:18","nodeType":"VariableDeclaration","scope":5889,"src":"18289:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5868,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:18","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:18"},"scope":6684,"src":"18234:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5914,"nodeType":"Block","src":"18855:150:18","statements":[{"expression":{"id":5902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5897,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"18865:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"18885:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5898,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:18","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5903,"nodeType":"ExpressionStatement","src":"18865:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"18905:10:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"18919:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5913,"nodeType":"IfStatement","src":"18901:98:18","trueBody":{"id":5912,"nodeType":"Block","src":"18926:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:18","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"18982:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5907,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"18947:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5911,"nodeType":"RevertStatement","src":"18940:48:18"}]}}]},"documentation":{"id":5890,"nodeType":"StructuredDocumentation","src":"18464:312:18","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5915,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:18","nodeType":"FunctionDefinition","parameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"value","nameLocation":"18806:5:18","nodeType":"VariableDeclaration","scope":5915,"src":"18799:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5891,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:18"},"returnParameters":{"id":5896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5895,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:18","nodeType":"VariableDeclaration","scope":5915,"src":"18836:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5894,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:18","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:18"},"scope":6684,"src":"18781:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5940,"nodeType":"Block","src":"19402:150:18","statements":[{"expression":{"id":5928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5923,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"19412:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"19432:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5924,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:18","typeDescriptions":{}}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5929,"nodeType":"ExpressionStatement","src":"19412:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"19452:10:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"19466:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5939,"nodeType":"IfStatement","src":"19448:98:18","trueBody":{"id":5938,"nodeType":"Block","src":"19473:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:18","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"19529:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5933,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"19494:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5937,"nodeType":"RevertStatement","src":"19487:48:18"}]}}]},"documentation":{"id":5916,"nodeType":"StructuredDocumentation","src":"19011:312:18","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5941,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:18","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"value","nameLocation":"19353:5:18","nodeType":"VariableDeclaration","scope":5941,"src":"19346:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5917,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:18"},"returnParameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:18","nodeType":"VariableDeclaration","scope":5941,"src":"19383:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5920,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:18","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:18"},"scope":6684,"src":"19328:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5966,"nodeType":"Block","src":"19949:150:18","statements":[{"expression":{"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"19959:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"19979:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5950,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:18","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5955,"nodeType":"ExpressionStatement","src":"19959:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5956,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"19999:10:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"20013:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5965,"nodeType":"IfStatement","src":"19995:98:18","trueBody":{"id":5964,"nodeType":"Block","src":"20020:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:18","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"20076:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5959,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"20041:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5963,"nodeType":"RevertStatement","src":"20034:48:18"}]}}]},"documentation":{"id":5942,"nodeType":"StructuredDocumentation","src":"19558:312:18","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5967,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:18","nodeType":"FunctionDefinition","parameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"value","nameLocation":"19900:5:18","nodeType":"VariableDeclaration","scope":5967,"src":"19893:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5943,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:18"},"returnParameters":{"id":5948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:18","nodeType":"VariableDeclaration","scope":5967,"src":"19930:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5946,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:18","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:18"},"scope":6684,"src":"19875:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5992,"nodeType":"Block","src":"20496:150:18","statements":[{"expression":{"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5975,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"20506:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"20526:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5976,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:18","typeDescriptions":{}}},"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5981,"nodeType":"ExpressionStatement","src":"20506:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5982,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"20546:10:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"20560:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5991,"nodeType":"IfStatement","src":"20542:98:18","trueBody":{"id":5990,"nodeType":"Block","src":"20567:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:18","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"20623:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5985,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"20588:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5989,"nodeType":"RevertStatement","src":"20581:48:18"}]}}]},"documentation":{"id":5968,"nodeType":"StructuredDocumentation","src":"20105:312:18","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5993,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:18","nodeType":"FunctionDefinition","parameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"value","nameLocation":"20447:5:18","nodeType":"VariableDeclaration","scope":5993,"src":"20440:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5969,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:18"},"returnParameters":{"id":5974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5973,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:18","nodeType":"VariableDeclaration","scope":5993,"src":"20477:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5972,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:18","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:18"},"scope":6684,"src":"20422:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6018,"nodeType":"Block","src":"21043:150:18","statements":[{"expression":{"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"21053:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"21073:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6002,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:18","typeDescriptions":{}}},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6007,"nodeType":"ExpressionStatement","src":"21053:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6008,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5999,"src":"21093:10:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"21107:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6017,"nodeType":"IfStatement","src":"21089:98:18","trueBody":{"id":6016,"nodeType":"Block","src":"21114:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"21170:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6011,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"21135:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6015,"nodeType":"RevertStatement","src":"21128:48:18"}]}}]},"documentation":{"id":5994,"nodeType":"StructuredDocumentation","src":"20652:312:18","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6019,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:18","nodeType":"FunctionDefinition","parameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"value","nameLocation":"20994:5:18","nodeType":"VariableDeclaration","scope":6019,"src":"20987:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5995,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:18"},"returnParameters":{"id":6000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5999,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:18","nodeType":"VariableDeclaration","scope":6019,"src":"21024:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5998,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:18","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:18"},"scope":6684,"src":"20969:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6044,"nodeType":"Block","src":"21590:150:18","statements":[{"expression":{"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6027,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"21600:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"21620:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6028,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:18","typeDescriptions":{}}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6033,"nodeType":"ExpressionStatement","src":"21600:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6034,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6025,"src":"21640:10:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"21654:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6043,"nodeType":"IfStatement","src":"21636:98:18","trueBody":{"id":6042,"nodeType":"Block","src":"21661:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:18","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"21717:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6037,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"21682:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6041,"nodeType":"RevertStatement","src":"21675:48:18"}]}}]},"documentation":{"id":6020,"nodeType":"StructuredDocumentation","src":"21199:312:18","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6045,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:18","nodeType":"FunctionDefinition","parameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"value","nameLocation":"21541:5:18","nodeType":"VariableDeclaration","scope":6045,"src":"21534:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6021,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:18"},"returnParameters":{"id":6026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6025,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:18","nodeType":"VariableDeclaration","scope":6045,"src":"21571:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6024,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:18","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:18"},"scope":6684,"src":"21516:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6070,"nodeType":"Block","src":"22137:150:18","statements":[{"expression":{"id":6058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6053,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"22147:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22167:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6054,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:18","typeDescriptions":{}}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6059,"nodeType":"ExpressionStatement","src":"22147:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6060,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"22187:10:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22201:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6069,"nodeType":"IfStatement","src":"22183:98:18","trueBody":{"id":6068,"nodeType":"Block","src":"22208:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:18","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"22264:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6063,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"22229:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6067,"nodeType":"RevertStatement","src":"22222:48:18"}]}}]},"documentation":{"id":6046,"nodeType":"StructuredDocumentation","src":"21746:312:18","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6071,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:18","nodeType":"FunctionDefinition","parameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"value","nameLocation":"22088:5:18","nodeType":"VariableDeclaration","scope":6071,"src":"22081:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6047,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:18"},"returnParameters":{"id":6052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:18","nodeType":"VariableDeclaration","scope":6071,"src":"22118:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6050,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:18","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:18"},"scope":6684,"src":"22063:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6096,"nodeType":"Block","src":"22684:150:18","statements":[{"expression":{"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6079,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"22694:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"22714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6080,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:18","typeDescriptions":{}}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6085,"nodeType":"ExpressionStatement","src":"22694:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6077,"src":"22734:10:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"22748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6095,"nodeType":"IfStatement","src":"22730:98:18","trueBody":{"id":6094,"nodeType":"Block","src":"22755:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:18","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"22811:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6089,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"22776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6093,"nodeType":"RevertStatement","src":"22769:48:18"}]}}]},"documentation":{"id":6072,"nodeType":"StructuredDocumentation","src":"22293:312:18","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6097,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:18","nodeType":"FunctionDefinition","parameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"value","nameLocation":"22635:5:18","nodeType":"VariableDeclaration","scope":6097,"src":"22628:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6073,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:18"},"returnParameters":{"id":6078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6077,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:18","nodeType":"VariableDeclaration","scope":6097,"src":"22665:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6076,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:18","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:18"},"scope":6684,"src":"22610:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6122,"nodeType":"Block","src":"23231:150:18","statements":[{"expression":{"id":6110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6105,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"23241:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"23261:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6106,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:18","typeDescriptions":{}}},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6111,"nodeType":"ExpressionStatement","src":"23241:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6112,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6103,"src":"23281:10:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"23295:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6121,"nodeType":"IfStatement","src":"23277:98:18","trueBody":{"id":6120,"nodeType":"Block","src":"23302:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:18","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"23358:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6115,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"23323:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6119,"nodeType":"RevertStatement","src":"23316:48:18"}]}}]},"documentation":{"id":6098,"nodeType":"StructuredDocumentation","src":"22840:312:18","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6123,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:18","nodeType":"FunctionDefinition","parameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"value","nameLocation":"23182:5:18","nodeType":"VariableDeclaration","scope":6123,"src":"23175:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6099,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:18"},"returnParameters":{"id":6104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:18","nodeType":"VariableDeclaration","scope":6123,"src":"23212:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6102,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:18","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:18"},"scope":6684,"src":"23157:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6148,"nodeType":"Block","src":"23778:150:18","statements":[{"expression":{"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6131,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"23788:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"23808:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6132,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:18","typeDescriptions":{}}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6137,"nodeType":"ExpressionStatement","src":"23788:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6138,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6129,"src":"23828:10:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"23842:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6147,"nodeType":"IfStatement","src":"23824:98:18","trueBody":{"id":6146,"nodeType":"Block","src":"23849:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:18","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"23905:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6141,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"23870:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6145,"nodeType":"RevertStatement","src":"23863:48:18"}]}}]},"documentation":{"id":6124,"nodeType":"StructuredDocumentation","src":"23387:312:18","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6149,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:18","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"value","nameLocation":"23729:5:18","nodeType":"VariableDeclaration","scope":6149,"src":"23722:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6125,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:18"},"returnParameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:18","nodeType":"VariableDeclaration","scope":6149,"src":"23759:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6128,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:18","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:18"},"scope":6684,"src":"23704:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6174,"nodeType":"Block","src":"24325:150:18","statements":[{"expression":{"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6157,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"24335:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"24355:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6158,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:18","typeDescriptions":{}}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6163,"nodeType":"ExpressionStatement","src":"24335:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6155,"src":"24375:10:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"24389:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6173,"nodeType":"IfStatement","src":"24371:98:18","trueBody":{"id":6172,"nodeType":"Block","src":"24396:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:18","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"24452:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6167,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"24417:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6171,"nodeType":"RevertStatement","src":"24410:48:18"}]}}]},"documentation":{"id":6150,"nodeType":"StructuredDocumentation","src":"23934:312:18","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6175,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:18","nodeType":"FunctionDefinition","parameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"value","nameLocation":"24276:5:18","nodeType":"VariableDeclaration","scope":6175,"src":"24269:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6151,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:18"},"returnParameters":{"id":6156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6155,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:18","nodeType":"VariableDeclaration","scope":6175,"src":"24306:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6154,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:18","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:18"},"scope":6684,"src":"24251:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"24872:150:18","statements":[{"expression":{"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6183,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"24882:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"24902:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6184,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:18","typeDescriptions":{}}},"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6189,"nodeType":"ExpressionStatement","src":"24882:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6190,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6181,"src":"24922:10:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"24936:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6199,"nodeType":"IfStatement","src":"24918:98:18","trueBody":{"id":6198,"nodeType":"Block","src":"24943:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:18","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"24999:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6193,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"24964:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6197,"nodeType":"RevertStatement","src":"24957:48:18"}]}}]},"documentation":{"id":6176,"nodeType":"StructuredDocumentation","src":"24481:312:18","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:18","nodeType":"FunctionDefinition","parameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"value","nameLocation":"24823:5:18","nodeType":"VariableDeclaration","scope":6201,"src":"24816:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6177,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:18"},"returnParameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:18","nodeType":"VariableDeclaration","scope":6201,"src":"24853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6180,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:18","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:18"},"scope":6684,"src":"24798:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"25419:150:18","statements":[{"expression":{"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6209,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"25429:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"25449:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6210,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:18","typeDescriptions":{}}},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6215,"nodeType":"ExpressionStatement","src":"25429:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6216,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6207,"src":"25469:10:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"25483:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6225,"nodeType":"IfStatement","src":"25465:98:18","trueBody":{"id":6224,"nodeType":"Block","src":"25490:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:18","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"25546:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6219,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"25511:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6223,"nodeType":"RevertStatement","src":"25504:48:18"}]}}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"25028:312:18","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:18","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"value","nameLocation":"25370:5:18","nodeType":"VariableDeclaration","scope":6227,"src":"25363:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6203,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:18"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:18","nodeType":"VariableDeclaration","scope":6227,"src":"25400:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6206,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:18","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:18"},"scope":6684,"src":"25345:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6252,"nodeType":"Block","src":"25966:150:18","statements":[{"expression":{"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"25976:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"25996:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6236,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:18","typeDescriptions":{}}},"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6241,"nodeType":"ExpressionStatement","src":"25976:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6242,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"26016:10:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"26030:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6251,"nodeType":"IfStatement","src":"26012:98:18","trueBody":{"id":6250,"nodeType":"Block","src":"26037:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6247,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"26093:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6245,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"26058:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6249,"nodeType":"RevertStatement","src":"26051:48:18"}]}}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"25575:312:18","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6253,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:18","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"25917:5:18","nodeType":"VariableDeclaration","scope":6253,"src":"25910:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6229,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:18"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:18","nodeType":"VariableDeclaration","scope":6253,"src":"25947:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6232,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:18","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:18"},"scope":6684,"src":"25892:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6278,"nodeType":"Block","src":"26513:150:18","statements":[{"expression":{"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6261,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"26523:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"26543:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6262,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:18","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6267,"nodeType":"ExpressionStatement","src":"26523:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6259,"src":"26563:10:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"26577:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6277,"nodeType":"IfStatement","src":"26559:98:18","trueBody":{"id":6276,"nodeType":"Block","src":"26584:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:18","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"26640:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6271,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"26605:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6275,"nodeType":"RevertStatement","src":"26598:48:18"}]}}]},"documentation":{"id":6254,"nodeType":"StructuredDocumentation","src":"26122:312:18","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6279,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:18","nodeType":"FunctionDefinition","parameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"value","nameLocation":"26464:5:18","nodeType":"VariableDeclaration","scope":6279,"src":"26457:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6255,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:18"},"returnParameters":{"id":6260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6259,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:18","nodeType":"VariableDeclaration","scope":6279,"src":"26494:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6258,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:18","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:18"},"scope":6684,"src":"26439:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6304,"nodeType":"Block","src":"27060:150:18","statements":[{"expression":{"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6287,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"27070:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"27090:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6288,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:18","typeDescriptions":{}}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6293,"nodeType":"ExpressionStatement","src":"27070:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6285,"src":"27110:10:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"27124:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6303,"nodeType":"IfStatement","src":"27106:98:18","trueBody":{"id":6302,"nodeType":"Block","src":"27131:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:18","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"27187:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6297,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"27152:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6301,"nodeType":"RevertStatement","src":"27145:48:18"}]}}]},"documentation":{"id":6280,"nodeType":"StructuredDocumentation","src":"26669:312:18","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6305,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:18","nodeType":"FunctionDefinition","parameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"value","nameLocation":"27011:5:18","nodeType":"VariableDeclaration","scope":6305,"src":"27004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6281,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:18"},"returnParameters":{"id":6286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6285,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:18","nodeType":"VariableDeclaration","scope":6305,"src":"27041:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6284,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:18","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:18"},"scope":6684,"src":"26986:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6330,"nodeType":"Block","src":"27607:150:18","statements":[{"expression":{"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6313,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"27617:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"27637:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6314,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:18","typeDescriptions":{}}},"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6319,"nodeType":"ExpressionStatement","src":"27617:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6320,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6311,"src":"27657:10:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"27671:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6329,"nodeType":"IfStatement","src":"27653:98:18","trueBody":{"id":6328,"nodeType":"Block","src":"27678:73:18","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:18","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"27734:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6323,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"27699:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6327,"nodeType":"RevertStatement","src":"27692:48:18"}]}}]},"documentation":{"id":6306,"nodeType":"StructuredDocumentation","src":"27216:312:18","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6331,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:18","nodeType":"FunctionDefinition","parameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"value","nameLocation":"27558:5:18","nodeType":"VariableDeclaration","scope":6331,"src":"27551:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6307,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:18"},"returnParameters":{"id":6312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6311,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:18","nodeType":"VariableDeclaration","scope":6331,"src":"27588:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6310,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:18","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:18"},"scope":6684,"src":"27533:224:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6356,"nodeType":"Block","src":"28147:148:18","statements":[{"expression":{"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6339,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"28157:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28176:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6340,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:18","typeDescriptions":{}}},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6345,"nodeType":"ExpressionStatement","src":"28157:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6346,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6337,"src":"28196:10:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28210:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6355,"nodeType":"IfStatement","src":"28192:97:18","trueBody":{"id":6354,"nodeType":"Block","src":"28217:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"28272:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6349,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"28238:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6353,"nodeType":"RevertStatement","src":"28231:47:18"}]}}]},"documentation":{"id":6332,"nodeType":"StructuredDocumentation","src":"27763:307:18","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6357,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:18","nodeType":"FunctionDefinition","parameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"value","nameLocation":"28099:5:18","nodeType":"VariableDeclaration","scope":6357,"src":"28092:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6333,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:18"},"returnParameters":{"id":6338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6337,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:18","nodeType":"VariableDeclaration","scope":6357,"src":"28129:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6336,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:18","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:18"},"scope":6684,"src":"28075:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6382,"nodeType":"Block","src":"28685:148:18","statements":[{"expression":{"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6365,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"28695:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"28714:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6366,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:18","typeDescriptions":{}}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6371,"nodeType":"ExpressionStatement","src":"28695:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"28734:10:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"28748:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6381,"nodeType":"IfStatement","src":"28730:97:18","trueBody":{"id":6380,"nodeType":"Block","src":"28755:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:18","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"28810:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6375,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"28776:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6379,"nodeType":"RevertStatement","src":"28769:47:18"}]}}]},"documentation":{"id":6358,"nodeType":"StructuredDocumentation","src":"28301:307:18","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6383,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:18","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"value","nameLocation":"28637:5:18","nodeType":"VariableDeclaration","scope":6383,"src":"28630:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6359,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:18"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:18","nodeType":"VariableDeclaration","scope":6383,"src":"28667:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6362,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:18","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:18"},"scope":6684,"src":"28613:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6408,"nodeType":"Block","src":"29223:148:18","statements":[{"expression":{"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6391,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"29233:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"29252:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6392,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:18","typeDescriptions":{}}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6397,"nodeType":"ExpressionStatement","src":"29233:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6398,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6389,"src":"29272:10:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"29286:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6407,"nodeType":"IfStatement","src":"29268:97:18","trueBody":{"id":6406,"nodeType":"Block","src":"29293:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"29348:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6401,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29314:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6405,"nodeType":"RevertStatement","src":"29307:47:18"}]}}]},"documentation":{"id":6384,"nodeType":"StructuredDocumentation","src":"28839:307:18","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6409,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:18","nodeType":"FunctionDefinition","parameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"value","nameLocation":"29175:5:18","nodeType":"VariableDeclaration","scope":6409,"src":"29168:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6385,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:18"},"returnParameters":{"id":6390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6389,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:18","nodeType":"VariableDeclaration","scope":6409,"src":"29205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6388,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:18","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:18"},"scope":6684,"src":"29151:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6434,"nodeType":"Block","src":"29761:148:18","statements":[{"expression":{"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"29771:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"29790:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6418,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:18","typeDescriptions":{}}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6423,"nodeType":"ExpressionStatement","src":"29771:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6424,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6415,"src":"29810:10:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"29824:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6433,"nodeType":"IfStatement","src":"29806:97:18","trueBody":{"id":6432,"nodeType":"Block","src":"29831:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:18","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"29886:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6427,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"29852:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6431,"nodeType":"RevertStatement","src":"29845:47:18"}]}}]},"documentation":{"id":6410,"nodeType":"StructuredDocumentation","src":"29377:307:18","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6435,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:18","nodeType":"FunctionDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"value","nameLocation":"29713:5:18","nodeType":"VariableDeclaration","scope":6435,"src":"29706:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6411,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:18"},"returnParameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:18","nodeType":"VariableDeclaration","scope":6435,"src":"29743:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6414,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:18","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:18"},"scope":6684,"src":"29689:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6460,"nodeType":"Block","src":"30299:148:18","statements":[{"expression":{"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6443,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"30309:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"30328:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6444,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:18","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6449,"nodeType":"ExpressionStatement","src":"30309:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"30348:10:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"30362:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6459,"nodeType":"IfStatement","src":"30344:97:18","trueBody":{"id":6458,"nodeType":"Block","src":"30369:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"30424:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6453,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"30390:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6457,"nodeType":"RevertStatement","src":"30383:47:18"}]}}]},"documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"29915:307:18","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6461,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:18","nodeType":"FunctionDefinition","parameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"value","nameLocation":"30251:5:18","nodeType":"VariableDeclaration","scope":6461,"src":"30244:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6437,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:18"},"returnParameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:18","nodeType":"VariableDeclaration","scope":6461,"src":"30281:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6440,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:18","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:18"},"scope":6684,"src":"30227:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"30837:148:18","statements":[{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6469,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"30847:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"30866:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6470,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:18","typeDescriptions":{}}},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6475,"nodeType":"ExpressionStatement","src":"30847:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"30886:10:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"30900:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6485,"nodeType":"IfStatement","src":"30882:97:18","trueBody":{"id":6484,"nodeType":"Block","src":"30907:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:18","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"30962:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6479,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"30928:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6483,"nodeType":"RevertStatement","src":"30921:47:18"}]}}]},"documentation":{"id":6462,"nodeType":"StructuredDocumentation","src":"30453:307:18","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:18","nodeType":"FunctionDefinition","parameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"value","nameLocation":"30789:5:18","nodeType":"VariableDeclaration","scope":6487,"src":"30782:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6463,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:18"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6467,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:18","nodeType":"VariableDeclaration","scope":6487,"src":"30819:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6466,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:18","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:18"},"scope":6684,"src":"30765:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6512,"nodeType":"Block","src":"31375:148:18","statements":[{"expression":{"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6495,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"31385:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"31404:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6496,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:18","typeDescriptions":{}}},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6501,"nodeType":"ExpressionStatement","src":"31385:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6502,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6493,"src":"31424:10:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"31438:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6511,"nodeType":"IfStatement","src":"31420:97:18","trueBody":{"id":6510,"nodeType":"Block","src":"31445:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"31500:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6505,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"31466:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6509,"nodeType":"RevertStatement","src":"31459:47:18"}]}}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"30991:307:18","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6513,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:18","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"31327:5:18","nodeType":"VariableDeclaration","scope":6513,"src":"31320:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:18"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:18","nodeType":"VariableDeclaration","scope":6513,"src":"31357:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6492,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:18","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:18"},"scope":6684,"src":"31303:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6538,"nodeType":"Block","src":"31913:148:18","statements":[{"expression":{"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6521,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"31923:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"31942:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6522,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:18","typeDescriptions":{}}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6527,"nodeType":"ExpressionStatement","src":"31923:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6528,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"31962:10:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"31976:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6537,"nodeType":"IfStatement","src":"31958:97:18","trueBody":{"id":6536,"nodeType":"Block","src":"31983:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"32038:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6531,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"32004:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6535,"nodeType":"RevertStatement","src":"31997:47:18"}]}}]},"documentation":{"id":6514,"nodeType":"StructuredDocumentation","src":"31529:307:18","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:18","nodeType":"FunctionDefinition","parameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"value","nameLocation":"31865:5:18","nodeType":"VariableDeclaration","scope":6539,"src":"31858:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:18"},"returnParameters":{"id":6520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:18","nodeType":"VariableDeclaration","scope":6539,"src":"31895:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6518,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:18","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:18"},"scope":6684,"src":"31841:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6564,"nodeType":"Block","src":"32451:148:18","statements":[{"expression":{"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"32461:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"32480:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6548,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:18","typeDescriptions":{}}},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6553,"nodeType":"ExpressionStatement","src":"32461:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6554,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"32500:10:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"32514:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6563,"nodeType":"IfStatement","src":"32496:97:18","trueBody":{"id":6562,"nodeType":"Block","src":"32521:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"32576:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6557,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"32542:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6561,"nodeType":"RevertStatement","src":"32535:47:18"}]}}]},"documentation":{"id":6540,"nodeType":"StructuredDocumentation","src":"32067:307:18","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6565,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:18","nodeType":"FunctionDefinition","parameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"value","nameLocation":"32403:5:18","nodeType":"VariableDeclaration","scope":6565,"src":"32396:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6541,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:18"},"returnParameters":{"id":6546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:18","nodeType":"VariableDeclaration","scope":6565,"src":"32433:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6544,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:18","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:18"},"scope":6684,"src":"32379:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"32989:148:18","statements":[{"expression":{"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6573,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"32999:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"33018:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6574,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:18","typeDescriptions":{}}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6579,"nodeType":"ExpressionStatement","src":"32999:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6580,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6571,"src":"33038:10:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"33052:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6589,"nodeType":"IfStatement","src":"33034:97:18","trueBody":{"id":6588,"nodeType":"Block","src":"33059:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:18","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"33114:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6583,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"33080:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6587,"nodeType":"RevertStatement","src":"33073:47:18"}]}}]},"documentation":{"id":6566,"nodeType":"StructuredDocumentation","src":"32605:307:18","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:18","nodeType":"FunctionDefinition","parameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"value","nameLocation":"32941:5:18","nodeType":"VariableDeclaration","scope":6591,"src":"32934:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6567,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:18"},"returnParameters":{"id":6572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6571,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:18","nodeType":"VariableDeclaration","scope":6591,"src":"32971:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6570,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:18"},"scope":6684,"src":"32917:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6616,"nodeType":"Block","src":"33527:148:18","statements":[{"expression":{"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6599,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"33537:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"33556:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6600,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:18","typeDescriptions":{}}},"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6605,"nodeType":"ExpressionStatement","src":"33537:25:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6606,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"33576:10:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"33590:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6615,"nodeType":"IfStatement","src":"33572:97:18","trueBody":{"id":6614,"nodeType":"Block","src":"33597:72:18","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"33652:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6609,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"33618:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6613,"nodeType":"RevertStatement","src":"33611:47:18"}]}}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"33143:307:18","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6617,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:18","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"value","nameLocation":"33479:5:18","nodeType":"VariableDeclaration","scope":6617,"src":"33472:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6593,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:18"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:18","nodeType":"VariableDeclaration","scope":6617,"src":"33509:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6596,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:18","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:18"},"scope":6684,"src":"33455:220:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6642,"nodeType":"Block","src":"34058:146:18","statements":[{"expression":{"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6625,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"34068:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"34086:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6626,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:18","typeDescriptions":{}}},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6631,"nodeType":"ExpressionStatement","src":"34068:24:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6632,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"34106:10:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"34120:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6641,"nodeType":"IfStatement","src":"34102:96:18","trueBody":{"id":6640,"nodeType":"Block","src":"34127:71:18","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"34181:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6635,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"34148:29:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6639,"nodeType":"RevertStatement","src":"34141:46:18"}]}}]},"documentation":{"id":6618,"nodeType":"StructuredDocumentation","src":"33681:302:18","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6643,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:18","nodeType":"FunctionDefinition","parameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"value","nameLocation":"34011:5:18","nodeType":"VariableDeclaration","scope":6643,"src":"34004:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:18"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6623,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:18","nodeType":"VariableDeclaration","scope":6643,"src":"34041:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6622,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:18","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:18"},"scope":6684,"src":"33988:216:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6672,"nodeType":"Block","src":"34444:250:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"34557:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6655,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6654,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:18","memberName":"max","nodeType":"MemberAccess","src":"34573:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:18","typeDescriptions":{}}},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6666,"nodeType":"IfStatement","src":"34553:105:18","trueBody":{"id":6665,"nodeType":"Block","src":"34592:66:18","statements":[{"errorCall":{"arguments":[{"id":6662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"34641:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6661,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4946,"src":"34613:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6664,"nodeType":"RevertStatement","src":"34606:41:18"}]}},{"expression":{"arguments":[{"id":6669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"34681:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6667,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:18","typeDescriptions":{}}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6650,"id":6671,"nodeType":"Return","src":"34667:20:18"}]},"documentation":{"id":6644,"nodeType":"StructuredDocumentation","src":"34210:165:18","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:18","nodeType":"FunctionDefinition","parameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"value","nameLocation":"34406:5:18","nodeType":"VariableDeclaration","scope":6673,"src":"34398:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6645,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:18"},"returnParameters":{"id":6650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6673,"src":"34436:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6648,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:18"},"scope":6684,"src":"34380:314:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6682,"nodeType":"Block","src":"34853:87:18","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:18","statements":[{"nodeType":"YulAssignment","src":"34902:22:18","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:18"},"nodeType":"YulFunctionCall","src":"34914:9:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:18"},"nodeType":"YulFunctionCall","src":"34907:17:18"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6676,"isOffset":false,"isSlot":false,"src":"34921:1:18","valueSize":1},{"declaration":6679,"isOffset":false,"isSlot":false,"src":"34902:1:18","valueSize":1}],"flags":["memory-safe"],"id":6681,"nodeType":"InlineAssembly","src":"34863:71:18"}]},"documentation":{"id":6674,"nodeType":"StructuredDocumentation","src":"34700:90:18","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:18","nodeType":"FunctionDefinition","parameters":{"id":6677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"b","nameLocation":"34816:1:18","nodeType":"VariableDeclaration","scope":6683,"src":"34811:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6675,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:18"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6679,"mutability":"mutable","name":"u","nameLocation":"34850:1:18","nodeType":"VariableDeclaration","scope":6683,"src":"34842:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6678,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:18"},"scope":6684,"src":"34795:145:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6685,"src":"769:34173:18","usedErrors":[4929,4934,4941,4946],"usedEvents":[]}],"src":"192:34751:18"},"id":18},"contracts/MemorialRegistry.sol":{"ast":{"absolutePath":"contracts/MemorialRegistry.sol","exportedSymbols":{"MemorialRegistry":[7064],"Ownable":[527]},"id":7065,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7065,"sourceUnit":528,"src":"58:67:19","symbolAliases":[{"foreign":{"id":6687,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"66:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6689,"name":"Ownable","nameLocations":["156:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"156:7:19"},"id":6690,"nodeType":"InheritanceSpecifier","src":"156:7:19"}],"canonicalName":"MemorialRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7064,"linearizedBaseContracts":[7064,527,2956],"name":"MemorialRegistry","nameLocation":"136:16:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MemorialRegistry.Record","id":6701,"members":[{"constant":false,"id":6692,"mutability":"mutable","name":"contentHash","nameLocation":"202:11:19","nodeType":"VariableDeclaration","scope":6701,"src":"194:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6694,"mutability":"mutable","name":"storageURI","nameLocation":"230:10:19","nodeType":"VariableDeclaration","scope":6701,"src":"223:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6693,"name":"string","nodeType":"ElementaryTypeName","src":"223:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6696,"mutability":"mutable","name":"publisher","nameLocation":"258:9:19","nodeType":"VariableDeclaration","scope":6701,"src":"250:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6695,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"timestamp","nameLocation":"284:9:19","nodeType":"VariableDeclaration","scope":6701,"src":"277:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6697,"name":"uint64","nodeType":"ElementaryTypeName","src":"277:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":6700,"mutability":"mutable","name":"locked","nameLocation":"308:6:19","nodeType":"VariableDeclaration","scope":6701,"src":"303:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6699,"name":"bool","nodeType":"ElementaryTypeName","src":"303:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Record","nameLocation":"177:6:19","nodeType":"StructDefinition","scope":7064,"src":"170:151:19","visibility":"public"},{"constant":false,"id":6707,"mutability":"mutable","name":"_versions","nameLocation":"364:9:19","nodeType":"VariableDeclaration","scope":7064,"src":"327:46:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record[])"},"typeName":{"id":6706,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6702,"name":"uint256","nodeType":"ElementaryTypeName","src":"335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"327:28:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6704,"nodeType":"UserDefinedTypeName","pathNode":{"id":6703,"name":"Record","nameLocations":["346:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":6701,"src":"346:6:19"},"referencedDeclaration":6701,"src":"346:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"}},"id":6705,"nodeType":"ArrayTypeName","src":"346:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage_ptr","typeString":"struct MemorialRegistry.Record[]"}}},"visibility":"private"},{"constant":false,"functionSelector":"18d852d8","id":6710,"mutability":"mutable","name":"nextMemorialId","nameLocation":"394:14:19","nodeType":"VariableDeclaration","scope":7064,"src":"379:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6708,"name":"uint256","nodeType":"ElementaryTypeName","src":"379:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"411:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"anonymous":false,"eventSelector":"d77fe84d4f2a61fe0f7d451ae99d1eab022f54872f6dc94df8a39f425d574fcd","id":6724,"name":"MemorialPublished","nameLocation":"425:17:19","nodeType":"EventDefinition","parameters":{"id":6723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6712,"indexed":true,"mutability":"mutable","name":"memorialId","nameLocation":"468:10:19","nodeType":"VariableDeclaration","scope":6724,"src":"452:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6714,"indexed":true,"mutability":"mutable","name":"version","nameLocation":"504:7:19","nodeType":"VariableDeclaration","scope":6724,"src":"488:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6716,"indexed":false,"mutability":"mutable","name":"contentHash","nameLocation":"529:11:19","nodeType":"VariableDeclaration","scope":6724,"src":"521:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6715,"name":"bytes32","nodeType":"ElementaryTypeName","src":"521:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6718,"indexed":false,"mutability":"mutable","name":"storageURI","nameLocation":"557:10:19","nodeType":"VariableDeclaration","scope":6724,"src":"550:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6717,"name":"string","nodeType":"ElementaryTypeName","src":"550:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6720,"indexed":true,"mutability":"mutable","name":"publisher","nameLocation":"593:9:19","nodeType":"VariableDeclaration","scope":6724,"src":"577:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6719,"name":"address","nodeType":"ElementaryTypeName","src":"577:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6722,"indexed":false,"mutability":"mutable","name":"locked","nameLocation":"617:6:19","nodeType":"VariableDeclaration","scope":6724,"src":"612:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6721,"name":"bool","nodeType":"ElementaryTypeName","src":"612:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"442:187:19"},"src":"419:211:19"},{"anonymous":false,"eventSelector":"fd295620abd5998c47c7096c65bf6d4a3d7b026de9bcc55154df280a7976e173","id":6728,"name":"MemorialLocked","nameLocation":"641:14:19","nodeType":"EventDefinition","parameters":{"id":6727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6726,"indexed":true,"mutability":"mutable","name":"memorialId","nameLocation":"672:10:19","nodeType":"VariableDeclaration","scope":6728,"src":"656:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6725,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"655:28:19"},"src":"635:49:19"},{"body":{"id":6735,"nodeType":"Block","src":"756:2:19","statements":[]},"id":6736,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"744:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"748:6:19","memberName":"sender","nodeType":"MemberAccess","src":"744:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6733,"kind":"baseConstructorSpecifier","modifierName":{"id":6730,"name":"Ownable","nameLocations":["736:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"736:7:19"},"nodeType":"ModifierInvocation","src":"736:19:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6729,"nodeType":"ParameterList","parameters":[],"src":"733:2:19"},"returnParameters":{"id":6734,"nodeType":"ParameterList","parameters":[],"src":"756:0:19"},"scope":7064,"src":"722:36:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6751,"nodeType":"Block","src":"808:92:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6741,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"826:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6743,"indexExpression":{"id":6742,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"836:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"826:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"848:6:19","memberName":"length","nodeType":"MemberAccess","src":"826:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"857:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"826:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d6f7269616c3a206e6f7420666f756e64","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"860:21:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94","typeString":"literal_string \"Memorial: not found\""},"value":"Memorial: not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94","typeString":"literal_string \"Memorial: not found\""}],"id":6740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"818:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"818:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6749,"nodeType":"ExpressionStatement","src":"818:64:19"},{"id":6750,"nodeType":"PlaceholderStatement","src":"892:1:19"}]},"id":6752,"name":"memorialExists","nameLocation":"773:14:19","nodeType":"ModifierDefinition","parameters":{"id":6739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6738,"mutability":"mutable","name":"memorialId","nameLocation":"796:10:19","nodeType":"VariableDeclaration","scope":6752,"src":"788:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6737,"name":"uint256","nodeType":"ElementaryTypeName","src":"788:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"787:20:19"},"src":"764:136:19","virtual":false,"visibility":"internal"},{"body":{"id":6829,"nodeType":"Block","src":"1079:661:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6766,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"1097:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1112:7:19","typeDescriptions":{}}},"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1097:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642068617368","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1124:14:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""},"value":"Invalid hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""}],"id":6765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1089:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1089:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6774,"nodeType":"ExpressionStatement","src":"1089:50:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6778,"name":"storageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"1163:10:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1157:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6776,"name":"bytes","nodeType":"ElementaryTypeName","src":"1157:5:19","typeDescriptions":{}}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1157:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1175:6:19","memberName":"length","nodeType":"MemberAccess","src":"1157:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1184:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1157:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420555249","id":6783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1187:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","typeString":"literal_string \"Invalid URI\""},"value":"Invalid URI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","typeString":"literal_string \"Invalid URI\""}],"id":6775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1149:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1149:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6785,"nodeType":"ExpressionStatement","src":"1149:52:19"},{"expression":{"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6786,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"1212:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1225:16:19","subExpression":{"id":6787,"name":"nextMemorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"1225:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1212:29:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6790,"nodeType":"ExpressionStatement","src":"1212:29:19"},{"expression":{"arguments":[{"arguments":[{"id":6796,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6797,"name":"storageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"1370:10:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6798,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1409:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1413:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1409:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":6802,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1455:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1461:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"1455:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1448:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6800,"name":"uint64","nodeType":"ElementaryTypeName","src":"1448:6:19","typeDescriptions":{}}},"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1448:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":6805,"name":"lockImmediately","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1497:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6795,"name":"Record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"1291:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Record_$6701_storage_ptr_$","typeString":"type(struct MemorialRegistry.Record storage pointer)"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1316:11:19","1358:10:19","1398:9:19","1437:9:19","1489:6:19"],"names":["contentHash","storageURI","publisher","timestamp","locked"],"nodeType":"FunctionCall","src":"1291:236:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}],"expression":{"baseExpression":{"id":6791,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"1251:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6793,"indexExpression":{"id":6792,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"1261:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1251:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1273:4:19","memberName":"push","nodeType":"MemberAccess","src":"1251:26:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_ptr_$_t_struct$_Record_$6701_storage_$returns$__$attached_to$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_ptr_$","typeString":"function (struct MemorialRegistry.Record storage ref[] storage pointer,struct MemorialRegistry.Record storage ref)"}},"id":6807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1251:286:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6808,"nodeType":"ExpressionStatement","src":"1251:286:19"},{"eventCall":{"arguments":[{"id":6810,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"1571:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1583:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6812,"name":"contentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"1586:11:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6813,"name":"storageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"1599:10:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1611:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1615:6:19","memberName":"sender","nodeType":"MemberAccess","src":"1611:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6816,"name":"lockImmediately","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1623:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6809,"name":"MemorialPublished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"1553:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bytes32,string memory,address,bool)"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:86:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6818,"nodeType":"EmitStatement","src":"1548:91:19"},{"condition":{"id":6819,"name":"lockImmediately","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1653:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6824,"nodeType":"IfStatement","src":"1649:52:19","trueBody":{"eventCall":{"arguments":[{"id":6821,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"1690:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6820,"name":"MemorialLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"1675:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1675:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6823,"nodeType":"EmitStatement","src":"1670:31:19"}},{"expression":{"components":[{"id":6825,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"1719:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":6826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1731:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1718:15:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_rational_0_by_1_$","typeString":"tuple(uint256,int_const 0)"}},"functionReturnParameters":6764,"id":6828,"nodeType":"Return","src":"1711:22:19"}]},"functionSelector":"641e8df3","id":6830,"implemented":true,"kind":"function","modifiers":[],"name":"publish","nameLocation":"915:7:19","nodeType":"FunctionDefinition","parameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6754,"mutability":"mutable","name":"contentHash","nameLocation":"940:11:19","nodeType":"VariableDeclaration","scope":6830,"src":"932:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"932:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6756,"mutability":"mutable","name":"storageURI","nameLocation":"977:10:19","nodeType":"VariableDeclaration","scope":6830,"src":"961:26:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6755,"name":"string","nodeType":"ElementaryTypeName","src":"961:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6758,"mutability":"mutable","name":"lockImmediately","nameLocation":"1002:15:19","nodeType":"VariableDeclaration","scope":6830,"src":"997:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6757,"name":"bool","nodeType":"ElementaryTypeName","src":"997:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"922:101:19"},"returnParameters":{"id":6764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"memorialId","nameLocation":"1050:10:19","nodeType":"VariableDeclaration","scope":6830,"src":"1042:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1042:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6763,"mutability":"mutable","name":"version","nameLocation":"1070:7:19","nodeType":"VariableDeclaration","scope":6830,"src":"1062:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1062:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1041:37:19"},"scope":7064,"src":"906:834:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6938,"nodeType":"Block","src":"1936:833:19","statements":[{"assignments":[6846],"declarations":[{"constant":false,"id":6846,"mutability":"mutable","name":"last","nameLocation":"1960:4:19","nodeType":"VariableDeclaration","scope":6938,"src":"1946:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record"},"typeName":{"id":6845,"nodeType":"UserDefinedTypeName","pathNode":{"id":6844,"name":"Record","nameLocations":["1946:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":6701,"src":"1946:6:19"},"referencedDeclaration":6701,"src":"1946:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"}},"visibility":"internal"}],"id":6857,"initialValue":{"baseExpression":{"baseExpression":{"id":6847,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"1967:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6849,"indexExpression":{"id":6848,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"1977:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1967:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6856,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6850,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"1989:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6852,"indexExpression":{"id":6851,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"1999:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1989:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2011:6:19","memberName":"length","nodeType":"MemberAccess","src":"1989:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2020:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1989:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1967:55:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage","typeString":"struct MemorialRegistry.Record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1946:76:19"},{"expression":{"arguments":[{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2040:12:19","subExpression":{"expression":{"id":6859,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"2041:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}},"id":6860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2046:6:19","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":6700,"src":"2041:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d656d6f7269616c206973206c6f636b6564","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2054:20:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3","typeString":"literal_string \"Memorial is locked\""},"value":"Memorial is locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3","typeString":"literal_string \"Memorial is locked\""}],"id":6858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2032:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2032:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6864,"nodeType":"ExpressionStatement","src":"2032:43:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6866,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2093:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2097:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2093:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6868,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"2107:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}},"id":6869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2112:9:19","memberName":"publisher","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"2107:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2093:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6871,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2125:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2129:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2125:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2139:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2139:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2125:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2093:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":6877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2148:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":6865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2085:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6879,"nodeType":"ExpressionStatement","src":"2085:80:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6881,"name":"newContentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"2183:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2209:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2201:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2201:7:19","typeDescriptions":{}}},"id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2201:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2183:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642068617368","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2213:14:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""},"value":"Invalid hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","typeString":"literal_string \"Invalid hash\""}],"id":6880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2175:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2175:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6889,"nodeType":"ExpressionStatement","src":"2175:53:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":6893,"name":"newStorageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"2252:13:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6891,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:19","typeDescriptions":{}}},"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2267:6:19","memberName":"length","nodeType":"MemberAccess","src":"2246:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2246:31:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420555249","id":6898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2279:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","typeString":"literal_string \"Invalid URI\""},"value":"Invalid URI"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","typeString":"literal_string \"Invalid URI\""}],"id":6890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2238:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2238:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6900,"nodeType":"ExpressionStatement","src":"2238:55:19"},{"expression":{"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6901,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"2304:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":6902,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"2314:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6904,"indexExpression":{"id":6903,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"2324:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2314:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2336:6:19","memberName":"length","nodeType":"MemberAccess","src":"2314:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2304:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6907,"nodeType":"ExpressionStatement","src":"2304:38:19"},{"expression":{"arguments":[{"arguments":[{"id":6913,"name":"newContentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"2430:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6914,"name":"newStorageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"2474:13:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2516:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2520:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2516:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"expression":{"id":6919,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2562:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2568:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"2562:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2555:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6917,"name":"uint64","nodeType":"ElementaryTypeName","src":"2555:6:19","typeDescriptions":{}}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2555:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"66616c7365","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2604:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6912,"name":"Record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6701,"src":"2392:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Record_$6701_storage_ptr_$","typeString":"type(struct MemorialRegistry.Record storage pointer)"}},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2417:11:19","2462:10:19","2505:9:19","2544:9:19","2596:6:19"],"names":["contentHash","storageURI","publisher","timestamp","locked"],"nodeType":"FunctionCall","src":"2392:232:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record memory"}],"expression":{"baseExpression":{"id":6908,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"2352:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6910,"indexExpression":{"id":6909,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"2362:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2352:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:4:19","memberName":"push","nodeType":"MemberAccess","src":"2352:26:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_ptr_$_t_struct$_Record_$6701_storage_$returns$__$attached_to$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_ptr_$","typeString":"function (struct MemorialRegistry.Record storage ref[] storage pointer,struct MemorialRegistry.Record storage ref)"}},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2352:282:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6925,"nodeType":"ExpressionStatement","src":"2352:282:19"},{"eventCall":{"arguments":[{"id":6927,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"2668:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6928,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"2680:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6929,"name":"newContentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6834,"src":"2689:14:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6930,"name":"newStorageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6836,"src":"2705:13:19","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2720:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2724:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2720:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2732:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6926,"name":"MemorialPublished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"2650:17:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_address_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,bytes32,string memory,address,bool)"}},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2650:88:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6935,"nodeType":"EmitStatement","src":"2645:93:19"},{"expression":{"id":6936,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6842,"src":"2755:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6843,"id":6937,"nodeType":"Return","src":"2748:14:19"}]},"functionSelector":"4a538155","id":6939,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6839,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"1898:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6840,"kind":"modifierInvocation","modifierName":{"id":6838,"name":"memorialExists","nameLocations":["1883:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":6752,"src":"1883:14:19"},"nodeType":"ModifierInvocation","src":"1883:26:19"}],"name":"appendVersion","nameLocation":"1755:13:19","nodeType":"FunctionDefinition","parameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6832,"mutability":"mutable","name":"memorialId","nameLocation":"1786:10:19","nodeType":"VariableDeclaration","scope":6939,"src":"1778:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6834,"mutability":"mutable","name":"newContentHash","nameLocation":"1814:14:19","nodeType":"VariableDeclaration","scope":6939,"src":"1806:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1806:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6836,"mutability":"mutable","name":"newStorageURI","nameLocation":"1854:13:19","nodeType":"VariableDeclaration","scope":6939,"src":"1838:29:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6835,"name":"string","nodeType":"ElementaryTypeName","src":"1838:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1768:105:19"},"returnParameters":{"id":6843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6842,"mutability":"mutable","name":"version","nameLocation":"1927:7:19","nodeType":"VariableDeclaration","scope":6939,"src":"1919:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6841,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1918:17:19"},"scope":7064,"src":"1746:1023:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6993,"nodeType":"Block","src":"2845:302:19","statements":[{"assignments":[6949],"declarations":[{"constant":false,"id":6949,"mutability":"mutable","name":"last","nameLocation":"2870:4:19","nodeType":"VariableDeclaration","scope":6993,"src":"2855:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"},"typeName":{"id":6948,"nodeType":"UserDefinedTypeName","pathNode":{"id":6947,"name":"Record","nameLocations":["2855:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":6701,"src":"2855:6:19"},"referencedDeclaration":6701,"src":"2855:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"}},"visibility":"internal"}],"id":6960,"initialValue":{"baseExpression":{"baseExpression":{"id":6950,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"2877:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6952,"indexExpression":{"id":6951,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"2887:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2877:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6959,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6953,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"2899:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":6955,"indexExpression":{"id":6954,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"2909:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2899:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2921:6:19","memberName":"length","nodeType":"MemberAccess","src":"2899:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2930:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2899:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2877:55:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage","typeString":"struct MemorialRegistry.Record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2855:77:19"},{"expression":{"arguments":[{"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2950:12:19","subExpression":{"expression":{"id":6962,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"2951:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record storage pointer"}},"id":6963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2956:6:19","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":6700,"src":"2951:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c7265616479206c6f636b6564","id":6965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2964:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6","typeString":"literal_string \"Already locked\""},"value":"Already locked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6","typeString":"literal_string \"Already locked\""}],"id":6961,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2942:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2942:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6967,"nodeType":"ExpressionStatement","src":"2942:39:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6969,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2999:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2999:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6971,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"3013:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record storage pointer"}},"id":6972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3018:9:19","memberName":"publisher","nodeType":"MemberAccess","referencedDeclaration":6696,"src":"3013:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2999:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6974,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3031:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3035:6:19","memberName":"sender","nodeType":"MemberAccess","src":"3031:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":6976,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"3045:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3031:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2999:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3054:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":6968,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2991:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2991:80:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6982,"nodeType":"ExpressionStatement","src":"2991:80:19"},{"expression":{"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":6983,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6949,"src":"3081:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record storage pointer"}},"id":6985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3086:6:19","memberName":"locked","nodeType":"MemberAccess","referencedDeclaration":6700,"src":"3081:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3095:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3081:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6988,"nodeType":"ExpressionStatement","src":"3081:18:19"},{"eventCall":{"arguments":[{"id":6990,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"3129:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6989,"name":"MemorialLocked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"3114:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6992,"nodeType":"EmitStatement","src":"3109:31:19"}]},"functionSelector":"dd467064","id":6994,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6944,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6941,"src":"2833:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6945,"kind":"modifierInvocation","modifierName":{"id":6943,"name":"memorialExists","nameLocations":["2818:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":6752,"src":"2818:14:19"},"nodeType":"ModifierInvocation","src":"2818:26:19"}],"name":"lock","nameLocation":"2784:4:19","nodeType":"FunctionDefinition","parameters":{"id":6942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6941,"mutability":"mutable","name":"memorialId","nameLocation":"2797:10:19","nodeType":"VariableDeclaration","scope":6994,"src":"2789:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6940,"name":"uint256","nodeType":"ElementaryTypeName","src":"2789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2788:20:19"},"returnParameters":{"id":6946,"nodeType":"ParameterList","parameters":[],"src":"2845:0:19"},"scope":7064,"src":"2775:372:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7016,"nodeType":"Block","src":"3267:79:19","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":7005,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"3284:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":7007,"indexExpression":{"id":7006,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"3294:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3284:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":7014,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7008,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"3306:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":7010,"indexExpression":{"id":7009,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"3316:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3306:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3328:6:19","memberName":"length","nodeType":"MemberAccess","src":"3306:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3337:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3306:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3284:55:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage","typeString":"struct MemorialRegistry.Record storage ref"}},"functionReturnParameters":7004,"id":7015,"nodeType":"Return","src":"3277:62:19"}]},"functionSelector":"0007f4a0","id":7017,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":6999,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"3231:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7000,"kind":"modifierInvocation","modifierName":{"id":6998,"name":"memorialExists","nameLocations":["3216:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":6752,"src":"3216:14:19"},"nodeType":"ModifierInvocation","src":"3216:26:19"}],"name":"latest","nameLocation":"3175:6:19","nodeType":"FunctionDefinition","parameters":{"id":6997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"memorialId","nameLocation":"3190:10:19","nodeType":"VariableDeclaration","scope":7017,"src":"3182:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3182:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3181:20:19"},"returnParameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"3252:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record"},"typeName":{"id":7002,"nodeType":"UserDefinedTypeName","pathNode":{"id":7001,"name":"Record","nameLocations":["3252:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":6701,"src":"3252:6:19"},"referencedDeclaration":6701,"src":"3252:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"}},"visibility":"internal"}],"src":"3251:15:19"},"scope":7064,"src":"3166:180:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7032,"nodeType":"Block","src":"3453:52:19","statements":[{"expression":{"expression":{"baseExpression":{"id":7027,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"3470:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":7029,"indexExpression":{"id":7028,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"3480:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:6:19","memberName":"length","nodeType":"MemberAccess","src":"3470:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7026,"id":7031,"nodeType":"Return","src":"3463:35:19"}]},"functionSelector":"03190e6d","id":7033,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7022,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7019,"src":"3423:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7023,"kind":"modifierInvocation","modifierName":{"id":7021,"name":"memorialExists","nameLocations":["3408:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":6752,"src":"3408:14:19"},"nodeType":"ModifierInvocation","src":"3408:26:19"}],"name":"versionCount","nameLocation":"3361:12:19","nodeType":"FunctionDefinition","parameters":{"id":7020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7019,"mutability":"mutable","name":"memorialId","nameLocation":"3382:10:19","nodeType":"VariableDeclaration","scope":7033,"src":"3374:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7018,"name":"uint256","nodeType":"ElementaryTypeName","src":"3374:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3373:20:19"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7033,"src":"3444:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3444:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3443:9:19"},"scope":7064,"src":"3352:153:19","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7062,"nodeType":"Block","src":"3633:126:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7047,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"3651:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7048,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"3661:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":7050,"indexExpression":{"id":7049,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"3671:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3661:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3683:6:19","memberName":"length","nodeType":"MemberAccess","src":"3661:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3651:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4261642076657273696f6e","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3691:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0","typeString":"literal_string \"Bad version\""},"value":"Bad version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0","typeString":"literal_string \"Bad version\""}],"id":7046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3643:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3643:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7055,"nodeType":"ExpressionStatement","src":"3643:62:19"},{"expression":{"baseExpression":{"baseExpression":{"id":7056,"name":"_versions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"3722:9:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Record_$6701_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct MemorialRegistry.Record storage ref[] storage ref)"}},"id":7058,"indexExpression":{"id":7057,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"3732:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3722:21:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Record_$6701_storage_$dyn_storage","typeString":"struct MemorialRegistry.Record storage ref[] storage ref"}},"id":7060,"indexExpression":{"id":7059,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"3744:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3722:30:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage","typeString":"struct MemorialRegistry.Record storage ref"}},"functionReturnParameters":7045,"id":7061,"nodeType":"Return","src":"3715:37:19"}]},"functionSelector":"6987b075","id":7063,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7040,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7035,"src":"3597:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7041,"kind":"modifierInvocation","modifierName":{"id":7039,"name":"memorialExists","nameLocations":["3582:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":6752,"src":"3582:14:19"},"nodeType":"ModifierInvocation","src":"3582:26:19"}],"name":"getVersion","nameLocation":"3520:10:19","nodeType":"FunctionDefinition","parameters":{"id":7038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7035,"mutability":"mutable","name":"memorialId","nameLocation":"3539:10:19","nodeType":"VariableDeclaration","scope":7063,"src":"3531:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7034,"name":"uint256","nodeType":"ElementaryTypeName","src":"3531:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7037,"mutability":"mutable","name":"version","nameLocation":"3559:7:19","nodeType":"VariableDeclaration","scope":7063,"src":"3551:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7036,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3530:37:19"},"returnParameters":{"id":7045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7063,"src":"3618:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_memory_ptr","typeString":"struct MemorialRegistry.Record"},"typeName":{"id":7043,"nodeType":"UserDefinedTypeName","pathNode":{"id":7042,"name":"Record","nameLocations":["3618:6:19"],"nodeType":"IdentifierPath","referencedDeclaration":6701,"src":"3618:6:19"},"referencedDeclaration":6701,"src":"3618:6:19","typeDescriptions":{"typeIdentifier":"t_struct$_Record_$6701_storage_ptr","typeString":"struct MemorialRegistry.Record"}},"visibility":"internal"}],"src":"3617:15:19"},"scope":7064,"src":"3511:248:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7065,"src":"127:3634:19","usedErrors":[393,398],"usedEvents":[404,6724,6728]}],"src":"32:3730:19"},"id":19},"contracts/RemembranceBadges.sol":{"ast":{"absolutePath":"contracts/RemembranceBadges.sol","exportedSymbols":{"AccessControl":[296],"ERC1155":[1581],"RemembranceBadges":[7339]},"id":7340,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7066,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":7068,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7340,"sourceUnit":1582,"src":"58:74:20","symbolAliases":[{"foreign":{"id":7067,"name":"ERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"66:7:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7070,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7340,"sourceUnit":297,"src":"133:79:20","symbolAliases":[{"foreign":{"id":7069,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"141:13:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7071,"name":"ERC1155","nameLocations":["244:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"244:7:20"},"id":7072,"nodeType":"InheritanceSpecifier","src":"244:7:20"},{"baseName":{"id":7073,"name":"AccessControl","nameLocations":["253:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"253:13:20"},"id":7074,"nodeType":"InheritanceSpecifier","src":"253:13:20"}],"canonicalName":"RemembranceBadges","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7339,"linearizedBaseContracts":[7339,296,1581,664,1762,1704,3286,3298,379,2956],"name":"RemembranceBadges","nameLocation":"223:17:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":7079,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"297:11:20","nodeType":"VariableDeclaration","scope":7339,"src":"273:62:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"321:13:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":7076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"311:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"311:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"4dd6c8de","id":7085,"mutability":"mutable","name":"claimed","nameLocation":"394:7:20","nodeType":"VariableDeclaration","scope":7339,"src":"342:59:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":7084,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7080,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"342:44:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7083,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7081,"name":"uint256","nodeType":"ElementaryTypeName","src":"369:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"361:24:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7082,"name":"bool","nodeType":"ElementaryTypeName","src":"380:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"constant":false,"functionSelector":"13ba55df","id":7089,"mutability":"mutable","name":"totalHolders","nameLocation":"442:12:20","nodeType":"VariableDeclaration","scope":7339,"src":"407:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7088,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7086,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"407:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7087,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"6eb2be00","id":7093,"mutability":"mutable","name":"candlesForMemorial","nameLocation":"531:18:20","nodeType":"VariableDeclaration","scope":7339,"src":"496:53:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":7092,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7090,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"496:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"515:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"c5e4f97f4e1ac5c9db12a9e39353b3c61176f2578fe4145a469276997597fba1","id":7103,"name":"CandleLit","nameLocation":"614:9:20","nodeType":"EventDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7095,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"640:7:20","nodeType":"VariableDeclaration","scope":7103,"src":"624:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7094,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7097,"indexed":true,"mutability":"mutable","name":"memorialId","nameLocation":"665:10:20","nodeType":"VariableDeclaration","scope":7103,"src":"649:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7096,"name":"uint256","nodeType":"ElementaryTypeName","src":"649:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7099,"indexed":true,"mutability":"mutable","name":"year","nameLocation":"692:4:20","nodeType":"VariableDeclaration","scope":7103,"src":"677:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7098,"name":"uint16","nodeType":"ElementaryTypeName","src":"677:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":7101,"indexed":false,"mutability":"mutable","name":"badgeId","nameLocation":"706:7:20","nodeType":"VariableDeclaration","scope":7103,"src":"698:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7100,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:91:20"},"src":"608:107:20"},{"body":{"id":7123,"nodeType":"Block","src":"788:94:20","statements":[{"expression":{"arguments":[{"id":7114,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"809:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7115,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"829:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7113,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"798:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"798:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7117,"nodeType":"ExpressionStatement","src":"798:37:20"},{"expression":{"arguments":[{"id":7119,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"856:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7120,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7107,"src":"869:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7118,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"845:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"845:30:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7122,"nodeType":"ExpressionStatement","src":"845:30:20"}]},"id":7124,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7110,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7105,"src":"779:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7111,"kind":"baseConstructorSpecifier","modifierName":{"id":7109,"name":"ERC1155","nameLocations":["771:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"771:7:20"},"nodeType":"ModifierInvocation","src":"771:16:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7105,"mutability":"mutable","name":"baseURI","nameLocation":"747:7:20","nodeType":"VariableDeclaration","scope":7124,"src":"733:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7104,"name":"string","nodeType":"ElementaryTypeName","src":"733:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7107,"mutability":"mutable","name":"admin","nameLocation":"764:5:20","nodeType":"VariableDeclaration","scope":7124,"src":"756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7106,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"732:38:20"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[],"src":"788:0:20"},"scope":7339,"src":"721:161:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7145,"nodeType":"Block","src":"971:99:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"52454d454d4252414e43455f4241444745","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1023:19:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae","typeString":"literal_string \"REMEMBRANCE_BADGE\""},"value":"REMEMBRANCE_BADGE"},{"id":7139,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"1044:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7140,"name":"year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"1056:4:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae","typeString":"literal_string \"REMEMBRANCE_BADGE\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":7136,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1006:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1010:12:20","memberName":"encodePacked","nodeType":"MemberAccess","src":"1006:16:20","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7135,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"996:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"996:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7133,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:20","typeDescriptions":{}}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"988:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7132,"id":7144,"nodeType":"Return","src":"981:82:20"}]},"functionSelector":"5ce695f1","id":7146,"implemented":true,"kind":"function","modifiers":[],"name":"badgeIdFor","nameLocation":"897:10:20","nodeType":"FunctionDefinition","parameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7126,"mutability":"mutable","name":"memorialId","nameLocation":"916:10:20","nodeType":"VariableDeclaration","scope":7146,"src":"908:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7128,"mutability":"mutable","name":"year","nameLocation":"935:4:20","nodeType":"VariableDeclaration","scope":7146,"src":"928:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7127,"name":"uint16","nodeType":"ElementaryTypeName","src":"928:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"907:33:20"},"returnParameters":{"id":7132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7146,"src":"962:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7130,"name":"uint256","nodeType":"ElementaryTypeName","src":"962:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"961:9:20"},"scope":7339,"src":"888:182:20","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7219,"nodeType":"Block","src":"1173:355:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"1191:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1197:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7160,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:20","typeDescriptions":{}}},"id":7163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1191:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420726563697069656e74","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1209:15:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88","typeString":"literal_string \"Bad recipient\""},"value":"Bad recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88","typeString":"literal_string \"Bad recipient\""}],"id":7158,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1183:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1183:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7167,"nodeType":"ExpressionStatement","src":"1183:42:20"},{"assignments":[7169],"declarations":[{"constant":false,"id":7169,"mutability":"mutable","name":"id","nameLocation":"1243:2:20","nodeType":"VariableDeclaration","scope":7219,"src":"1235:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7174,"initialValue":{"arguments":[{"id":7171,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"1259:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7172,"name":"year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"1271:4:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":7170,"name":"badgeIdFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"1248:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$","typeString":"function (uint256,uint16) pure returns (uint256)"}},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1248:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1235:41:20"},{"expression":{"arguments":[{"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1294:16:20","subExpression":{"baseExpression":{"baseExpression":{"id":7176,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"1295:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7178,"indexExpression":{"id":7177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"1303:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1295:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7180,"indexExpression":{"id":7179,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"1307:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1295:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":7182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1312:17:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":7175,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1286:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1286:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7184,"nodeType":"ExpressionStatement","src":"1286:44:20"},{"expression":{"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7185,"name":"claimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"1341:7:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7188,"indexExpression":{"id":7186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"1349:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1341:11:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7189,"indexExpression":{"id":7187,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"1353:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1341:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1359:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1341:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7192,"nodeType":"ExpressionStatement","src":"1341:22:20"},{"expression":{"arguments":[{"id":7194,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"1379:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7195,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"1383:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1387:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1390:2:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":7193,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1373:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7199,"nodeType":"ExpressionStatement","src":"1373:20:20"},{"expression":{"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7200,"name":"totalHolders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"1404:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7202,"indexExpression":{"id":7201,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"1417:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1404:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1424:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1404:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7205,"nodeType":"ExpressionStatement","src":"1404:21:20"},{"expression":{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7206,"name":"candlesForMemorial","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"1435:18:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":7208,"indexExpression":{"id":7207,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"1454:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1435:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1469:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1435:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7211,"nodeType":"ExpressionStatement","src":"1435:35:20"},{"eventCall":{"arguments":[{"id":7213,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7148,"src":"1496:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7214,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7150,"src":"1500:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7215,"name":"year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"1512:4:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":7216,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7169,"src":"1518:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7212,"name":"CandleLit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7103,"src":"1486:9:20","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint16_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint16,uint256)"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7218,"nodeType":"EmitStatement","src":"1481:40:20"}]},"functionSelector":"7bbdff8b","id":7220,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7155,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7079,"src":"1160:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7156,"kind":"modifierInvocation","modifierName":{"id":7154,"name":"onlyRole","nameLocations":["1151:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1151:8:20"},"nodeType":"ModifierInvocation","src":"1151:21:20"}],"name":"lightCandle","nameLocation":"1085:11:20","nodeType":"FunctionDefinition","parameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"mutability":"mutable","name":"to","nameLocation":"1105:2:20","nodeType":"VariableDeclaration","scope":7220,"src":"1097:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7147,"name":"address","nodeType":"ElementaryTypeName","src":"1097:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7150,"mutability":"mutable","name":"memorialId","nameLocation":"1117:10:20","nodeType":"VariableDeclaration","scope":7220,"src":"1109:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7149,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7152,"mutability":"mutable","name":"year","nameLocation":"1136:4:20","nodeType":"VariableDeclaration","scope":7220,"src":"1129:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7151,"name":"uint16","nodeType":"ElementaryTypeName","src":"1129:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1096:45:20"},"returnParameters":{"id":7157,"nodeType":"ParameterList","parameters":[],"src":"1173:0:20"},"scope":7339,"src":"1076:452:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[931],"body":{"id":7238,"nodeType":"Block","src":"1827:54:20","statements":[{"expression":{"arguments":[{"hexValue":"536f756c626f756e643a206e6f6e2d7472616e7366657261626c65","id":7235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:29:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","typeString":"literal_string \"Soulbound: non-transferable\""},"value":"Soulbound: non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","typeString":"literal_string \"Soulbound: non-transferable\""}],"id":7234,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1837:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7237,"nodeType":"ExpressionStatement","src":"1837:37:20"}]},"functionSelector":"f242432a","id":7239,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1647:16:20","nodeType":"FunctionDefinition","overrides":{"id":7232,"nodeType":"OverrideSpecifier","overrides":[],"src":"1818:8:20"},"parameters":{"id":7231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"1673:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7221,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"1699:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7223,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"1723:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7225,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"1747:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7239,"src":"1775:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7229,"name":"bytes","nodeType":"ElementaryTypeName","src":"1775:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1663:139:20"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[],"src":"1827:0:20"},"scope":7339,"src":"1638:243:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[977],"body":{"id":7259,"nodeType":"Block","src":"2101:54:20","statements":[{"expression":{"arguments":[{"hexValue":"536f756c626f756e643a206e6f6e2d7472616e7366657261626c65","id":7256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2118:29:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","typeString":"literal_string \"Soulbound: non-transferable\""},"value":"Soulbound: non-transferable"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","typeString":"literal_string \"Soulbound: non-transferable\""}],"id":7255,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2111:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2111:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7258,"nodeType":"ExpressionStatement","src":"2111:37:20"}]},"functionSelector":"2eb2c2d6","id":7260,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"1896:21:20","nodeType":"FunctionDefinition","overrides":{"id":7253,"nodeType":"OverrideSpecifier","overrides":[],"src":"2092:8:20"},"parameters":{"id":7252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7260,"src":"1927:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7240,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7260,"src":"1953:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7242,"name":"address","nodeType":"ElementaryTypeName","src":"1953:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7260,"src":"1977:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1977:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7245,"nodeType":"ArrayTypeName","src":"1977:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7249,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7260,"src":"2011:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7248,"nodeType":"ArrayTypeName","src":"2011:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7260,"src":"2049:12:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7250,"name":"bytes","nodeType":"ElementaryTypeName","src":"2049:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1917:159:20"},"returnParameters":{"id":7254,"nodeType":"ParameterList","parameters":[],"src":"2101:0:20"},"scope":7339,"src":"1887:268:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[870],"body":{"id":7272,"nodeType":"Block","src":"2284:56:20","statements":[{"expression":{"arguments":[{"hexValue":"536f756c626f756e643a20617070726f76616c732064697361626c6564","id":7269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2301:31:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866","typeString":"literal_string \"Soulbound: approvals disabled\""},"value":"Soulbound: approvals disabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866","typeString":"literal_string \"Soulbound: approvals disabled\""}],"id":7268,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2294:6:20","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7271,"nodeType":"ExpressionStatement","src":"2294:39:20"}]},"functionSelector":"a22cb465","id":7273,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2227:17:20","nodeType":"FunctionDefinition","overrides":{"id":7266,"nodeType":"OverrideSpecifier","overrides":[],"src":"2275:8:20"},"parameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7273,"src":"2245:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7261,"name":"address","nodeType":"ElementaryTypeName","src":"2245:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7273,"src":"2254:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7263,"name":"bool","nodeType":"ElementaryTypeName","src":"2254:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2244:15:20"},"returnParameters":{"id":7267,"nodeType":"ParameterList","parameters":[],"src":"2284:0:20"},"scope":7339,"src":"2218:122:20","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[63,756],"body":{"id":7288,"nodeType":"Block","src":"2568:60:20","statements":[{"expression":{"arguments":[{"id":7285,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7275,"src":"2609:11:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7283,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2585:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_RemembranceBadges_$7339_$","typeString":"type(contract super RemembranceBadges)"}},"id":7284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2591:17:20","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":63,"src":"2585:23:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2585:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7282,"id":7287,"nodeType":"Return","src":"2578:43:20"}]},"functionSelector":"01ffc9a7","id":7289,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2418:17:20","nodeType":"FunctionDefinition","overrides":{"id":7279,"nodeType":"OverrideSpecifier","overrides":[{"id":7277,"name":"ERC1155","nameLocations":["2517:7:20"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"2517:7:20"},{"id":7278,"name":"AccessControl","nameLocations":["2526:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"2526:13:20"}],"src":"2508:32:20"},"parameters":{"id":7276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7275,"mutability":"mutable","name":"interfaceId","nameLocation":"2443:11:20","nodeType":"VariableDeclaration","scope":7289,"src":"2436:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7274,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2436:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2435:20:20"},"returnParameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7289,"src":"2558:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7280,"name":"bool","nodeType":"ElementaryTypeName","src":"2558:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2557:6:20"},"scope":7339,"src":"2409:219:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7324,"nodeType":"Block","src":"2765:141:20","statements":[{"assignments":[7302],"declarations":[{"constant":false,"id":7302,"mutability":"mutable","name":"id","nameLocation":"2783:2:20","nodeType":"VariableDeclaration","scope":7324,"src":"2775:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7307,"initialValue":{"arguments":[{"id":7304,"name":"memorialId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"2799:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7305,"name":"year","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"2811:4:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":7303,"name":"badgeIdFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"2788:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint16_$returns$_t_uint256_$","typeString":"function (uint256,uint16) pure returns (uint256)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2775:41:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7310,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"2844:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7311,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"2850:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7309,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2834:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":7312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2834:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2857:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2834:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206261646765","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2860:10:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e","typeString":"literal_string \"No badge\""},"value":"No badge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e","typeString":"literal_string \"No badge\""}],"id":7308,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2826:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2826:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7317,"nodeType":"ExpressionStatement","src":"2826:45:20"},{"expression":{"arguments":[{"id":7319,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7291,"src":"2887:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7320,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7302,"src":"2893:2:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":7321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2897:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":7318,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"2881:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7323,"nodeType":"ExpressionStatement","src":"2881:18:20"}]},"functionSelector":"5509dc1b","id":7325,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7298,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2745:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7299,"kind":"modifierInvocation","modifierName":{"id":7297,"name":"onlyRole","nameLocations":["2736:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"2736:8:20"},"nodeType":"ModifierInvocation","src":"2736:28:20"}],"name":"adminBurn","nameLocation":"2670:9:20","nodeType":"FunctionDefinition","parameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7291,"mutability":"mutable","name":"from","nameLocation":"2688:4:20","nodeType":"VariableDeclaration","scope":7325,"src":"2680:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7290,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7293,"mutability":"mutable","name":"memorialId","nameLocation":"2702:10:20","nodeType":"VariableDeclaration","scope":7325,"src":"2694:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7295,"mutability":"mutable","name":"year","nameLocation":"2721:4:20","nodeType":"VariableDeclaration","scope":7325,"src":"2714:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7294,"name":"uint16","nodeType":"ElementaryTypeName","src":"2714:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2679:47:20"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[],"src":"2765:0:20"},"scope":7339,"src":"2661:245:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7337,"nodeType":"Block","src":"2990:32:20","statements":[{"expression":{"arguments":[{"id":7334,"name":"newUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7327,"src":"3008:6:20","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7333,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"3000:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3000:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7336,"nodeType":"ExpressionStatement","src":"3000:15:20"}]},"functionSelector":"02fe5305","id":7338,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7330,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2970:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":7331,"kind":"modifierInvocation","modifierName":{"id":7329,"name":"onlyRole","nameLocations":["2961:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"2961:8:20"},"nodeType":"ModifierInvocation","src":"2961:28:20"}],"name":"setURI","nameLocation":"2921:6:20","nodeType":"FunctionDefinition","parameters":{"id":7328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7327,"mutability":"mutable","name":"newUri","nameLocation":"2944:6:20","nodeType":"VariableDeclaration","scope":7338,"src":"2928:22:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7326,"name":"string","nodeType":"ElementaryTypeName","src":"2928:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2927:24:20"},"returnParameters":{"id":7332,"nodeType":"ParameterList","parameters":[],"src":"2990:0:20"},"scope":7339,"src":"2912:110:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7340,"src":"214:2810:20","usedErrors":[306,309,629,634,639,646,651,656,663],"usedEvents":[318,327,336,1601,1616,1625,1632,7103]}],"src":"32:2993:20"},"id":20}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9517852661d0d7c623ffeca821b6dd85c8c227188c5446ab521b06187d915fc64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 MLOAD PUSH25 0x52661D0D7C623FFECA821B6DD85C8C227188C5446AB521B061 DUP8 0xD9 ISZERO 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3114:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9517852661d0d7c623ffeca821b6dd85c8c227188c5446ab521b06187d915fc64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 MLOAD PUSH25 0x52661D0D7C623FFECA821B6DD85C8C227188C5446AB521B061 DUP8 0xD9 ISZERO 0xFC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"439:3114:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c02348114b1c9aee2a93f13dc117db378cf10bfede973da64b963d626b0ccec364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x23 BASEFEE GT 0x4B SHR SWAP11 0xEE 0x2A SWAP4 CALL RETURNDATASIZE 0xC1 OR 0xDB CALLDATACOPY DUP13 CALL SIGNEXTEND INVALID 0xDE SWAP8 RETURNDATASIZE 0xA6 0x4B SWAP7 RETURNDATASIZE PUSH3 0x6B0CCE 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:20446:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c02348114b1c9aee2a93f13dc117db378cf10bfede973da64b963d626b0ccec364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0x23 BASEFEE GT 0x4B SHR SWAP11 0xEE 0x2A SWAP4 CALL RETURNDATASIZE 0xC1 OR 0xDB CALLDATACOPY DUP13 CALL SIGNEXTEND INVALID 0xDE SWAP8 RETURNDATASIZE 0xA6 0x4B SWAP7 RETURNDATASIZE PUSH3 0x6B0CCE 0xC3 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:20446:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91cb6a7d18453217594905893676de324e9c8c94a5b6069844035a3a788e9cb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SHR 0xB6 0xA7 0xD1 DUP5 MSTORE8 0x21 PUSH22 0x94905893676DE324E9C8C94A5B6069844035A3A788E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1599:3723:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91cb6a7d18453217594905893676de324e9c8c94a5b6069844035a3a788e9cb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SHR 0xB6 0xA7 0xD1 DUP5 MSTORE8 0x21 PUSH22 0x94905893676DE324E9C8C94A5B6069844035A3A788E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1599:3723:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/MemorialRegistry.sol":{"MemorialRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memorialId","type":"uint256"}],"name":"MemorialLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"memorialId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"version","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"contentHash","type":"bytes32"},{"indexed":false,"internalType":"string","name":"storageURI","type":"string"},{"indexed":true,"internalType":"address","name":"publisher","type":"address"},{"indexed":false,"internalType":"bool","name":"locked","type":"bool"}],"name":"MemorialPublished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"bytes32","name":"newContentHash","type":"bytes32"},{"internalType":"string","name":"newStorageURI","type":"string"}],"name":"appendVersion","outputs":[{"internalType":"uint256","name":"version","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"}],"name":"getVersion","outputs":[{"components":[{"internalType":"bytes32","name":"contentHash","type":"bytes32"},{"internalType":"string","name":"storageURI","type":"string"},{"internalType":"address","name":"publisher","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"bool","name":"locked","type":"bool"}],"internalType":"struct MemorialRegistry.Record","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"}],"name":"latest","outputs":[{"components":[{"internalType":"bytes32","name":"contentHash","type":"bytes32"},{"internalType":"string","name":"storageURI","type":"string"},{"internalType":"address","name":"publisher","type":"address"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"bool","name":"locked","type":"bool"}],"internalType":"struct MemorialRegistry.Record","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"}],"name":"lock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"nextMemorialId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"contentHash","type":"bytes32"},{"internalType":"string","name":"storageURI","type":"string"},{"internalType":"bool","name":"lockImmediately","type":"bool"}],"name":"publish","outputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"uint256","name":"version","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"}],"name":"versionCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_430":{"entryPoint":null,"id":430,"parameterSlots":1,"returnSlots":0},"@_6736":{"entryPoint":null,"id":6736,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_526":{"entryPoint":165,"id":526,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":413,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":430,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":393,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":361,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:21","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:21","statements":[{"nodeType":"YulAssignment","src":"62:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:21"},"nodeType":"YulFunctionCall","src":"73:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:21","type":""}],"src":"7:126:21"},{"body":{"nodeType":"YulBlock","src":"184:51:21","statements":[{"nodeType":"YulAssignment","src":"194:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:21"},"nodeType":"YulFunctionCall","src":"205:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:21","type":""}],"src":"139:96:21"},{"body":{"nodeType":"YulBlock","src":"306:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:21"},"nodeType":"YulFunctionCall","src":"328:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:21"},"nodeType":"YulFunctionCall","src":"316:37:21"},"nodeType":"YulExpressionStatement","src":"316:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:21","type":""}],"src":"241:118:21"},{"body":{"nodeType":"YulBlock","src":"463:124:21","statements":[{"nodeType":"YulAssignment","src":"473:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:21"},"nodeType":"YulFunctionCall","src":"481:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:21"},"nodeType":"YulFunctionCall","src":"562:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:21"},"nodeType":"YulFunctionCall","src":"509:71:21"},"nodeType":"YulExpressionStatement","src":"509:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:21","type":""}],"src":"365:222:21"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260016002553480156200001657600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200008d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000849190620001ae565b60405180910390fd5b6200009e81620000a560201b60201c565b50620001cb565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001968262000169565b9050919050565b620001a88162000189565b82525050565b6000602082019050620001c560008301846200019d565b92915050565b61204680620001db6000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80636987b075116100665780636987b07514610181578063715018a6146101b15780638da5cb5b146101bb578063dd467064146101d9578063f2fde38b146101f55761009d565b806207f4a0146100a257806303190e6d146100d257806318d852d8146101025780634a53815514610120578063641e8df314610150575b600080fd5b6100bc60048036038101906100b791906113e2565b610211565b6040516100c991906115ad565b60405180910390f35b6100ec60048036038101906100e791906113e2565b610419565b6040516100f991906115de565b60405180910390f35b61010a610494565b60405161011791906115de565b60405180910390f35b61013a6004803603810190610135919061168a565b61049a565b60405161014791906115de565b60405180910390f35b61016a6004803603810190610165919061172a565b610a13565b60405161017892919061179e565b60405180910390f35b61019b600480360381019061019691906117c7565b610cd6565b6040516101a891906115ad565b60405180910390f35b6101b9610f16565b005b6101c3610f2a565b6040516101d09190611816565b60405180910390f35b6101f360048036038101906101ee91906113e2565b610f53565b005b61020f600480360381019061020a919061185d565b611175565b005b61021961134e565b816000600160008381526020019081526020016000208054905011610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026a906118e7565b60405180910390fd5b600160008481526020019081526020016000206001806000868152602001908152602001600020805490506102a89190611936565b815481106102b9576102b861196a565b5b90600052602060002090600302016040518060a0016040529081600082015481526020016001820180546102ec906119c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610318906119c8565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff161515151581525050915050919050565b6000816000600160008381526020019081526020016000208054905011610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c906118e7565b60405180910390fd5b6001600084815260200190815260200160002080549050915050919050565b60025481565b60008460006001600083815260200190815260200160002080549050116104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906118e7565b60405180910390fd5b60006001600088815260200190815260200160002060018060008a81526020019081526020016000208054905061052d9190611936565b8154811061053e5761053d61196a565b5b90600052602060002090600302016040518060a001604052908160008201548152602001600182018054610571906119c8565b80601f016020809104026020016040519081016040528092919081815260200182805461059d906119c8565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff16151515158152505090508060800151156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611a45565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061074d575061071e610f2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078390611ab1565b60405180910390fd5b6000801b86036107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611b1d565b60405180910390fd5b60008585905011610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90611b89565b60405180910390fd5b60016000888152602001908152602001600020805490509250600160008881526020019081526020016000206040518060a0016040528088815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff1681526020016000151581525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816109199190611d84565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550608082015181600201601c6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff1683887fd77fe84d4f2a61fe0f7d451ae99d1eab022f54872f6dc94df8a39f425d574fcd8989896000604051610a019493929190611eb0565b60405180910390a45050949350505050565b6000806000801b8603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611b1d565b60405180910390fd5b60008585905011610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890611b89565b60405180910390fd5b60026000815480929190610ab490611ef0565b919050559150600160008381526020019081526020016000206040518060a0016040528088815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff1681526020018515158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001019081610ba29190611d84565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550608082015181600201601c6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff166000837fd77fe84d4f2a61fe0f7d451ae99d1eab022f54872f6dc94df8a39f425d574fcd89898989604051610c8a9493929190611eb0565b60405180910390a48215610cc657817ffd295620abd5998c47c7096c65bf6d4a3d7b026de9bcc55154df280a7976e17360405160405180910390a25b8160009150915094509492505050565b610cde61134e565b826000600160008381526020019081526020016000208054905011610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f906118e7565b60405180910390fd5b60016000858152602001908152602001600020805490508310610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8790611f84565b60405180910390fd5b600160008581526020019081526020016000208381548110610db557610db461196a565b5b90600052602060002090600302016040518060a001604052908160008201548152602001600182018054610de8906119c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e14906119c8565b8015610e615780601f10610e3657610100808354040283529160200191610e61565b820191906000526020600020905b815481529060010190602001808311610e4457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff16151515158152505091505092915050565b610f1e6111fb565b610f286000611282565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000600160008381526020019081526020016000208054905011610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa4906118e7565b60405180910390fd5b600060016000848152602001908152602001600020600180600086815260200190815260200160002080549050610fe49190611936565b81548110610ff557610ff461196a565b5b9060005260206000209060030201905080600201601c9054906101000a900460ff1615611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90611ff0565b60405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110e757506110b8610f2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111d90611ab1565b60405180910390fd5b600181600201601c6101000a81548160ff021916908315150217905550827ffd295620abd5998c47c7096c65bf6d4a3d7b026de9bcc55154df280a7976e17360405160405180910390a2505050565b61117d6111fb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ef5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e69190611816565b60405180910390fd5b6111f881611282565b50565b611203611346565b73ffffffffffffffffffffffffffffffffffffffff16611221610f2a565b73ffffffffffffffffffffffffffffffffffffffff161461128057611244611346565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112779190611816565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a001604052806000801916815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b600080fd5b600080fd5b6000819050919050565b6113bf816113ac565b81146113ca57600080fd5b50565b6000813590506113dc816113b6565b92915050565b6000602082840312156113f8576113f76113a2565b5b6000611406848285016113cd565b91505092915050565b6000819050919050565b6114228161140f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611462578082015181840152602081019050611447565b60008484015250505050565b6000601f19601f8301169050919050565b600061148a82611428565b6114948185611433565b93506114a4818560208601611444565b6114ad8161146e565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114e3826114b8565b9050919050565b6114f3816114d8565b82525050565b600067ffffffffffffffff82169050919050565b611516816114f9565b82525050565b60008115159050919050565b6115318161151c565b82525050565b600060a08301600083015161154f6000860182611419565b5060208301518482036020860152611567828261147f565b915050604083015161157c60408601826114ea565b50606083015161158f606086018261150d565b5060808301516115a26080860182611528565b508091505092915050565b600060208201905081810360008301526115c78184611537565b905092915050565b6115d8816113ac565b82525050565b60006020820190506115f360008301846115cf565b92915050565b6116028161140f565b811461160d57600080fd5b50565b60008135905061161f816115f9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261164a57611649611625565b5b8235905067ffffffffffffffff8111156116675761166661162a565b5b6020830191508360018202830111156116835761168261162f565b5b9250929050565b600080600080606085870312156116a4576116a36113a2565b5b60006116b2878288016113cd565b94505060206116c387828801611610565b935050604085013567ffffffffffffffff8111156116e4576116e36113a7565b5b6116f087828801611634565b925092505092959194509250565b6117078161151c565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b60008060008060608587031215611744576117436113a2565b5b600061175287828801611610565b945050602085013567ffffffffffffffff811115611773576117726113a7565b5b61177f87828801611634565b9350935050604061179287828801611715565b91505092959194509250565b60006040820190506117b360008301856115cf565b6117c060208301846115cf565b9392505050565b600080604083850312156117de576117dd6113a2565b5b60006117ec858286016113cd565b92505060206117fd858286016113cd565b9150509250929050565b611810816114d8565b82525050565b600060208201905061182b6000830184611807565b92915050565b61183a816114d8565b811461184557600080fd5b50565b60008135905061185781611831565b92915050565b600060208284031215611873576118726113a2565b5b600061188184828501611848565b91505092915050565b600082825260208201905092915050565b7f4d656d6f7269616c3a206e6f7420666f756e6400000000000000000000000000600082015250565b60006118d160138361188a565b91506118dc8261189b565b602082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611941826113ac565b915061194c836113ac565b925082820390508181111561196457611963611907565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119e057607f821691505b6020821081036119f3576119f2611999565b5b50919050565b7f4d656d6f7269616c206973206c6f636b65640000000000000000000000000000600082015250565b6000611a2f60128361188a565b9150611a3a826119f9565b602082019050919050565b60006020820190508181036000830152611a5e81611a22565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611a9b600e8361188a565b9150611aa682611a65565b602082019050919050565b60006020820190508181036000830152611aca81611a8e565b9050919050565b7f496e76616c696420686173680000000000000000000000000000000000000000600082015250565b6000611b07600c8361188a565b9150611b1282611ad1565b602082019050919050565b60006020820190508181036000830152611b3681611afa565b9050919050565b7f496e76616c696420555249000000000000000000000000000000000000000000600082015250565b6000611b73600b8361188a565b9150611b7e82611b3d565b602082019050919050565b60006020820190508181036000830152611ba281611b66565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611c3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bfd565b611c448683611bfd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c81611c7c611c77846113ac565b611c5c565b6113ac565b9050919050565b6000819050919050565b611c9b83611c66565b611caf611ca782611c88565b848454611c0a565b825550505050565b600090565b611cc4611cb7565b611ccf818484611c92565b505050565b5b81811015611cf357611ce8600082611cbc565b600181019050611cd5565b5050565b601f821115611d3857611d0981611bd8565b611d1284611bed565b81016020851015611d21578190505b611d35611d2d85611bed565b830182611cd4565b50505b505050565b600082821c905092915050565b6000611d5b60001984600802611d3d565b1980831691505092915050565b6000611d748383611d4a565b9150826002028217905092915050565b611d8d82611428565b67ffffffffffffffff811115611da657611da5611ba9565b5b611db082546119c8565b611dbb828285611cf7565b600060209050601f831160018114611dee5760008415611ddc578287015190505b611de68582611d68565b865550611e4e565b601f198416611dfc86611bd8565b60005b82811015611e2457848901518255600182019150602085019450602081019050611dff565b86831015611e415784890151611e3d601f891682611d4a565b8355505b6001600288020188555050505b505050505050565b611e5f8161140f565b82525050565b82818337600083830152505050565b6000611e80838561188a565b9350611e8d838584611e65565b611e968361146e565b840190509392505050565b611eaa8161151c565b82525050565b6000606082019050611ec56000830187611e56565b8181036020830152611ed8818587611e74565b9050611ee76040830184611ea1565b95945050505050565b6000611efb826113ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f2d57611f2c611907565b5b600182019050919050565b7f4261642076657273696f6e000000000000000000000000000000000000000000600082015250565b6000611f6e600b8361188a565b9150611f7982611f38565b602082019050919050565b60006020820190508181036000830152611f9d81611f61565b9050919050565b7f416c7265616479206c6f636b6564000000000000000000000000000000000000600082015250565b6000611fda600e8361188a565b9150611fe582611fa4565b602082019050919050565b6000602082019050818103600083015261200981611fcd565b905091905056fea264697066735822122024f8f34ddc65a333c673f695b72316c70ee5619633b5a31b46a7ea09748c986664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x8D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x84 SWAP2 SWAP1 PUSH3 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x9E DUP2 PUSH3 0xA5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x196 DUP3 PUSH3 0x169 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1A8 DUP2 PUSH3 0x189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2046 DUP1 PUSH3 0x1DB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6987B075 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6987B075 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xDD467064 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F5 JUMPI PUSH2 0x9D JUMP JUMPDEST DUP1 PUSH3 0x7F4A0 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x3190E6D EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x18D852D8 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x4A538155 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x641E8DF3 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x134E JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B9 JUMPI PUSH2 0x2B8 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2EC SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x318 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x571 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59D SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD ISZERO PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x74D JUMPI POP PUSH2 0x71E PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP7 SUB PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP GT PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP9 PUSH32 0xD77FE84D4F2A61FE0F7D451AE99D1EAB022F54872F6DC94DF8A39F425D574FCD DUP10 DUP10 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xA01 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SHL DUP7 SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP GT PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA98 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAB4 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP4 PUSH32 0xD77FE84D4F2A61FE0F7D451AE99D1EAB022F54872F6DC94DF8A39F425D574FCD DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC8A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 ISZERO PUSH2 0xCC6 JUMPI DUP2 PUSH32 0xFD295620ABD5998C47C7096C65BF6D4A3D7B026DE9BCC55154DF280A7976E173 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP2 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x134E JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDE8 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE14 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE36 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1E PUSH2 0x11FB JUMP JUMPDEST PUSH2 0xF28 PUSH1 0x0 PUSH2 0x1282 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10E7 JUMPI POP PUSH2 0x10B8 PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111D SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0xFD295620ABD5998C47C7096C65BF6D4A3D7B026DE9BCC55154DF280A7976E173 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x117D PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0x1282 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x1346 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1221 PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH2 0x1244 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP5 DUP3 DUP6 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1462 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x1494 DUP2 DUP6 PUSH2 0x1433 JUMP JUMPDEST SWAP4 POP PUSH2 0x14A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x146E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E3 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1516 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x151C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x154F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1419 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1567 DUP3 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x157C PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x14EA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x158F PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x150D JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x15A2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1528 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C7 DUP2 DUP5 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15D8 DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1602 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP2 EQ PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161F DUP2 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x164A JUMPI PUSH2 0x1649 PUSH2 0x1625 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x162A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x162F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B2 DUP8 DUP3 DUP9 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH2 0x16F0 DUP8 DUP3 DUP9 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x151C JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1752 DUP8 DUP3 DUP9 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1773 JUMPI PUSH2 0x1772 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH2 0x177F DUP8 DUP3 DUP9 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1792 DUP8 DUP3 DUP9 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x17C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183A DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1857 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1873 JUMPI PUSH2 0x1872 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP5 DUP3 DUP6 ADD PUSH2 0x1848 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D656D6F7269616C3A206E6F7420666F756E6400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D1 PUSH1 0x13 DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x18DC DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656D6F7269616C206973206C6F636B65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F PUSH1 0x12 DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5E DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0xE DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACA DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420686173680000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 PUSH1 0xC DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B12 DUP3 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1AFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420555249000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B73 PUSH1 0xB DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP3 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA2 DUP2 PUSH2 0x1B66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1C44 DUP7 DUP4 PUSH2 0x1BFD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 PUSH2 0x1C7C PUSH2 0x1C77 DUP5 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x13AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9B DUP4 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x1CAF PUSH2 0x1CA7 DUP3 PUSH2 0x1C88 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C0A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1CC4 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x1CCF DUP2 DUP5 DUP5 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CE8 PUSH1 0x0 DUP3 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D09 DUP2 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x1D12 DUP5 PUSH2 0x1BED JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D21 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D35 PUSH2 0x1D2D DUP6 PUSH2 0x1BED JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CD4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D3D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 DUP4 DUP4 PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8D DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA6 JUMPI PUSH2 0x1DA5 PUSH2 0x1BA9 JUMP JUMPDEST JUMPDEST PUSH2 0x1DB0 DUP3 SLOAD PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x1DBB DUP3 DUP3 DUP6 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DEE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DE6 DUP6 DUP3 PUSH2 0x1D68 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DFC DUP7 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E24 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DFF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E41 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E3D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D4A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E5F DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E80 DUP4 DUP6 PUSH2 0x188A JUMP JUMPDEST SWAP4 POP PUSH2 0x1E8D DUP4 DUP6 DUP5 PUSH2 0x1E65 JUMP JUMPDEST PUSH2 0x1E96 DUP4 PUSH2 0x146E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x151C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1ED8 DUP2 DUP6 DUP8 PUSH2 0x1E74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFB DUP3 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261642076657273696F6E000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6E PUSH1 0xB DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F9D DUP2 PUSH2 0x1F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206C6F636B6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0xE DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2009 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xF8 RETURN 0x4D 0xDC PUSH6 0xA333C673F695 0xB7 0x23 AND 0xC7 0xE 0xE5 PUSH2 0x9633 0xB5 LOG3 SHL CHAINID 0xA7 0xEA MULMOD PUSH21 0x8C986664736F6C6343000814003300000000000000 ","sourceMap":"127:3634:19:-:0;;;411:1;379:33;;722:36;;;;;;;;;;744:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;127:3634:19;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:21:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;127:3634:19:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_464":{"entryPoint":4603,"id":464,"parameterSlots":0,"returnSlots":0},"@_msgSender_2938":{"entryPoint":4934,"id":2938,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_526":{"entryPoint":4738,"id":526,"parameterSlots":1,"returnSlots":0},"@appendVersion_6939":{"entryPoint":1178,"id":6939,"parameterSlots":4,"returnSlots":1},"@getVersion_7063":{"entryPoint":3286,"id":7063,"parameterSlots":2,"returnSlots":1},"@latest_7017":{"entryPoint":529,"id":7017,"parameterSlots":1,"returnSlots":1},"@lock_6994":{"entryPoint":3923,"id":6994,"parameterSlots":1,"returnSlots":0},"@nextMemorialId_6710":{"entryPoint":1172,"id":6710,"parameterSlots":0,"returnSlots":0},"@owner_447":{"entryPoint":3882,"id":447,"parameterSlots":0,"returnSlots":1},"@publish_6830":{"entryPoint":2579,"id":6830,"parameterSlots":4,"returnSlots":2},"@renounceOwnership_478":{"entryPoint":3862,"id":478,"parameterSlots":0,"returnSlots":0},"@transferOwnership_506":{"entryPoint":4469,"id":506,"parameterSlots":1,"returnSlots":0},"@versionCount_7033":{"entryPoint":1049,"id":7033,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6216,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":5648,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":5684,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_bool":{"entryPoint":5930,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":5090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes32t_string_calldata_ptr":{"entryPoint":5770,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":6087,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address":{"entryPoint":5354,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6151,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool":{"entryPoint":5416,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7841,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":5145,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7766,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7796,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":5247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415_to_t_string_memory_ptr_fromStack":{"entryPoint":6906,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3_to_t_string_memory_ptr_fromStack":{"entryPoint":6690,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6_to_t_string_memory_ptr_fromStack":{"entryPoint":8141,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94_to_t_string_memory_ptr_fromStack":{"entryPoint":6340,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0_to_t_string_memory_ptr_fromStack":{"entryPoint":8033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048_to_t_string_memory_ptr_fromStack":{"entryPoint":7014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack":{"entryPoint":6798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Record_$6701_memory_ptr_to_t_struct$_Record_$6701_memory_ptr_fromStack":{"entryPoint":5431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5583,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64":{"entryPoint":5389,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_bool__to_t_bytes32_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":7856,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6941,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6725,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8176,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6375,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8068,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Record_$6701_memory_ptr__to_t_struct$_Record_$6701_memory_ptr__fromStack_reversed":{"entryPoint":5549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6046,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7128,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5160,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":5171,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6282,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6454,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":7415,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5336,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5404,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":5135,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5304,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5036,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":5369,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":7380,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":7270,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":7556,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7781,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5188,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":7149,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6600,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":7528,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":7260,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7920,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":7498,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6407,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6553,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6506,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7081,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":7304,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":5674,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5669,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":5679,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5031,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5026,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5230,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":7165,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":7485,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":7356,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415":{"entryPoint":6865,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3":{"entryPoint":6649,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6":{"entryPoint":8100,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94":{"entryPoint":6299,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0":{"entryPoint":7992,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36":{"entryPoint":6757,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":7178,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":7314,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6193,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5886,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":5625,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5046,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":7351,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23905:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:32:21","statements":[{"nodeType":"YulAssignment","src":"389:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:77:21"},{"body":{"nodeType":"YulBlock","src":"460:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:21"},"nodeType":"YulFunctionCall","src":"519:12:21"},"nodeType":"YulExpressionStatement","src":"519:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:21"},"nodeType":"YulFunctionCall","src":"490:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:21"},"nodeType":"YulFunctionCall","src":"480:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:21"},"nodeType":"YulFunctionCall","src":"473:43:21"},"nodeType":"YulIf","src":"470:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:21","type":""}],"src":"417:122:21"},{"body":{"nodeType":"YulBlock","src":"597:87:21","statements":[{"nodeType":"YulAssignment","src":"607:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:21"},"nodeType":"YulFunctionCall","src":"616:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:21"},"nodeType":"YulFunctionCall","src":"645:33:21"},"nodeType":"YulExpressionStatement","src":"645:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:21","type":""}],"src":"545:139:21"},{"body":{"nodeType":"YulBlock","src":"756:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:21"},"nodeType":"YulFunctionCall","src":"804:79:21"},"nodeType":"YulExpressionStatement","src":"804:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:21"},"nodeType":"YulFunctionCall","src":"773:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:21"},"nodeType":"YulFunctionCall","src":"769:32:21"},"nodeType":"YulIf","src":"766:119:21"},{"nodeType":"YulBlock","src":"895:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:21","type":""}]},{"nodeType":"YulAssignment","src":"939:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:21"},"nodeType":"YulFunctionCall","src":"970:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"949:20:21"},"nodeType":"YulFunctionCall","src":"949:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:21","type":""}],"src":"690:329:21"},{"body":{"nodeType":"YulBlock","src":"1070:32:21","statements":[{"nodeType":"YulAssignment","src":"1080:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"1091:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:21","type":""}],"src":"1025:77:21"},{"body":{"nodeType":"YulBlock","src":"1163:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1180:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1203:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1185:17:21"},"nodeType":"YulFunctionCall","src":"1185:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1173:6:21"},"nodeType":"YulFunctionCall","src":"1173:37:21"},"nodeType":"YulExpressionStatement","src":"1173:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1151:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1158:3:21","type":""}],"src":"1108:108:21"},{"body":{"nodeType":"YulBlock","src":"1281:40:21","statements":[{"nodeType":"YulAssignment","src":"1292:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1308:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1302:5:21"},"nodeType":"YulFunctionCall","src":"1302:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1292:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1264:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1274:6:21","type":""}],"src":"1222:99:21"},{"body":{"nodeType":"YulBlock","src":"1413:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1430:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1435:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1423:6:21"},"nodeType":"YulFunctionCall","src":"1423:19:21"},"nodeType":"YulExpressionStatement","src":"1423:19:21"},{"nodeType":"YulAssignment","src":"1451:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1470:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1475:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:21"},"nodeType":"YulFunctionCall","src":"1466:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1451:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1385:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1390:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1401:11:21","type":""}],"src":"1327:159:21"},{"body":{"nodeType":"YulBlock","src":"1554:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1564:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1573:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1568:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1633:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1658:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1663:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1654:3:21"},"nodeType":"YulFunctionCall","src":"1654:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1677:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1682:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1673:3:21"},"nodeType":"YulFunctionCall","src":"1673:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1667:5:21"},"nodeType":"YulFunctionCall","src":"1667:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1647:6:21"},"nodeType":"YulFunctionCall","src":"1647:39:21"},"nodeType":"YulExpressionStatement","src":"1647:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1594:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1597:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1591:2:21"},"nodeType":"YulFunctionCall","src":"1591:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1605:19:21","statements":[{"nodeType":"YulAssignment","src":"1607:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1616:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1619:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1612:3:21"},"nodeType":"YulFunctionCall","src":"1612:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1607:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1587:3:21","statements":[]},"src":"1583:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1716:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1721:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1712:3:21"},"nodeType":"YulFunctionCall","src":"1712:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1730:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1705:6:21"},"nodeType":"YulFunctionCall","src":"1705:27:21"},"nodeType":"YulExpressionStatement","src":"1705:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1536:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1541:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1546:6:21","type":""}],"src":"1492:246:21"},{"body":{"nodeType":"YulBlock","src":"1792:54:21","statements":[{"nodeType":"YulAssignment","src":"1802:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1820:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1827:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:21"},"nodeType":"YulFunctionCall","src":"1816:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1836:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1832:3:21"},"nodeType":"YulFunctionCall","src":"1832:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1812:3:21"},"nodeType":"YulFunctionCall","src":"1812:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1802:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1785:6:21","type":""}],"src":"1744:102:21"},{"body":{"nodeType":"YulBlock","src":"1934:275:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1944:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1991:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1958:32:21"},"nodeType":"YulFunctionCall","src":"1958:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1948:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2006:68:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2062:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2067:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2013:48:21"},"nodeType":"YulFunctionCall","src":"2013:61:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2006:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2122:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2129:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"2136:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2141:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2083:34:21"},"nodeType":"YulFunctionCall","src":"2083:65:21"},"nodeType":"YulExpressionStatement","src":"2083:65:21"},{"nodeType":"YulAssignment","src":"2157:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2168:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2195:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2173:21:21"},"nodeType":"YulFunctionCall","src":"2173:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:21"},"nodeType":"YulFunctionCall","src":"2164:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2157:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1915:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1922:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1930:3:21","type":""}],"src":"1852:357:21"},{"body":{"nodeType":"YulBlock","src":"2260:81:21","statements":[{"nodeType":"YulAssignment","src":"2270:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2285:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2292:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2281:3:21"},"nodeType":"YulFunctionCall","src":"2281:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2270:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2242:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2252:7:21","type":""}],"src":"2215:126:21"},{"body":{"nodeType":"YulBlock","src":"2392:51:21","statements":[{"nodeType":"YulAssignment","src":"2402:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2413:17:21"},"nodeType":"YulFunctionCall","src":"2413:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2402:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2374:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2384:7:21","type":""}],"src":"2347:96:21"},{"body":{"nodeType":"YulBlock","src":"2504:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2521:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2544:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2526:17:21"},"nodeType":"YulFunctionCall","src":"2526:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:21"},"nodeType":"YulFunctionCall","src":"2514:37:21"},"nodeType":"YulExpressionStatement","src":"2514:37:21"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2492:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2499:3:21","type":""}],"src":"2449:108:21"},{"body":{"nodeType":"YulBlock","src":"2607:57:21","statements":[{"nodeType":"YulAssignment","src":"2617:41:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2632:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2639:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2628:3:21"},"nodeType":"YulFunctionCall","src":"2628:30:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2617:7:21"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2589:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2599:7:21","type":""}],"src":"2563:101:21"},{"body":{"nodeType":"YulBlock","src":"2723:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2740:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2762:5:21"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"2745:16:21"},"nodeType":"YulFunctionCall","src":"2745:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2733:6:21"},"nodeType":"YulFunctionCall","src":"2733:36:21"},"nodeType":"YulExpressionStatement","src":"2733:36:21"}]},"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2711:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2718:3:21","type":""}],"src":"2670:105:21"},{"body":{"nodeType":"YulBlock","src":"2823:48:21","statements":[{"nodeType":"YulAssignment","src":"2833:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2858:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2851:6:21"},"nodeType":"YulFunctionCall","src":"2851:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2844:6:21"},"nodeType":"YulFunctionCall","src":"2844:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2833:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2805:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2815:7:21","type":""}],"src":"2781:90:21"},{"body":{"nodeType":"YulBlock","src":"2926:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2943:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2963:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2948:14:21"},"nodeType":"YulFunctionCall","src":"2948:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2936:6:21"},"nodeType":"YulFunctionCall","src":"2936:34:21"},"nodeType":"YulExpressionStatement","src":"2936:34:21"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2914:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2921:3:21","type":""}],"src":"2877:99:21"},{"body":{"nodeType":"YulBlock","src":"3176:1021:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3186:26:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3202:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3207:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3198:3:21"},"nodeType":"YulFunctionCall","src":"3198:14:21"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"3190:4:21","type":""}]},{"nodeType":"YulBlock","src":"3222:171:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3264:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3294:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3301:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3290:3:21"},"nodeType":"YulFunctionCall","src":"3290:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3284:5:21"},"nodeType":"YulFunctionCall","src":"3284:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3268:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3354:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3372:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3377:4:21","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3368:3:21"},"nodeType":"YulFunctionCall","src":"3368:14:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"3320:33:21"},"nodeType":"YulFunctionCall","src":"3320:63:21"},"nodeType":"YulExpressionStatement","src":"3320:63:21"}]},{"nodeType":"YulBlock","src":"3403:241:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3444:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3474:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3481:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3470:3:21"},"nodeType":"YulFunctionCall","src":"3470:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3464:5:21"},"nodeType":"YulFunctionCall","src":"3464:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3448:12:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3512:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3517:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3508:3:21"},"nodeType":"YulFunctionCall","src":"3508:14:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3528:4:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3534:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3524:3:21"},"nodeType":"YulFunctionCall","src":"3524:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3501:6:21"},"nodeType":"YulFunctionCall","src":"3501:38:21"},"nodeType":"YulExpressionStatement","src":"3501:38:21"},{"nodeType":"YulAssignment","src":"3552:81:21","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3614:12:21"},{"name":"tail","nodeType":"YulIdentifier","src":"3628:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3560:53:21"},"nodeType":"YulFunctionCall","src":"3560:73:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3552:4:21"}]}]},{"nodeType":"YulBlock","src":"3654:169:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3694:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3724:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3731:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3720:3:21"},"nodeType":"YulFunctionCall","src":"3720:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3714:5:21"},"nodeType":"YulFunctionCall","src":"3714:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3698:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3784:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3802:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3807:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3798:3:21"},"nodeType":"YulFunctionCall","src":"3798:14:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3750:33:21"},"nodeType":"YulFunctionCall","src":"3750:63:21"},"nodeType":"YulExpressionStatement","src":"3750:63:21"}]},{"nodeType":"YulBlock","src":"3833:167:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3873:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3903:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3910:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3899:3:21"},"nodeType":"YulFunctionCall","src":"3899:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3893:5:21"},"nodeType":"YulFunctionCall","src":"3893:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3877:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3961:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3979:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3984:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3975:3:21"},"nodeType":"YulFunctionCall","src":"3975:14:21"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64","nodeType":"YulIdentifier","src":"3929:31:21"},"nodeType":"YulFunctionCall","src":"3929:61:21"},"nodeType":"YulExpressionStatement","src":"3929:61:21"}]},{"nodeType":"YulBlock","src":"4010:160:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4047:43:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4077:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4084:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:21"},"nodeType":"YulFunctionCall","src":"4073:16:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4067:5:21"},"nodeType":"YulFunctionCall","src":"4067:23:21"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4051:12:21","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4131:12:21"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4149:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4154:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4145:3:21"},"nodeType":"YulFunctionCall","src":"4145:14:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"4103:27:21"},"nodeType":"YulFunctionCall","src":"4103:57:21"},"nodeType":"YulExpressionStatement","src":"4103:57:21"}]},{"nodeType":"YulAssignment","src":"4180:11:21","value":{"name":"tail","nodeType":"YulIdentifier","src":"4187:4:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4180:3:21"}]}]},"name":"abi_encode_t_struct$_Record_$6701_memory_ptr_to_t_struct$_Record_$6701_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3155:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3162:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3171:3:21","type":""}],"src":"3054:1143:21"},{"body":{"nodeType":"YulBlock","src":"4349:223:21","statements":[{"nodeType":"YulAssignment","src":"4359:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4371:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4382:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4367:3:21"},"nodeType":"YulFunctionCall","src":"4367:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4359:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4406:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4417:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4402:3:21"},"nodeType":"YulFunctionCall","src":"4402:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4425:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4431:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4421:3:21"},"nodeType":"YulFunctionCall","src":"4421:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4395:6:21"},"nodeType":"YulFunctionCall","src":"4395:47:21"},"nodeType":"YulExpressionStatement","src":"4395:47:21"},{"nodeType":"YulAssignment","src":"4451:114:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4551:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"4560:4:21"}],"functionName":{"name":"abi_encode_t_struct$_Record_$6701_memory_ptr_to_t_struct$_Record_$6701_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4459:91:21"},"nodeType":"YulFunctionCall","src":"4459:106:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4451:4:21"}]}]},"name":"abi_encode_tuple_t_struct$_Record_$6701_memory_ptr__to_t_struct$_Record_$6701_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4321:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4333:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4344:4:21","type":""}],"src":"4203:369:21"},{"body":{"nodeType":"YulBlock","src":"4643:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4660:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4683:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4665:17:21"},"nodeType":"YulFunctionCall","src":"4665:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4653:6:21"},"nodeType":"YulFunctionCall","src":"4653:37:21"},"nodeType":"YulExpressionStatement","src":"4653:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4631:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4638:3:21","type":""}],"src":"4578:118:21"},{"body":{"nodeType":"YulBlock","src":"4800:124:21","statements":[{"nodeType":"YulAssignment","src":"4810:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4822:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4818:3:21"},"nodeType":"YulFunctionCall","src":"4818:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4810:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4890:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4914:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4899:3:21"},"nodeType":"YulFunctionCall","src":"4899:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4846:43:21"},"nodeType":"YulFunctionCall","src":"4846:71:21"},"nodeType":"YulExpressionStatement","src":"4846:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4772:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4784:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4795:4:21","type":""}],"src":"4702:222:21"},{"body":{"nodeType":"YulBlock","src":"4973:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"5030:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5039:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5042:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5032:6:21"},"nodeType":"YulFunctionCall","src":"5032:12:21"},"nodeType":"YulExpressionStatement","src":"5032:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4996:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5021:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5003:17:21"},"nodeType":"YulFunctionCall","src":"5003:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4993:2:21"},"nodeType":"YulFunctionCall","src":"4993:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4986:6:21"},"nodeType":"YulFunctionCall","src":"4986:43:21"},"nodeType":"YulIf","src":"4983:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4966:5:21","type":""}],"src":"4930:122:21"},{"body":{"nodeType":"YulBlock","src":"5110:87:21","statements":[{"nodeType":"YulAssignment","src":"5120:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5142:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5129:12:21"},"nodeType":"YulFunctionCall","src":"5129:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5120:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5185:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"5158:26:21"},"nodeType":"YulFunctionCall","src":"5158:33:21"},"nodeType":"YulExpressionStatement","src":"5158:33:21"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5088:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5096:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5104:5:21","type":""}],"src":"5058:139:21"},{"body":{"nodeType":"YulBlock","src":"5292:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5309:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5312:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5302:6:21"},"nodeType":"YulFunctionCall","src":"5302:12:21"},"nodeType":"YulExpressionStatement","src":"5302:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5203:117:21"},{"body":{"nodeType":"YulBlock","src":"5415:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5432:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5435:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5425:6:21"},"nodeType":"YulFunctionCall","src":"5425:12:21"},"nodeType":"YulExpressionStatement","src":"5425:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"5326:117:21"},{"body":{"nodeType":"YulBlock","src":"5538:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5558:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5548:6:21"},"nodeType":"YulFunctionCall","src":"5548:12:21"},"nodeType":"YulExpressionStatement","src":"5548:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5449:117:21"},{"body":{"nodeType":"YulBlock","src":"5661:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"5710:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5712:77:21"},"nodeType":"YulFunctionCall","src":"5712:79:21"},"nodeType":"YulExpressionStatement","src":"5712:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5689:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5697:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5685:3:21"},"nodeType":"YulFunctionCall","src":"5685:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"5704:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5681:3:21"},"nodeType":"YulFunctionCall","src":"5681:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5674:6:21"},"nodeType":"YulFunctionCall","src":"5674:35:21"},"nodeType":"YulIf","src":"5671:122:21"},{"nodeType":"YulAssignment","src":"5802:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5825:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5812:12:21"},"nodeType":"YulFunctionCall","src":"5812:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5802:6:21"}]},{"body":{"nodeType":"YulBlock","src":"5875:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"5877:77:21"},"nodeType":"YulFunctionCall","src":"5877:79:21"},"nodeType":"YulExpressionStatement","src":"5877:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5847:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5855:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5844:2:21"},"nodeType":"YulFunctionCall","src":"5844:30:21"},"nodeType":"YulIf","src":"5841:117:21"},{"nodeType":"YulAssignment","src":"5967:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5983:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"5991:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5979:3:21"},"nodeType":"YulFunctionCall","src":"5979:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"5967:8:21"}]},{"body":{"nodeType":"YulBlock","src":"6050:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6052:77:21"},"nodeType":"YulFunctionCall","src":"6052:79:21"},"nodeType":"YulExpressionStatement","src":"6052:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6015:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6029:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6037:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6025:3:21"},"nodeType":"YulFunctionCall","src":"6025:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:21"},"nodeType":"YulFunctionCall","src":"6011:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"6045:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6008:2:21"},"nodeType":"YulFunctionCall","src":"6008:41:21"},"nodeType":"YulIf","src":"6005:128:21"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5628:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"5636:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"5644:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"5654:6:21","type":""}],"src":"5586:553:21"},{"body":{"nodeType":"YulBlock","src":"6265:699:21","statements":[{"body":{"nodeType":"YulBlock","src":"6311:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6313:77:21"},"nodeType":"YulFunctionCall","src":"6313:79:21"},"nodeType":"YulExpressionStatement","src":"6313:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6286:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6295:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6282:3:21"},"nodeType":"YulFunctionCall","src":"6282:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6307:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6278:3:21"},"nodeType":"YulFunctionCall","src":"6278:32:21"},"nodeType":"YulIf","src":"6275:119:21"},{"nodeType":"YulBlock","src":"6404:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6419:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6433:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6423:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6448:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6483:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6494:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6479:3:21"},"nodeType":"YulFunctionCall","src":"6479:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6503:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6458:20:21"},"nodeType":"YulFunctionCall","src":"6458:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6448:6:21"}]}]},{"nodeType":"YulBlock","src":"6531:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6546:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6560:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6550:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6576:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6611:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6622:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:21"},"nodeType":"YulFunctionCall","src":"6607:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6631:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6586:20:21"},"nodeType":"YulFunctionCall","src":"6586:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6576:6:21"}]}]},{"nodeType":"YulBlock","src":"6659:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6674:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6705:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6716:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6701:3:21"},"nodeType":"YulFunctionCall","src":"6701:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6688:12:21"},"nodeType":"YulFunctionCall","src":"6688:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6678:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6767:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"6769:77:21"},"nodeType":"YulFunctionCall","src":"6769:79:21"},"nodeType":"YulExpressionStatement","src":"6769:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6739:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"6747:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6736:2:21"},"nodeType":"YulFunctionCall","src":"6736:30:21"},"nodeType":"YulIf","src":"6733:117:21"},{"nodeType":"YulAssignment","src":"6864:83:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6919:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6930:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6915:3:21"},"nodeType":"YulFunctionCall","src":"6915:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6939:7:21"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"6882:32:21"},"nodeType":"YulFunctionCall","src":"6882:65:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6864:6:21"},{"name":"value3","nodeType":"YulIdentifier","src":"6872:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes32t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6211:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6222:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6234:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6242:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6250:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6258:6:21","type":""}],"src":"6145:819:21"},{"body":{"nodeType":"YulBlock","src":"7010:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"7064:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7073:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7076:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7066:6:21"},"nodeType":"YulFunctionCall","src":"7066:12:21"},"nodeType":"YulExpressionStatement","src":"7066:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7033:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7055:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7040:14:21"},"nodeType":"YulFunctionCall","src":"7040:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7030:2:21"},"nodeType":"YulFunctionCall","src":"7030:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7023:6:21"},"nodeType":"YulFunctionCall","src":"7023:40:21"},"nodeType":"YulIf","src":"7020:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7003:5:21","type":""}],"src":"6970:116:21"},{"body":{"nodeType":"YulBlock","src":"7141:84:21","statements":[{"nodeType":"YulAssignment","src":"7151:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7173:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7160:12:21"},"nodeType":"YulFunctionCall","src":"7160:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7151:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7213:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"7189:23:21"},"nodeType":"YulFunctionCall","src":"7189:30:21"},"nodeType":"YulExpressionStatement","src":"7189:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7119:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"7127:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7135:5:21","type":""}],"src":"7092:133:21"},{"body":{"nodeType":"YulBlock","src":"7348:696:21","statements":[{"body":{"nodeType":"YulBlock","src":"7394:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7396:77:21"},"nodeType":"YulFunctionCall","src":"7396:79:21"},"nodeType":"YulExpressionStatement","src":"7396:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7369:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7378:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:21"},"nodeType":"YulFunctionCall","src":"7365:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7390:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7361:3:21"},"nodeType":"YulFunctionCall","src":"7361:32:21"},"nodeType":"YulIf","src":"7358:119:21"},{"nodeType":"YulBlock","src":"7487:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7502:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7516:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7506:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7531:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7566:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7577:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7562:3:21"},"nodeType":"YulFunctionCall","src":"7562:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7586:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7541:20:21"},"nodeType":"YulFunctionCall","src":"7541:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7531:6:21"}]}]},{"nodeType":"YulBlock","src":"7614:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7629:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7660:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7671:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7656:3:21"},"nodeType":"YulFunctionCall","src":"7656:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7643:12:21"},"nodeType":"YulFunctionCall","src":"7643:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7633:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7722:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7724:77:21"},"nodeType":"YulFunctionCall","src":"7724:79:21"},"nodeType":"YulExpressionStatement","src":"7724:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7694:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7702:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7691:2:21"},"nodeType":"YulFunctionCall","src":"7691:30:21"},"nodeType":"YulIf","src":"7688:117:21"},{"nodeType":"YulAssignment","src":"7819:83:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7885:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7870:3:21"},"nodeType":"YulFunctionCall","src":"7870:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7894:7:21"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"7837:32:21"},"nodeType":"YulFunctionCall","src":"7837:65:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7819:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"7827:6:21"}]}]},{"nodeType":"YulBlock","src":"7922:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7937:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7951:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7941:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7967:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7999:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8010:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7995:3:21"},"nodeType":"YulFunctionCall","src":"7995:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8019:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"7977:17:21"},"nodeType":"YulFunctionCall","src":"7977:50:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7967:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_string_calldata_ptrt_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7294:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7305:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7317:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7325:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7333:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7341:6:21","type":""}],"src":"7231:813:21"},{"body":{"nodeType":"YulBlock","src":"8176:206:21","statements":[{"nodeType":"YulAssignment","src":"8186:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8198:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8209:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8194:3:21"},"nodeType":"YulFunctionCall","src":"8194:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8186:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8266:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8279:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8290:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8275:3:21"},"nodeType":"YulFunctionCall","src":"8275:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8222:43:21"},"nodeType":"YulFunctionCall","src":"8222:71:21"},"nodeType":"YulExpressionStatement","src":"8222:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8347:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8360:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8371:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8356:3:21"},"nodeType":"YulFunctionCall","src":"8356:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8303:43:21"},"nodeType":"YulFunctionCall","src":"8303:72:21"},"nodeType":"YulExpressionStatement","src":"8303:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8140:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8152:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8160:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8171:4:21","type":""}],"src":"8050:332:21"},{"body":{"nodeType":"YulBlock","src":"8471:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"8517:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8519:77:21"},"nodeType":"YulFunctionCall","src":"8519:79:21"},"nodeType":"YulExpressionStatement","src":"8519:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8492:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8501:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8488:3:21"},"nodeType":"YulFunctionCall","src":"8488:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8513:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8484:3:21"},"nodeType":"YulFunctionCall","src":"8484:32:21"},"nodeType":"YulIf","src":"8481:119:21"},{"nodeType":"YulBlock","src":"8610:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8625:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8639:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8629:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8654:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8689:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8700:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8685:3:21"},"nodeType":"YulFunctionCall","src":"8685:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8709:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8664:20:21"},"nodeType":"YulFunctionCall","src":"8664:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8654:6:21"}]}]},{"nodeType":"YulBlock","src":"8737:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8752:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8766:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8756:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8782:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:21"},"nodeType":"YulFunctionCall","src":"8813:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8792:20:21"},"nodeType":"YulFunctionCall","src":"8792:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8782:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8433:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8444:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8456:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8464:6:21","type":""}],"src":"8388:474:21"},{"body":{"nodeType":"YulBlock","src":"8933:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8950:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8973:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8955:17:21"},"nodeType":"YulFunctionCall","src":"8955:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8943:6:21"},"nodeType":"YulFunctionCall","src":"8943:37:21"},"nodeType":"YulExpressionStatement","src":"8943:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8921:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8928:3:21","type":""}],"src":"8868:118:21"},{"body":{"nodeType":"YulBlock","src":"9090:124:21","statements":[{"nodeType":"YulAssignment","src":"9100:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9112:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9123:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9108:3:21"},"nodeType":"YulFunctionCall","src":"9108:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9100:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9180:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9193:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9204:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9189:3:21"},"nodeType":"YulFunctionCall","src":"9189:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9136:43:21"},"nodeType":"YulFunctionCall","src":"9136:71:21"},"nodeType":"YulExpressionStatement","src":"9136:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9062:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9074:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9085:4:21","type":""}],"src":"8992:222:21"},{"body":{"nodeType":"YulBlock","src":"9263:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"9320:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9329:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9332:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9322:6:21"},"nodeType":"YulFunctionCall","src":"9322:12:21"},"nodeType":"YulExpressionStatement","src":"9322:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9286:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9311:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9293:17:21"},"nodeType":"YulFunctionCall","src":"9293:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9283:2:21"},"nodeType":"YulFunctionCall","src":"9283:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9276:6:21"},"nodeType":"YulFunctionCall","src":"9276:43:21"},"nodeType":"YulIf","src":"9273:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9256:5:21","type":""}],"src":"9220:122:21"},{"body":{"nodeType":"YulBlock","src":"9400:87:21","statements":[{"nodeType":"YulAssignment","src":"9410:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9432:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9419:12:21"},"nodeType":"YulFunctionCall","src":"9419:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9410:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9475:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"9448:26:21"},"nodeType":"YulFunctionCall","src":"9448:33:21"},"nodeType":"YulExpressionStatement","src":"9448:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9378:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9386:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9394:5:21","type":""}],"src":"9348:139:21"},{"body":{"nodeType":"YulBlock","src":"9559:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"9605:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9607:77:21"},"nodeType":"YulFunctionCall","src":"9607:79:21"},"nodeType":"YulExpressionStatement","src":"9607:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9580:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9589:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9576:3:21"},"nodeType":"YulFunctionCall","src":"9576:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9601:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9572:3:21"},"nodeType":"YulFunctionCall","src":"9572:32:21"},"nodeType":"YulIf","src":"9569:119:21"},{"nodeType":"YulBlock","src":"9698:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9713:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9727:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9717:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9742:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9777:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9788:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9773:3:21"},"nodeType":"YulFunctionCall","src":"9773:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9797:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9752:20:21"},"nodeType":"YulFunctionCall","src":"9752:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9742:6:21"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9529:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9540:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9552:6:21","type":""}],"src":"9493:329:21"},{"body":{"nodeType":"YulBlock","src":"9924:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9941:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9946:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9934:6:21"},"nodeType":"YulFunctionCall","src":"9934:19:21"},"nodeType":"YulExpressionStatement","src":"9934:19:21"},{"nodeType":"YulAssignment","src":"9962:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9986:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9977:3:21"},"nodeType":"YulFunctionCall","src":"9977:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9962:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9896:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"9901:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9912:11:21","type":""}],"src":"9828:169:21"},{"body":{"nodeType":"YulBlock","src":"10109:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10131:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10139:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10127:3:21"},"nodeType":"YulFunctionCall","src":"10127:14:21"},{"hexValue":"4d656d6f7269616c3a206e6f7420666f756e64","kind":"string","nodeType":"YulLiteral","src":"10143:21:21","type":"","value":"Memorial: not found"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10120:6:21"},"nodeType":"YulFunctionCall","src":"10120:45:21"},"nodeType":"YulExpressionStatement","src":"10120:45:21"}]},"name":"store_literal_in_memory_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10101:6:21","type":""}],"src":"10003:169:21"},{"body":{"nodeType":"YulBlock","src":"10324:220:21","statements":[{"nodeType":"YulAssignment","src":"10334:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10400:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10405:2:21","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10341:58:21"},"nodeType":"YulFunctionCall","src":"10341:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10334:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10506:3:21"}],"functionName":{"name":"store_literal_in_memory_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94","nodeType":"YulIdentifier","src":"10417:88:21"},"nodeType":"YulFunctionCall","src":"10417:93:21"},"nodeType":"YulExpressionStatement","src":"10417:93:21"},{"nodeType":"YulAssignment","src":"10519:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10530:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10535:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10526:3:21"},"nodeType":"YulFunctionCall","src":"10526:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10519:3:21"}]}]},"name":"abi_encode_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10312:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10320:3:21","type":""}],"src":"10178:366:21"},{"body":{"nodeType":"YulBlock","src":"10721:248:21","statements":[{"nodeType":"YulAssignment","src":"10731:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10743:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10754:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10739:3:21"},"nodeType":"YulFunctionCall","src":"10739:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10731:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10778:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10789:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10774:3:21"},"nodeType":"YulFunctionCall","src":"10774:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10797:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10803:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10793:3:21"},"nodeType":"YulFunctionCall","src":"10793:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10767:6:21"},"nodeType":"YulFunctionCall","src":"10767:47:21"},"nodeType":"YulExpressionStatement","src":"10767:47:21"},{"nodeType":"YulAssignment","src":"10823:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10957:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10831:124:21"},"nodeType":"YulFunctionCall","src":"10831:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10823:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10701:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10716:4:21","type":""}],"src":"10550:419:21"},{"body":{"nodeType":"YulBlock","src":"11003:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11020:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11023:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11013:6:21"},"nodeType":"YulFunctionCall","src":"11013:88:21"},"nodeType":"YulExpressionStatement","src":"11013:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11117:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11120:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11110:6:21"},"nodeType":"YulFunctionCall","src":"11110:15:21"},"nodeType":"YulExpressionStatement","src":"11110:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11141:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11144:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11134:6:21"},"nodeType":"YulFunctionCall","src":"11134:15:21"},"nodeType":"YulExpressionStatement","src":"11134:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"10975:180:21"},{"body":{"nodeType":"YulBlock","src":"11206:149:21","statements":[{"nodeType":"YulAssignment","src":"11216:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11239:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11221:17:21"},"nodeType":"YulFunctionCall","src":"11221:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11216:1:21"}]},{"nodeType":"YulAssignment","src":"11250:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11273:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11255:17:21"},"nodeType":"YulFunctionCall","src":"11255:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11250:1:21"}]},{"nodeType":"YulAssignment","src":"11284:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11296:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"11299:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11292:3:21"},"nodeType":"YulFunctionCall","src":"11292:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"11284:4:21"}]},{"body":{"nodeType":"YulBlock","src":"11326:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"11328:16:21"},"nodeType":"YulFunctionCall","src":"11328:18:21"},"nodeType":"YulExpressionStatement","src":"11328:18:21"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"11317:4:21"},{"name":"x","nodeType":"YulIdentifier","src":"11323:1:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11314:2:21"},"nodeType":"YulFunctionCall","src":"11314:11:21"},"nodeType":"YulIf","src":"11311:37:21"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11192:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"11195:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11201:4:21","type":""}],"src":"11161:194:21"},{"body":{"nodeType":"YulBlock","src":"11389:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11406:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11409:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11399:6:21"},"nodeType":"YulFunctionCall","src":"11399:88:21"},"nodeType":"YulExpressionStatement","src":"11399:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11503:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11506:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11496:6:21"},"nodeType":"YulFunctionCall","src":"11496:15:21"},"nodeType":"YulExpressionStatement","src":"11496:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11527:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11530:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11520:6:21"},"nodeType":"YulFunctionCall","src":"11520:15:21"},"nodeType":"YulExpressionStatement","src":"11520:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"11361:180:21"},{"body":{"nodeType":"YulBlock","src":"11575:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11592:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11595:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11585:6:21"},"nodeType":"YulFunctionCall","src":"11585:88:21"},"nodeType":"YulExpressionStatement","src":"11585:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11689:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11692:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11682:6:21"},"nodeType":"YulFunctionCall","src":"11682:15:21"},"nodeType":"YulExpressionStatement","src":"11682:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11713:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11716:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11706:6:21"},"nodeType":"YulFunctionCall","src":"11706:15:21"},"nodeType":"YulExpressionStatement","src":"11706:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"11547:180:21"},{"body":{"nodeType":"YulBlock","src":"11784:269:21","statements":[{"nodeType":"YulAssignment","src":"11794:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11808:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"11814:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"11804:3:21"},"nodeType":"YulFunctionCall","src":"11804:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11794:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"11825:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11855:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"11861:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11851:3:21"},"nodeType":"YulFunctionCall","src":"11851:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"11829:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11902:51:21","statements":[{"nodeType":"YulAssignment","src":"11916:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11930:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11938:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11926:3:21"},"nodeType":"YulFunctionCall","src":"11926:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11916:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11882:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11875:6:21"},"nodeType":"YulFunctionCall","src":"11875:26:21"},"nodeType":"YulIf","src":"11872:81:21"},{"body":{"nodeType":"YulBlock","src":"12005:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"12019:16:21"},"nodeType":"YulFunctionCall","src":"12019:18:21"},"nodeType":"YulExpressionStatement","src":"12019:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"11969:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11992:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12000:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11989:2:21"},"nodeType":"YulFunctionCall","src":"11989:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11966:2:21"},"nodeType":"YulFunctionCall","src":"11966:38:21"},"nodeType":"YulIf","src":"11963:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11768:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11777:6:21","type":""}],"src":"11733:320:21"},{"body":{"nodeType":"YulBlock","src":"12165:62:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12187:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12195:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12183:3:21"},"nodeType":"YulFunctionCall","src":"12183:14:21"},{"hexValue":"4d656d6f7269616c206973206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"12199:20:21","type":"","value":"Memorial is locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12176:6:21"},"nodeType":"YulFunctionCall","src":"12176:44:21"},"nodeType":"YulExpressionStatement","src":"12176:44:21"}]},"name":"store_literal_in_memory_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12157:6:21","type":""}],"src":"12059:168:21"},{"body":{"nodeType":"YulBlock","src":"12379:220:21","statements":[{"nodeType":"YulAssignment","src":"12389:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12455:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12460:2:21","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12396:58:21"},"nodeType":"YulFunctionCall","src":"12396:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12389:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12561:3:21"}],"functionName":{"name":"store_literal_in_memory_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3","nodeType":"YulIdentifier","src":"12472:88:21"},"nodeType":"YulFunctionCall","src":"12472:93:21"},"nodeType":"YulExpressionStatement","src":"12472:93:21"},{"nodeType":"YulAssignment","src":"12574:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12585:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12590:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12581:3:21"},"nodeType":"YulFunctionCall","src":"12581:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12574:3:21"}]}]},"name":"abi_encode_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12367:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12375:3:21","type":""}],"src":"12233:366:21"},{"body":{"nodeType":"YulBlock","src":"12776:248:21","statements":[{"nodeType":"YulAssignment","src":"12786:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12798:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12809:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12794:3:21"},"nodeType":"YulFunctionCall","src":"12794:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12786:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12833:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12844:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12829:3:21"},"nodeType":"YulFunctionCall","src":"12829:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12852:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12858:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12848:3:21"},"nodeType":"YulFunctionCall","src":"12848:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12822:6:21"},"nodeType":"YulFunctionCall","src":"12822:47:21"},"nodeType":"YulExpressionStatement","src":"12822:47:21"},{"nodeType":"YulAssignment","src":"12878:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13012:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12886:124:21"},"nodeType":"YulFunctionCall","src":"12886:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12878:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12756:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12771:4:21","type":""}],"src":"12605:419:21"},{"body":{"nodeType":"YulBlock","src":"13136:58:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13158:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13166:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13154:3:21"},"nodeType":"YulFunctionCall","src":"13154:14:21"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"13170:16:21","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13147:6:21"},"nodeType":"YulFunctionCall","src":"13147:40:21"},"nodeType":"YulExpressionStatement","src":"13147:40:21"}]},"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13128:6:21","type":""}],"src":"13030:164:21"},{"body":{"nodeType":"YulBlock","src":"13346:220:21","statements":[{"nodeType":"YulAssignment","src":"13356:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13422:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13427:2:21","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13363:58:21"},"nodeType":"YulFunctionCall","src":"13363:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13356:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13528:3:21"}],"functionName":{"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulIdentifier","src":"13439:88:21"},"nodeType":"YulFunctionCall","src":"13439:93:21"},"nodeType":"YulExpressionStatement","src":"13439:93:21"},{"nodeType":"YulAssignment","src":"13541:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13552:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13557:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13548:3:21"},"nodeType":"YulFunctionCall","src":"13548:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13541:3:21"}]}]},"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13334:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13342:3:21","type":""}],"src":"13200:366:21"},{"body":{"nodeType":"YulBlock","src":"13743:248:21","statements":[{"nodeType":"YulAssignment","src":"13753:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13776:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13761:3:21"},"nodeType":"YulFunctionCall","src":"13761:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13753:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13811:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13796:3:21"},"nodeType":"YulFunctionCall","src":"13796:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13819:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13825:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13815:3:21"},"nodeType":"YulFunctionCall","src":"13815:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13789:6:21"},"nodeType":"YulFunctionCall","src":"13789:47:21"},"nodeType":"YulExpressionStatement","src":"13789:47:21"},{"nodeType":"YulAssignment","src":"13845:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13979:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13853:124:21"},"nodeType":"YulFunctionCall","src":"13853:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13845:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13723:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13738:4:21","type":""}],"src":"13572:419:21"},{"body":{"nodeType":"YulBlock","src":"14103:56:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14125:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14133:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14121:3:21"},"nodeType":"YulFunctionCall","src":"14121:14:21"},{"hexValue":"496e76616c69642068617368","kind":"string","nodeType":"YulLiteral","src":"14137:14:21","type":"","value":"Invalid hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14114:6:21"},"nodeType":"YulFunctionCall","src":"14114:38:21"},"nodeType":"YulExpressionStatement","src":"14114:38:21"}]},"name":"store_literal_in_memory_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14095:6:21","type":""}],"src":"13997:162:21"},{"body":{"nodeType":"YulBlock","src":"14311:220:21","statements":[{"nodeType":"YulAssignment","src":"14321:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14387:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14392:2:21","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14328:58:21"},"nodeType":"YulFunctionCall","src":"14328:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14321:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14493:3:21"}],"functionName":{"name":"store_literal_in_memory_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415","nodeType":"YulIdentifier","src":"14404:88:21"},"nodeType":"YulFunctionCall","src":"14404:93:21"},"nodeType":"YulExpressionStatement","src":"14404:93:21"},{"nodeType":"YulAssignment","src":"14506:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14517:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14522:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14513:3:21"},"nodeType":"YulFunctionCall","src":"14513:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14506:3:21"}]}]},"name":"abi_encode_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14299:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14307:3:21","type":""}],"src":"14165:366:21"},{"body":{"nodeType":"YulBlock","src":"14708:248:21","statements":[{"nodeType":"YulAssignment","src":"14718:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14730:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14741:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14726:3:21"},"nodeType":"YulFunctionCall","src":"14726:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14718:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14765:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14776:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14761:3:21"},"nodeType":"YulFunctionCall","src":"14761:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14784:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14790:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14780:3:21"},"nodeType":"YulFunctionCall","src":"14780:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14754:6:21"},"nodeType":"YulFunctionCall","src":"14754:47:21"},"nodeType":"YulExpressionStatement","src":"14754:47:21"},{"nodeType":"YulAssignment","src":"14810:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14944:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14818:124:21"},"nodeType":"YulFunctionCall","src":"14818:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14810:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14688:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14703:4:21","type":""}],"src":"14537:419:21"},{"body":{"nodeType":"YulBlock","src":"15068:55:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15090:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15098:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15086:3:21"},"nodeType":"YulFunctionCall","src":"15086:14:21"},{"hexValue":"496e76616c696420555249","kind":"string","nodeType":"YulLiteral","src":"15102:13:21","type":"","value":"Invalid URI"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15079:6:21"},"nodeType":"YulFunctionCall","src":"15079:37:21"},"nodeType":"YulExpressionStatement","src":"15079:37:21"}]},"name":"store_literal_in_memory_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15060:6:21","type":""}],"src":"14962:161:21"},{"body":{"nodeType":"YulBlock","src":"15275:220:21","statements":[{"nodeType":"YulAssignment","src":"15285:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15351:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15356:2:21","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15292:58:21"},"nodeType":"YulFunctionCall","src":"15292:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15285:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15457:3:21"}],"functionName":{"name":"store_literal_in_memory_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048","nodeType":"YulIdentifier","src":"15368:88:21"},"nodeType":"YulFunctionCall","src":"15368:93:21"},"nodeType":"YulExpressionStatement","src":"15368:93:21"},{"nodeType":"YulAssignment","src":"15470:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15481:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15486:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15477:3:21"},"nodeType":"YulFunctionCall","src":"15477:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15470:3:21"}]}]},"name":"abi_encode_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15263:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15271:3:21","type":""}],"src":"15129:366:21"},{"body":{"nodeType":"YulBlock","src":"15672:248:21","statements":[{"nodeType":"YulAssignment","src":"15682:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15694:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15705:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15690:3:21"},"nodeType":"YulFunctionCall","src":"15690:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15682:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15729:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15740:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15725:3:21"},"nodeType":"YulFunctionCall","src":"15725:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15748:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15754:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15744:3:21"},"nodeType":"YulFunctionCall","src":"15744:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15718:6:21"},"nodeType":"YulFunctionCall","src":"15718:47:21"},"nodeType":"YulExpressionStatement","src":"15718:47:21"},{"nodeType":"YulAssignment","src":"15774:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15908:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15782:124:21"},"nodeType":"YulFunctionCall","src":"15782:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15774:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15652:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15667:4:21","type":""}],"src":"15501:419:21"},{"body":{"nodeType":"YulBlock","src":"15954:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15971:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15974:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15964:6:21"},"nodeType":"YulFunctionCall","src":"15964:88:21"},"nodeType":"YulExpressionStatement","src":"15964:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16068:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16071:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16061:6:21"},"nodeType":"YulFunctionCall","src":"16061:15:21"},"nodeType":"YulExpressionStatement","src":"16061:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16092:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16095:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16085:6:21"},"nodeType":"YulFunctionCall","src":"16085:15:21"},"nodeType":"YulExpressionStatement","src":"16085:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"15926:180:21"},{"body":{"nodeType":"YulBlock","src":"16166:87:21","statements":[{"nodeType":"YulAssignment","src":"16176:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"16184:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16176:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16204:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"16207:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16197:6:21"},"nodeType":"YulFunctionCall","src":"16197:14:21"},"nodeType":"YulExpressionStatement","src":"16197:14:21"},{"nodeType":"YulAssignment","src":"16220:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16238:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16241:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"16228:9:21"},"nodeType":"YulFunctionCall","src":"16228:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"16220:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"16153:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"16161:4:21","type":""}],"src":"16112:141:21"},{"body":{"nodeType":"YulBlock","src":"16303:49:21","statements":[{"nodeType":"YulAssignment","src":"16313:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16331:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"16338:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16327:3:21"},"nodeType":"YulFunctionCall","src":"16327:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"16343:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"16323:3:21"},"nodeType":"YulFunctionCall","src":"16323:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16313:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16286:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16296:6:21","type":""}],"src":"16259:93:21"},{"body":{"nodeType":"YulBlock","src":"16411:54:21","statements":[{"nodeType":"YulAssignment","src":"16421:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"16446:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"16452:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16442:3:21"},"nodeType":"YulFunctionCall","src":"16442:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"16421:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"16386:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"16392:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"16402:8:21","type":""}],"src":"16358:107:21"},{"body":{"nodeType":"YulBlock","src":"16547:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16557:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"16578:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"16590:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16574:3:21"},"nodeType":"YulFunctionCall","src":"16574:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"16561:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16601:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"16632:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16643:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"16613:18:21"},"nodeType":"YulFunctionCall","src":"16613:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"16605:4:21","type":""}]},{"nodeType":"YulAssignment","src":"16719:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"16750:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"16761:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"16731:18:21"},"nodeType":"YulFunctionCall","src":"16731:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"16719:8:21"}]},{"nodeType":"YulAssignment","src":"16779:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16792:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"16803:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"16799:3:21"},"nodeType":"YulFunctionCall","src":"16799:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16788:3:21"},"nodeType":"YulFunctionCall","src":"16788:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16779:5:21"}]},{"nodeType":"YulAssignment","src":"16818:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16831:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"16842:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"16852:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16838:3:21"},"nodeType":"YulFunctionCall","src":"16838:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16828:2:21"},"nodeType":"YulFunctionCall","src":"16828:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16818:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16508:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"16515:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"16527:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"16540:6:21","type":""}],"src":"16471:393:21"},{"body":{"nodeType":"YulBlock","src":"16902:28:21","statements":[{"nodeType":"YulAssignment","src":"16912:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"16919:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16912:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16888:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16898:3:21","type":""}],"src":"16870:60:21"},{"body":{"nodeType":"YulBlock","src":"16996:82:21","statements":[{"nodeType":"YulAssignment","src":"17006:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17064:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17046:17:21"},"nodeType":"YulFunctionCall","src":"17046:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"17037:8:21"},"nodeType":"YulFunctionCall","src":"17037:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17019:17:21"},"nodeType":"YulFunctionCall","src":"17019:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"17006:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16976:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"16986:9:21","type":""}],"src":"16936:142:21"},{"body":{"nodeType":"YulBlock","src":"17131:28:21","statements":[{"nodeType":"YulAssignment","src":"17141:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"17148:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17141:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17117:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17127:3:21","type":""}],"src":"17084:75:21"},{"body":{"nodeType":"YulBlock","src":"17241:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17251:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"17306:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17275:30:21"},"nodeType":"YulFunctionCall","src":"17275:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"17255:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17330:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17370:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"17364:5:21"},"nodeType":"YulFunctionCall","src":"17364:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17377:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"17409:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"17385:23:21"},"nodeType":"YulFunctionCall","src":"17385:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"17336:27:21"},"nodeType":"YulFunctionCall","src":"17336:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17323:6:21"},"nodeType":"YulFunctionCall","src":"17323:105:21"},"nodeType":"YulExpressionStatement","src":"17323:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17218:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"17224:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"17232:7:21","type":""}],"src":"17165:269:21"},{"body":{"nodeType":"YulBlock","src":"17489:24:21","statements":[{"nodeType":"YulAssignment","src":"17499:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17506:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"17499:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"17485:3:21","type":""}],"src":"17440:73:21"},{"body":{"nodeType":"YulBlock","src":"17572:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17582:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"17596:30:21"},"nodeType":"YulFunctionCall","src":"17596:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"17586:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"17681:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17687:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"17695:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"17637:43:21"},"nodeType":"YulFunctionCall","src":"17637:65:21"},"nodeType":"YulExpressionStatement","src":"17637:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"17558:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"17564:6:21","type":""}],"src":"17519:189:21"},{"body":{"nodeType":"YulBlock","src":"17764:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"17831:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17875:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17882:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"17845:29:21"},"nodeType":"YulFunctionCall","src":"17845:39:21"},"nodeType":"YulExpressionStatement","src":"17845:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17784:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"17791:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17781:2:21"},"nodeType":"YulFunctionCall","src":"17781:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17796:26:21","statements":[{"nodeType":"YulAssignment","src":"17798:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17811:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17818:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17807:3:21"},"nodeType":"YulFunctionCall","src":"17807:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"17798:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"17778:2:21","statements":[]},"src":"17774:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17752:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"17759:3:21","type":""}],"src":"17714:186:21"},{"body":{"nodeType":"YulBlock","src":"17985:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"18011:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18025:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18073:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"18041:31:21"},"nodeType":"YulFunctionCall","src":"18041:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"18029:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18092:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18115:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18143:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18125:17:21"},"nodeType":"YulFunctionCall","src":"18125:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18111:3:21"},"nodeType":"YulFunctionCall","src":"18111:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"18096:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"18312:27:21","statements":[{"nodeType":"YulAssignment","src":"18314:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"18329:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18314:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"18296:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"18308:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18293:2:21"},"nodeType":"YulFunctionCall","src":"18293:18:21"},"nodeType":"YulIf","src":"18290:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"18381:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"18398:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18426:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"18408:17:21"},"nodeType":"YulFunctionCall","src":"18408:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18394:3:21"},"nodeType":"YulFunctionCall","src":"18394:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"18352:28:21"},"nodeType":"YulFunctionCall","src":"18352:80:21"},"nodeType":"YulExpressionStatement","src":"18352:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"18002:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18007:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17999:2:21"},"nodeType":"YulFunctionCall","src":"17999:11:21"},"nodeType":"YulIf","src":"17996:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"17961:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"17968:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"17973:10:21","type":""}],"src":"17906:543:21"},{"body":{"nodeType":"YulBlock","src":"18518:54:21","statements":[{"nodeType":"YulAssignment","src":"18528:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"18553:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"18559:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18549:3:21"},"nodeType":"YulFunctionCall","src":"18549:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"18528:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"18493:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"18499:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"18509:8:21","type":""}],"src":"18455:117:21"},{"body":{"nodeType":"YulBlock","src":"18629:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18639:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18688:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"18691:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"18684:3:21"},"nodeType":"YulFunctionCall","src":"18684:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18703:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18699:3:21"},"nodeType":"YulFunctionCall","src":"18699:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"18655:28:21"},"nodeType":"YulFunctionCall","src":"18655:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18651:3:21"},"nodeType":"YulFunctionCall","src":"18651:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"18643:4:21","type":""}]},{"nodeType":"YulAssignment","src":"18716:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18730:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"18736:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"18726:3:21"},"nodeType":"YulFunctionCall","src":"18726:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18716:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18606:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"18612:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"18622:6:21","type":""}],"src":"18578:169:21"},{"body":{"nodeType":"YulBlock","src":"18833:214:21","statements":[{"nodeType":"YulAssignment","src":"18966:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"18993:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"18999:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"18974:18:21"},"nodeType":"YulFunctionCall","src":"18974:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"18966:4:21"}]},{"nodeType":"YulAssignment","src":"19012:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"19023:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19033:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"19036:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19029:3:21"},"nodeType":"YulFunctionCall","src":"19029:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"19020:2:21"},"nodeType":"YulFunctionCall","src":"19020:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"19012:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"18814:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"18820:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"18828:4:21","type":""}],"src":"18752:295:21"},{"body":{"nodeType":"YulBlock","src":"19144:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19155:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19202:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19169:32:21"},"nodeType":"YulFunctionCall","src":"19169:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"19159:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"19291:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"19293:16:21"},"nodeType":"YulFunctionCall","src":"19293:18:21"},"nodeType":"YulExpressionStatement","src":"19293:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19263:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19271:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19260:2:21"},"nodeType":"YulFunctionCall","src":"19260:30:21"},"nodeType":"YulIf","src":"19257:56:21"},{"nodeType":"YulVariableDeclaration","src":"19323:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19369:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"19363:5:21"},"nodeType":"YulFunctionCall","src":"19363:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"19337:25:21"},"nodeType":"YulFunctionCall","src":"19337:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"19327:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19468:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"19474:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"19482:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"19422:45:21"},"nodeType":"YulFunctionCall","src":"19422:67:21"},"nodeType":"YulExpressionStatement","src":"19422:67:21"},{"nodeType":"YulVariableDeclaration","src":"19499:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19516:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"19503:9:21","type":""}]},{"nodeType":"YulAssignment","src":"19527:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19540:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19527:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"19591:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19605:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19624:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19636:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19632:3:21"},"nodeType":"YulFunctionCall","src":"19632:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19620:3:21"},"nodeType":"YulFunctionCall","src":"19620:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"19609:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19656:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"19702:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"19670:31:21"},"nodeType":"YulFunctionCall","src":"19670:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"19660:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19720:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19729:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19724:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"19788:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19813:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19831:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"19836:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19827:3:21"},"nodeType":"YulFunctionCall","src":"19827:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19821:5:21"},"nodeType":"YulFunctionCall","src":"19821:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"19806:6:21"},"nodeType":"YulFunctionCall","src":"19806:42:21"},"nodeType":"YulExpressionStatement","src":"19806:42:21"},{"nodeType":"YulAssignment","src":"19865:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19879:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19887:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19875:3:21"},"nodeType":"YulFunctionCall","src":"19875:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"19865:6:21"}]},{"nodeType":"YulAssignment","src":"19906:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19923:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19934:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19919:3:21"},"nodeType":"YulFunctionCall","src":"19919:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"19906:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19754:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"19757:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19751:2:21"},"nodeType":"YulFunctionCall","src":"19751:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"19766:21:21","statements":[{"nodeType":"YulAssignment","src":"19768:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"19777:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"19780:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19773:3:21"},"nodeType":"YulFunctionCall","src":"19773:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"19768:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"19747:3:21","statements":[]},"src":"19743:208:21"},{"body":{"nodeType":"YulBlock","src":"19987:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20005:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20032:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20037:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20028:3:21"},"nodeType":"YulFunctionCall","src":"20028:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20022:5:21"},"nodeType":"YulFunctionCall","src":"20022:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"20009:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"20072:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"20099:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20114:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20122:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20110:3:21"},"nodeType":"YulFunctionCall","src":"20110:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"20080:18:21"},"nodeType":"YulFunctionCall","src":"20080:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20065:6:21"},"nodeType":"YulFunctionCall","src":"20065:64:21"},"nodeType":"YulExpressionStatement","src":"20065:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"19970:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"19979:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19967:2:21"},"nodeType":"YulFunctionCall","src":"19967:19:21"},"nodeType":"YulIf","src":"19964:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20163:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"20177:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20185:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"20173:3:21"},"nodeType":"YulFunctionCall","src":"20173:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"20189:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20169:3:21"},"nodeType":"YulFunctionCall","src":"20169:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20156:6:21"},"nodeType":"YulFunctionCall","src":"20156:36:21"},"nodeType":"YulExpressionStatement","src":"20156:36:21"}]},"nodeType":"YulCase","src":"19584:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19589:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"20219:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20233:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20246:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20237:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20270:67:21","statements":[{"nodeType":"YulAssignment","src":"20288:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"20307:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"20312:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20303:3:21"},"nodeType":"YulFunctionCall","src":"20303:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20297:5:21"},"nodeType":"YulFunctionCall","src":"20297:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20288:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"20263:6:21"},"nodeType":"YulIf","src":"20260:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20357:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20416:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"20423:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"20363:52:21"},"nodeType":"YulFunctionCall","src":"20363:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20350:6:21"},"nodeType":"YulFunctionCall","src":"20350:81:21"},"nodeType":"YulExpressionStatement","src":"20350:81:21"}]},"nodeType":"YulCase","src":"20211:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"19564:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19572:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19561:2:21"},"nodeType":"YulFunctionCall","src":"19561:14:21"},"nodeType":"YulSwitch","src":"19554:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"19133:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"19139:3:21","type":""}],"src":"19052:1395:21"},{"body":{"nodeType":"YulBlock","src":"20518:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20535:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20558:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"20540:17:21"},"nodeType":"YulFunctionCall","src":"20540:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20528:6:21"},"nodeType":"YulFunctionCall","src":"20528:37:21"},"nodeType":"YulExpressionStatement","src":"20528:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20506:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20513:3:21","type":""}],"src":"20453:118:21"},{"body":{"nodeType":"YulBlock","src":"20641:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20664:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"20669:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20674:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"20651:12:21"},"nodeType":"YulFunctionCall","src":"20651:30:21"},"nodeType":"YulExpressionStatement","src":"20651:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"20701:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20706:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20697:3:21"},"nodeType":"YulFunctionCall","src":"20697:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"20715:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20690:6:21"},"nodeType":"YulFunctionCall","src":"20690:27:21"},"nodeType":"YulExpressionStatement","src":"20690:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"20623:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"20628:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"20633:6:21","type":""}],"src":"20577:146:21"},{"body":{"nodeType":"YulBlock","src":"20855:215:21","statements":[{"nodeType":"YulAssignment","src":"20865:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20931:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"20936:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20872:58:21"},"nodeType":"YulFunctionCall","src":"20872:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20865:3:21"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"20990:5:21"},{"name":"pos","nodeType":"YulIdentifier","src":"20997:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21002:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"20953:36:21"},"nodeType":"YulFunctionCall","src":"20953:56:21"},"nodeType":"YulExpressionStatement","src":"20953:56:21"},{"nodeType":"YulAssignment","src":"21018:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21029:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21056:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21034:21:21"},"nodeType":"YulFunctionCall","src":"21034:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21025:3:21"},"nodeType":"YulFunctionCall","src":"21025:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21018:3:21"}]}]},"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"20828:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"20835:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20843:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20851:3:21","type":""}],"src":"20753:317:21"},{"body":{"nodeType":"YulBlock","src":"21135:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21152:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21172:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"21157:14:21"},"nodeType":"YulFunctionCall","src":"21157:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21145:6:21"},"nodeType":"YulFunctionCall","src":"21145:34:21"},"nodeType":"YulExpressionStatement","src":"21145:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21123:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21130:3:21","type":""}],"src":"21076:109:21"},{"body":{"nodeType":"YulBlock","src":"21369:363:21","statements":[{"nodeType":"YulAssignment","src":"21379:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21391:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21402:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21387:3:21"},"nodeType":"YulFunctionCall","src":"21387:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21379:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21459:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21472:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21483:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21468:3:21"},"nodeType":"YulFunctionCall","src":"21468:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"21415:43:21"},"nodeType":"YulFunctionCall","src":"21415:71:21"},"nodeType":"YulExpressionStatement","src":"21415:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21507:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21518:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21503:3:21"},"nodeType":"YulFunctionCall","src":"21503:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21527:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21533:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21523:3:21"},"nodeType":"YulFunctionCall","src":"21523:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21496:6:21"},"nodeType":"YulFunctionCall","src":"21496:48:21"},"nodeType":"YulExpressionStatement","src":"21496:48:21"},{"nodeType":"YulAssignment","src":"21553:96:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21627:6:21"},{"name":"value2","nodeType":"YulIdentifier","src":"21635:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"21644:4:21"}],"functionName":{"name":"abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21561:65:21"},"nodeType":"YulFunctionCall","src":"21561:88:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21553:4:21"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21697:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21710:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21721:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21706:3:21"},"nodeType":"YulFunctionCall","src":"21706:18:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"21659:37:21"},"nodeType":"YulFunctionCall","src":"21659:66:21"},"nodeType":"YulExpressionStatement","src":"21659:66:21"}]},"name":"abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_bool__to_t_bytes32_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21317:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21329:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21337:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21345:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21353:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21364:4:21","type":""}],"src":"21191:541:21"},{"body":{"nodeType":"YulBlock","src":"21781:190:21","statements":[{"nodeType":"YulAssignment","src":"21791:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21818:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21800:17:21"},"nodeType":"YulFunctionCall","src":"21800:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21791:5:21"}]},{"body":{"nodeType":"YulBlock","src":"21914:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21916:16:21"},"nodeType":"YulFunctionCall","src":"21916:18:21"},"nodeType":"YulExpressionStatement","src":"21916:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21839:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21846:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21836:2:21"},"nodeType":"YulFunctionCall","src":"21836:77:21"},"nodeType":"YulIf","src":"21833:103:21"},{"nodeType":"YulAssignment","src":"21945:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21956:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21963:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21952:3:21"},"nodeType":"YulFunctionCall","src":"21952:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21945:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21767:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21777:3:21","type":""}],"src":"21738:233:21"},{"body":{"nodeType":"YulBlock","src":"22083:55:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22105:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22101:3:21"},"nodeType":"YulFunctionCall","src":"22101:14:21"},{"hexValue":"4261642076657273696f6e","kind":"string","nodeType":"YulLiteral","src":"22117:13:21","type":"","value":"Bad version"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22094:6:21"},"nodeType":"YulFunctionCall","src":"22094:37:21"},"nodeType":"YulExpressionStatement","src":"22094:37:21"}]},"name":"store_literal_in_memory_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22075:6:21","type":""}],"src":"21977:161:21"},{"body":{"nodeType":"YulBlock","src":"22290:220:21","statements":[{"nodeType":"YulAssignment","src":"22300:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22366:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22371:2:21","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22307:58:21"},"nodeType":"YulFunctionCall","src":"22307:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22300:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22472:3:21"}],"functionName":{"name":"store_literal_in_memory_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0","nodeType":"YulIdentifier","src":"22383:88:21"},"nodeType":"YulFunctionCall","src":"22383:93:21"},"nodeType":"YulExpressionStatement","src":"22383:93:21"},{"nodeType":"YulAssignment","src":"22485:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22496:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22501:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22492:3:21"},"nodeType":"YulFunctionCall","src":"22492:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22485:3:21"}]}]},"name":"abi_encode_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22278:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22286:3:21","type":""}],"src":"22144:366:21"},{"body":{"nodeType":"YulBlock","src":"22687:248:21","statements":[{"nodeType":"YulAssignment","src":"22697:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22709:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22720:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22705:3:21"},"nodeType":"YulFunctionCall","src":"22705:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22697:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22744:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22755:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22740:3:21"},"nodeType":"YulFunctionCall","src":"22740:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22763:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22769:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22759:3:21"},"nodeType":"YulFunctionCall","src":"22759:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22733:6:21"},"nodeType":"YulFunctionCall","src":"22733:47:21"},"nodeType":"YulExpressionStatement","src":"22733:47:21"},{"nodeType":"YulAssignment","src":"22789:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22923:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22797:124:21"},"nodeType":"YulFunctionCall","src":"22797:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22789:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22667:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22682:4:21","type":""}],"src":"22516:419:21"},{"body":{"nodeType":"YulBlock","src":"23047:58:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23069:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23077:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23065:3:21"},"nodeType":"YulFunctionCall","src":"23065:14:21"},{"hexValue":"416c7265616479206c6f636b6564","kind":"string","nodeType":"YulLiteral","src":"23081:16:21","type":"","value":"Already locked"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23058:6:21"},"nodeType":"YulFunctionCall","src":"23058:40:21"},"nodeType":"YulExpressionStatement","src":"23058:40:21"}]},"name":"store_literal_in_memory_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23039:6:21","type":""}],"src":"22941:164:21"},{"body":{"nodeType":"YulBlock","src":"23257:220:21","statements":[{"nodeType":"YulAssignment","src":"23267:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23333:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23338:2:21","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23274:58:21"},"nodeType":"YulFunctionCall","src":"23274:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23267:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23439:3:21"}],"functionName":{"name":"store_literal_in_memory_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6","nodeType":"YulIdentifier","src":"23350:88:21"},"nodeType":"YulFunctionCall","src":"23350:93:21"},"nodeType":"YulExpressionStatement","src":"23350:93:21"},{"nodeType":"YulAssignment","src":"23452:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23463:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23468:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23459:3:21"},"nodeType":"YulFunctionCall","src":"23459:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23452:3:21"}]}]},"name":"abi_encode_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23245:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23253:3:21","type":""}],"src":"23111:366:21"},{"body":{"nodeType":"YulBlock","src":"23654:248:21","statements":[{"nodeType":"YulAssignment","src":"23664:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23676:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23687:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23672:3:21"},"nodeType":"YulFunctionCall","src":"23672:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23664:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23711:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23722:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23707:3:21"},"nodeType":"YulFunctionCall","src":"23707:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23730:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23736:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23726:3:21"},"nodeType":"YulFunctionCall","src":"23726:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23700:6:21"},"nodeType":"YulFunctionCall","src":"23700:47:21"},"nodeType":"YulExpressionStatement","src":"23700:47:21"},{"nodeType":"YulAssignment","src":"23756:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23890:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23764:124:21"},"nodeType":"YulFunctionCall","src":"23764:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23756:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23634:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23649:4:21","type":""}],"src":"23483:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct MemorialRegistry.Record -> struct MemorialRegistry.Record\n    function abi_encode_t_struct$_Record_$6701_memory_ptr_to_t_struct$_Record_$6701_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // contentHash\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // storageURI\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // publisher\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // locked\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Record_$6701_memory_ptr__to_t_struct$_Record_$6701_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Record_$6701_memory_ptr_to_t_struct$_Record_$6701_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_string_calldata_ptrt_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94(memPtr) {\n\n        mstore(add(memPtr, 0), \"Memorial: not found\")\n\n    }\n\n    function abi_encode_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a1cf737405e22a1e45f4c6e09fc3eed9ddb1c738442f6daa8cafb89ba5ac4b94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Memorial is locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_79610a580741ec96c4fb682de39eaa8bee952f66c2e671c1eecdb1d9be8eefc3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_221bd5754386c95752ab74f7e97227ba4816d3932c45cd8849529fe0a0a91415_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid URI\")\n\n    }\n\n    function abi_encode_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d05717237358da7dfbe50241bee0d33b39b4eb2e839a02f822c943dbe2875048_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    // string -> string\n    function abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_string_calldata_ptr_t_bool__to_t_bytes32_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_calldata_ptr_to_t_string_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bad version\")\n\n    }\n\n    function abi_encode_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b1eb4c98cb612b42b5761ea8c1f3be4f39f7d613dc0c6f47e39a4a14799596c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86da79e881d2d880aac7ae3f070a6ad661bf2503170381a29bbaae3ad5b32da6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061009d5760003560e01c80636987b075116100665780636987b07514610181578063715018a6146101b15780638da5cb5b146101bb578063dd467064146101d9578063f2fde38b146101f55761009d565b806207f4a0146100a257806303190e6d146100d257806318d852d8146101025780634a53815514610120578063641e8df314610150575b600080fd5b6100bc60048036038101906100b791906113e2565b610211565b6040516100c991906115ad565b60405180910390f35b6100ec60048036038101906100e791906113e2565b610419565b6040516100f991906115de565b60405180910390f35b61010a610494565b60405161011791906115de565b60405180910390f35b61013a6004803603810190610135919061168a565b61049a565b60405161014791906115de565b60405180910390f35b61016a6004803603810190610165919061172a565b610a13565b60405161017892919061179e565b60405180910390f35b61019b600480360381019061019691906117c7565b610cd6565b6040516101a891906115ad565b60405180910390f35b6101b9610f16565b005b6101c3610f2a565b6040516101d09190611816565b60405180910390f35b6101f360048036038101906101ee91906113e2565b610f53565b005b61020f600480360381019061020a919061185d565b611175565b005b61021961134e565b816000600160008381526020019081526020016000208054905011610273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026a906118e7565b60405180910390fd5b600160008481526020019081526020016000206001806000868152602001908152602001600020805490506102a89190611936565b815481106102b9576102b861196a565b5b90600052602060002090600302016040518060a0016040529081600082015481526020016001820180546102ec906119c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610318906119c8565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff161515151581525050915050919050565b6000816000600160008381526020019081526020016000208054905011610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c906118e7565b60405180910390fd5b6001600084815260200190815260200160002080549050915050919050565b60025481565b60008460006001600083815260200190815260200160002080549050116104f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ed906118e7565b60405180910390fd5b60006001600088815260200190815260200160002060018060008a81526020019081526020016000208054905061052d9190611936565b8154811061053e5761053d61196a565b5b90600052602060002090600302016040518060a001604052908160008201548152602001600182018054610571906119c8565b80601f016020809104026020016040519081016040528092919081815260200182805461059d906119c8565b80156105ea5780601f106105bf576101008083540402835291602001916105ea565b820191906000526020600020905b8154815290600101906020018083116105cd57829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff16151515158152505090508060800151156106dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d490611a45565b60405180910390fd5b806040015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061074d575061071e610f2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61078c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078390611ab1565b60405180910390fd5b6000801b86036107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c890611b1d565b60405180910390fd5b60008585905011610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e90611b89565b60405180910390fd5b60016000888152602001908152602001600020805490509250600160008881526020019081526020016000206040518060a0016040528088815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff1681526020016000151581525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190816109199190611d84565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550608082015181600201601c6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff1683887fd77fe84d4f2a61fe0f7d451ae99d1eab022f54872f6dc94df8a39f425d574fcd8989896000604051610a019493929190611eb0565b60405180910390a45050949350505050565b6000806000801b8603610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611b1d565b60405180910390fd5b60008585905011610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890611b89565b60405180910390fd5b60026000815480929190610ab490611ef0565b919050559150600160008381526020019081526020016000206040518060a0016040528088815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014267ffffffffffffffff1681526020018515158152509080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001019081610ba29190611d84565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160020160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550608082015181600201601c6101000a81548160ff02191690831515021790555050503373ffffffffffffffffffffffffffffffffffffffff166000837fd77fe84d4f2a61fe0f7d451ae99d1eab022f54872f6dc94df8a39f425d574fcd89898989604051610c8a9493929190611eb0565b60405180910390a48215610cc657817ffd295620abd5998c47c7096c65bf6d4a3d7b026de9bcc55154df280a7976e17360405160405180910390a25b8160009150915094509492505050565b610cde61134e565b826000600160008381526020019081526020016000208054905011610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f906118e7565b60405180910390fd5b60016000858152602001908152602001600020805490508310610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8790611f84565b60405180910390fd5b600160008581526020019081526020016000208381548110610db557610db461196a565b5b90600052602060002090600302016040518060a001604052908160008201548152602001600182018054610de8906119c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e14906119c8565b8015610e615780601f10610e3657610100808354040283529160200191610e61565b820191906000526020600020905b815481529060010190602001808311610e4457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200160028201601c9054906101000a900460ff16151515158152505091505092915050565b610f1e6111fb565b610f286000611282565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b806000600160008381526020019081526020016000208054905011610fad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa4906118e7565b60405180910390fd5b600060016000848152602001908152602001600020600180600086815260200190815260200160002080549050610fe49190611936565b81548110610ff557610ff461196a565b5b9060005260206000209060030201905080600201601c9054906101000a900460ff1615611057576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104e90611ff0565b60405180910390fd5b8060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110e757506110b8610f2a565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b611126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111d90611ab1565b60405180910390fd5b600181600201601c6101000a81548160ff021916908315150217905550827ffd295620abd5998c47c7096c65bf6d4a3d7b026de9bcc55154df280a7976e17360405160405180910390a2505050565b61117d6111fb565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111ef5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111e69190611816565b60405180910390fd5b6111f881611282565b50565b611203611346565b73ffffffffffffffffffffffffffffffffffffffff16611221610f2a565b73ffffffffffffffffffffffffffffffffffffffff161461128057611244611346565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016112779190611816565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060a001604052806000801916815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff1681526020016000151581525090565b600080fd5b600080fd5b6000819050919050565b6113bf816113ac565b81146113ca57600080fd5b50565b6000813590506113dc816113b6565b92915050565b6000602082840312156113f8576113f76113a2565b5b6000611406848285016113cd565b91505092915050565b6000819050919050565b6114228161140f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611462578082015181840152602081019050611447565b60008484015250505050565b6000601f19601f8301169050919050565b600061148a82611428565b6114948185611433565b93506114a4818560208601611444565b6114ad8161146e565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114e3826114b8565b9050919050565b6114f3816114d8565b82525050565b600067ffffffffffffffff82169050919050565b611516816114f9565b82525050565b60008115159050919050565b6115318161151c565b82525050565b600060a08301600083015161154f6000860182611419565b5060208301518482036020860152611567828261147f565b915050604083015161157c60408601826114ea565b50606083015161158f606086018261150d565b5060808301516115a26080860182611528565b508091505092915050565b600060208201905081810360008301526115c78184611537565b905092915050565b6115d8816113ac565b82525050565b60006020820190506115f360008301846115cf565b92915050565b6116028161140f565b811461160d57600080fd5b50565b60008135905061161f816115f9565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261164a57611649611625565b5b8235905067ffffffffffffffff8111156116675761166661162a565b5b6020830191508360018202830111156116835761168261162f565b5b9250929050565b600080600080606085870312156116a4576116a36113a2565b5b60006116b2878288016113cd565b94505060206116c387828801611610565b935050604085013567ffffffffffffffff8111156116e4576116e36113a7565b5b6116f087828801611634565b925092505092959194509250565b6117078161151c565b811461171257600080fd5b50565b600081359050611724816116fe565b92915050565b60008060008060608587031215611744576117436113a2565b5b600061175287828801611610565b945050602085013567ffffffffffffffff811115611773576117726113a7565b5b61177f87828801611634565b9350935050604061179287828801611715565b91505092959194509250565b60006040820190506117b360008301856115cf565b6117c060208301846115cf565b9392505050565b600080604083850312156117de576117dd6113a2565b5b60006117ec858286016113cd565b92505060206117fd858286016113cd565b9150509250929050565b611810816114d8565b82525050565b600060208201905061182b6000830184611807565b92915050565b61183a816114d8565b811461184557600080fd5b50565b60008135905061185781611831565b92915050565b600060208284031215611873576118726113a2565b5b600061188184828501611848565b91505092915050565b600082825260208201905092915050565b7f4d656d6f7269616c3a206e6f7420666f756e6400000000000000000000000000600082015250565b60006118d160138361188a565b91506118dc8261189b565b602082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611941826113ac565b915061194c836113ac565b925082820390508181111561196457611963611907565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119e057607f821691505b6020821081036119f3576119f2611999565b5b50919050565b7f4d656d6f7269616c206973206c6f636b65640000000000000000000000000000600082015250565b6000611a2f60128361188a565b9150611a3a826119f9565b602082019050919050565b60006020820190508181036000830152611a5e81611a22565b9050919050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611a9b600e8361188a565b9150611aa682611a65565b602082019050919050565b60006020820190508181036000830152611aca81611a8e565b9050919050565b7f496e76616c696420686173680000000000000000000000000000000000000000600082015250565b6000611b07600c8361188a565b9150611b1282611ad1565b602082019050919050565b60006020820190508181036000830152611b3681611afa565b9050919050565b7f496e76616c696420555249000000000000000000000000000000000000000000600082015250565b6000611b73600b8361188a565b9150611b7e82611b3d565b602082019050919050565b60006020820190508181036000830152611ba281611b66565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611c3a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611bfd565b611c448683611bfd565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611c81611c7c611c77846113ac565b611c5c565b6113ac565b9050919050565b6000819050919050565b611c9b83611c66565b611caf611ca782611c88565b848454611c0a565b825550505050565b600090565b611cc4611cb7565b611ccf818484611c92565b505050565b5b81811015611cf357611ce8600082611cbc565b600181019050611cd5565b5050565b601f821115611d3857611d0981611bd8565b611d1284611bed565b81016020851015611d21578190505b611d35611d2d85611bed565b830182611cd4565b50505b505050565b600082821c905092915050565b6000611d5b60001984600802611d3d565b1980831691505092915050565b6000611d748383611d4a565b9150826002028217905092915050565b611d8d82611428565b67ffffffffffffffff811115611da657611da5611ba9565b5b611db082546119c8565b611dbb828285611cf7565b600060209050601f831160018114611dee5760008415611ddc578287015190505b611de68582611d68565b865550611e4e565b601f198416611dfc86611bd8565b60005b82811015611e2457848901518255600182019150602085019450602081019050611dff565b86831015611e415784890151611e3d601f891682611d4a565b8355505b6001600288020188555050505b505050505050565b611e5f8161140f565b82525050565b82818337600083830152505050565b6000611e80838561188a565b9350611e8d838584611e65565b611e968361146e565b840190509392505050565b611eaa8161151c565b82525050565b6000606082019050611ec56000830187611e56565b8181036020830152611ed8818587611e74565b9050611ee76040830184611ea1565b95945050505050565b6000611efb826113ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f2d57611f2c611907565b5b600182019050919050565b7f4261642076657273696f6e000000000000000000000000000000000000000000600082015250565b6000611f6e600b8361188a565b9150611f7982611f38565b602082019050919050565b60006020820190508181036000830152611f9d81611f61565b9050919050565b7f416c7265616479206c6f636b6564000000000000000000000000000000000000600082015250565b6000611fda600e8361188a565b9150611fe582611fa4565b602082019050919050565b6000602082019050818103600083015261200981611fcd565b905091905056fea264697066735822122024f8f34ddc65a333c673f695b72316c70ee5619633b5a31b46a7ea09748c986664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6987B075 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x6987B075 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xDD467064 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F5 JUMPI PUSH2 0x9D JUMP JUMPDEST DUP1 PUSH3 0x7F4A0 EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0x3190E6D EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x18D852D8 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x4A538155 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x641E8DF3 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x211 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x172A JUMP JUMPDEST PUSH2 0xA13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP3 SWAP2 SWAP1 PUSH2 0x179E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x17C7 JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C3 PUSH2 0xF2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0xF53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x185D JUMP JUMPDEST PUSH2 0x1175 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x219 PUSH2 0x134E JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26A SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2B9 JUMPI PUSH2 0x2B8 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x2EC SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x318 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x365 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x33A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x365 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x348 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x475 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0x4F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4ED SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x571 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59D SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD ISZERO PUSH2 0x6DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D4 SWAP1 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x74D JUMPI POP PUSH2 0x71E PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x78C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x783 SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SHL DUP7 SUB PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP GT PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80E SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP3 POP PUSH1 0x1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP9 PUSH32 0xD77FE84D4F2A61FE0F7D451AE99D1EAB022F54872F6DC94DF8A39F425D574FCD DUP10 DUP10 DUP10 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0xA01 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SHL DUP7 SUB PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA52 SWAP1 PUSH2 0x1B1D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP6 SWAP1 POP GT PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA98 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAB4 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP2 POP PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xBA2 SWAP2 SWAP1 PUSH2 0x1D84 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP4 PUSH32 0xD77FE84D4F2A61FE0F7D451AE99D1EAB022F54872F6DC94DF8A39F425D574FCD DUP10 DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC8A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 ISZERO PUSH2 0xCC6 JUMPI DUP2 PUSH32 0xFD295620ABD5998C47C7096C65BF6D4A3D7B026DE9BCC55154DF280A7976E173 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP2 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCDE PUSH2 0x134E JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2F SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xDB5 JUMPI PUSH2 0xDB4 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xDE8 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE14 SWAP1 PUSH2 0x19C8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE61 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE36 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE61 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE44 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1E PUSH2 0x11FB JUMP JUMPDEST PUSH2 0xF28 PUSH1 0x0 PUSH2 0x1282 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP GT PUSH2 0xFAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA4 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP PUSH2 0xFE4 SWAP2 SWAP1 PUSH2 0x1936 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xFF5 JUMPI PUSH2 0xFF4 PUSH2 0x196A JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1057 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x10E7 JUMPI POP PUSH2 0x10B8 PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111D SWAP1 PUSH2 0x1AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0xFD295620ABD5998C47C7096C65BF6D4A3D7B026DE9BCC55154DF280A7976E173 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x117D PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11EF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11F8 DUP2 PUSH2 0x1282 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1203 PUSH2 0x1346 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1221 PUSH2 0xF2A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH2 0x1244 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP2 SWAP1 PUSH2 0x1816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP2 EQ PUSH2 0x13CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13DC DUP2 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F7 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP5 DUP3 DUP6 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1422 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1462 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148A DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH2 0x1494 DUP2 DUP6 PUSH2 0x1433 JUMP JUMPDEST SWAP4 POP PUSH2 0x14A4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x14AD DUP2 PUSH2 0x146E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E3 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F3 DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1516 DUP2 PUSH2 0x14F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1531 DUP2 PUSH2 0x151C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x154F PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x1419 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1567 DUP3 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x157C PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x14EA JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x158F PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x150D JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x15A2 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x1528 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15C7 DUP2 DUP5 PUSH2 0x1537 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15D8 DUP2 PUSH2 0x13AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1602 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP2 EQ PUSH2 0x160D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x161F DUP2 PUSH2 0x15F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x164A JUMPI PUSH2 0x1649 PUSH2 0x1625 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x162A JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x162F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B2 DUP8 DUP3 DUP9 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x16C3 DUP8 DUP3 DUP9 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16E4 JUMPI PUSH2 0x16E3 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH2 0x16F0 DUP8 DUP3 DUP9 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1707 DUP2 PUSH2 0x151C JUMP JUMPDEST DUP2 EQ PUSH2 0x1712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1724 DUP2 PUSH2 0x16FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1744 JUMPI PUSH2 0x1743 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1752 DUP8 DUP3 DUP9 ADD PUSH2 0x1610 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1773 JUMPI PUSH2 0x1772 PUSH2 0x13A7 JUMP JUMPDEST JUMPDEST PUSH2 0x177F DUP8 DUP3 DUP9 ADD PUSH2 0x1634 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x1792 DUP8 DUP3 DUP9 ADD PUSH2 0x1715 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x15CF JUMP JUMPDEST PUSH2 0x17C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17DE JUMPI PUSH2 0x17DD PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17EC DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17FD DUP6 DUP3 DUP7 ADD PUSH2 0x13CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1810 DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x182B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x183A DUP2 PUSH2 0x14D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1857 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1873 JUMPI PUSH2 0x1872 PUSH2 0x13A2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1881 DUP5 DUP3 DUP6 ADD PUSH2 0x1848 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D656D6F7269616C3A206E6F7420666F756E6400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18D1 PUSH1 0x13 DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x18DC DUP3 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 PUSH2 0x18C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1941 DUP3 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH2 0x194C DUP4 PUSH2 0x13AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1964 JUMPI PUSH2 0x1963 PUSH2 0x1907 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19F3 JUMPI PUSH2 0x19F2 PUSH2 0x1999 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656D6F7269616C206973206C6F636B65640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A2F PUSH1 0x12 DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3A DUP3 PUSH2 0x19F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A5E DUP2 PUSH2 0x1A22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A9B PUSH1 0xE DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA6 DUP3 PUSH2 0x1A65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ACA DUP2 PUSH2 0x1A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420686173680000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 PUSH1 0xC DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B12 DUP3 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B36 DUP2 PUSH2 0x1AFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420555249000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B73 PUSH1 0xB DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP3 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA2 DUP2 PUSH2 0x1B66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C3A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1C44 DUP7 DUP4 PUSH2 0x1BFD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 PUSH2 0x1C7C PUSH2 0x1C77 DUP5 PUSH2 0x13AC JUMP JUMPDEST PUSH2 0x1C5C JUMP JUMPDEST PUSH2 0x13AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9B DUP4 PUSH2 0x1C66 JUMP JUMPDEST PUSH2 0x1CAF PUSH2 0x1CA7 DUP3 PUSH2 0x1C88 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1C0A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1CC4 PUSH2 0x1CB7 JUMP JUMPDEST PUSH2 0x1CCF DUP2 DUP5 DUP5 PUSH2 0x1C92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CF3 JUMPI PUSH2 0x1CE8 PUSH1 0x0 DUP3 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1CD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D09 DUP2 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x1D12 DUP5 PUSH2 0x1BED JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D21 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1D35 PUSH2 0x1D2D DUP6 PUSH2 0x1BED JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1CD4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1D3D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D74 DUP4 DUP4 PUSH2 0x1D4A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D8D DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DA6 JUMPI PUSH2 0x1DA5 PUSH2 0x1BA9 JUMP JUMPDEST JUMPDEST PUSH2 0x1DB0 DUP3 SLOAD PUSH2 0x19C8 JUMP JUMPDEST PUSH2 0x1DBB DUP3 DUP3 DUP6 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DEE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1DDC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1DE6 DUP6 DUP3 PUSH2 0x1D68 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1DFC DUP7 PUSH2 0x1BD8 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E24 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DFF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1E41 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1E3D PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1D4A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E5F DUP2 PUSH2 0x140F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E80 DUP4 DUP6 PUSH2 0x188A JUMP JUMPDEST SWAP4 POP PUSH2 0x1E8D DUP4 DUP6 DUP5 PUSH2 0x1E65 JUMP JUMPDEST PUSH2 0x1E96 DUP4 PUSH2 0x146E JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EAA DUP2 PUSH2 0x151C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1EC5 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E56 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1ED8 DUP2 DUP6 DUP8 PUSH2 0x1E74 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EE7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EA1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EFB DUP3 PUSH2 0x13AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1F2D JUMPI PUSH2 0x1F2C PUSH2 0x1907 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4261642076657273696F6E000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6E PUSH1 0xB DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F9D DUP2 PUSH2 0x1F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479206C6F636B6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0xE DUP4 PUSH2 0x188A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2009 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 0xF8 RETURN 0x4D 0xDC PUSH6 0xA333C673F695 0xB7 0x23 AND 0xC7 0xE 0xE5 PUSH2 0x9633 0xB5 LOG3 SHL CHAINID 0xA7 0xEA MULMOD PUSH21 0x8C986664736F6C6343000814003300000000000000 ","sourceMap":"127:3634:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3352:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;379:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1746:1023;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;906:834;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3511:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:2;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2775:372:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3166:180:19;3252:13;;:::i;:::-;3231:10;857:1;826:9;:21;836:10;826:21;;;;;;;;;;;:28;;;;:32;818:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3284:9:::1;:21;3294:10;3284:21;;;;;;;;;;;3337:1;3306:9:::0;:21:::1;3316:10;3306:21;;;;;;;;;;;:28;;;;:32;;;;:::i;:::-;3284:55;;;;;;;;:::i;:::-;;;;;;;;;;;;3277:62;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3166:180:::0;;;;:::o;3352:153::-;3444:7;3423:10;857:1;826:9;:21;836:10;826:21;;;;;;;;;;;:28;;;;:32;818:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3470:9:::1;:21;3480:10;3470:21;;;;;;;;;;;:28;;;;3463:35;;3352:153:::0;;;;:::o;379:33::-;;;;:::o;1746:1023::-;1919:15;1898:10;857:1;826:9;:21;836:10;826:21;;;;;;;;;;;:28;;;;:32;818:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1946:18:::1;1967:9;:21;1977:10;1967:21;;;;;;;;;;;2020:1;1989:9:::0;:21:::1;1999:10;1989:21;;;;;;;;;;;:28;;;;:32;;;;:::i;:::-;1967:55;;;;;;;;:::i;:::-;;;;;;;;;;;;1946:76;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;2041:4;:11;;;2040:12;2032:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2107:4;:14;;;2093:28;;:10;:28;;;:53;;;;2139:7;:5;:7::i;:::-;2125:21;;:10;:21;;;2093:53;2085:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:1;2201:10:::0;::::1;2183:14;:28:::0;2175:53:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2276:1;2252:13;;2246:27;;:31;2238:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2314:9;:21;2324:10;2314:21;;;;;;;;;;;:28;;;;2304:38;;2352:9;:21;2362:10;2352:21;;;;;;;;;;;2392:232;;;;;;;;2430:14;2392:232;;;;2474:13;;2392:232;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2516:10;2392:232;;;;;;2562:15;2392:232;;;;;;2604:5;2392:232;;;;::::0;2352:282:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:10;2650:88;;2680:7;2668:10;2650:88;2689:14;2705:13;;2732:5;2650:88;;;;;;;;;:::i;:::-;;;;;;;;2748:14;1746:1023:::0;;;;;;;:::o;906:834::-;1042:18;1062:15;1120:1;1112:10;;1097:11;:25;1089:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1184:1;1163:10;;1157:24;;:28;1149:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:14;;:16;;;;;;;;;:::i;:::-;;;;;1212:29;;1251:9;:21;1261:10;1251:21;;;;;;;;;;;1291:236;;;;;;;;1329:11;1291:236;;;;1370:10;;1291:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:10;1291:236;;;;;;1455:15;1291:236;;;;;;1497:15;1291:236;;;;;1251:286;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:10;1553:86;;1583:1;1571:10;1553:86;1586:11;1599:10;;1623:15;1553:86;;;;;;;;;:::i;:::-;;;;;;;;1653:15;1649:52;;;1690:10;1675:26;;;;;;;;;;1649:52;1719:10;1731:1;1711:22;;;;906:834;;;;;;;:::o;3511:248::-;3618:13;;:::i;:::-;3597:10;857:1;826:9;:21;836:10;826:21;;;;;;;;;;;:28;;;;:32;818:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3661:9:::1;:21;3671:10;3661:21;;;;;;;;;;;:28;;;;3651:7;:38;3643:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3722:9;:21;3732:10;3722:21;;;;;;;;;;;3744:7;3722:30;;;;;;;;:::i;:::-;;;;;;;;;;;;3715:37;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;3511:248:::0;;;;;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2775:372:19:-;2833:10;857:1;826:9;:21;836:10;826:21;;;;;;;;;;;:28;;;;:32;818:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2855:19:::1;2877:9;:21;2887:10;2877:21;;;;;;;;;;;2930:1;2899:9:::0;:21:::1;2909:10;2899:21;;;;;;;;;;;:28;;;;:32;;;;:::i;:::-;2877:55;;;;;;;;:::i;:::-;;;;;;;;;;;;2855:77;;2951:4;:11;;;;;;;;;;;;2950:12;2942:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;3013:4;:14;;;;;;;;;;;;2999:28;;:10;:28;;;:53;;;;3045:7;:5;:7::i;:::-;3031:21;;:10;:21;;;2999:53;2991:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;3095:4;3081;:11;;;:18;;;;;;;;;;;;;;;;;;3129:10;3114:26;;;;;;;;;;2845:302;2775:372:::0;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:21:-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:108::-;1185:24;1203:5;1185:24;:::i;:::-;1180:3;1173:37;1108:108;;:::o;1222:99::-;1274:6;1308:5;1302:12;1292:22;;1222:99;;;:::o;1327:159::-;1401:11;1435:6;1430:3;1423:19;1475:4;1470:3;1466:14;1451:29;;1327:159;;;;:::o;1492:246::-;1573:1;1583:113;1597:6;1594:1;1591:13;1583:113;;;1682:1;1677:3;1673:11;1667:18;1663:1;1658:3;1654:11;1647:39;1619:2;1616:1;1612:10;1607:15;;1583:113;;;1730:1;1721:6;1716:3;1712:16;1705:27;1554:184;1492:246;;;:::o;1744:102::-;1785:6;1836:2;1832:7;1827:2;1820:5;1816:14;1812:28;1802:38;;1744:102;;;:::o;1852:357::-;1930:3;1958:39;1991:5;1958:39;:::i;:::-;2013:61;2067:6;2062:3;2013:61;:::i;:::-;2006:68;;2083:65;2141:6;2136:3;2129:4;2122:5;2118:16;2083:65;:::i;:::-;2173:29;2195:6;2173:29;:::i;:::-;2168:3;2164:39;2157:46;;1934:275;1852:357;;;;:::o;2215:126::-;2252:7;2292:42;2285:5;2281:54;2270:65;;2215:126;;;:::o;2347:96::-;2384:7;2413:24;2431:5;2413:24;:::i;:::-;2402:35;;2347:96;;;:::o;2449:108::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2449:108;;:::o;2563:101::-;2599:7;2639:18;2632:5;2628:30;2617:41;;2563:101;;;:::o;2670:105::-;2745:23;2762:5;2745:23;:::i;:::-;2740:3;2733:36;2670:105;;:::o;2781:90::-;2815:7;2858:5;2851:13;2844:21;2833:32;;2781:90;;;:::o;2877:99::-;2948:21;2963:5;2948:21;:::i;:::-;2943:3;2936:34;2877:99;;:::o;3054:1143::-;3171:3;3207:4;3202:3;3198:14;3301:4;3294:5;3290:16;3284:23;3320:63;3377:4;3372:3;3368:14;3354:12;3320:63;:::i;:::-;3222:171;3481:4;3474:5;3470:16;3464:23;3534:3;3528:4;3524:14;3517:4;3512:3;3508:14;3501:38;3560:73;3628:4;3614:12;3560:73;:::i;:::-;3552:81;;3403:241;3731:4;3724:5;3720:16;3714:23;3750:63;3807:4;3802:3;3798:14;3784:12;3750:63;:::i;:::-;3654:169;3910:4;3903:5;3899:16;3893:23;3929:61;3984:4;3979:3;3975:14;3961:12;3929:61;:::i;:::-;3833:167;4084:4;4077:5;4073:16;4067:23;4103:57;4154:4;4149:3;4145:14;4131:12;4103:57;:::i;:::-;4010:160;4187:4;4180:11;;3176:1021;3054:1143;;;;:::o;4203:369::-;4344:4;4382:2;4371:9;4367:18;4359:26;;4431:9;4425:4;4421:20;4417:1;4406:9;4402:17;4395:47;4459:106;4560:4;4551:6;4459:106;:::i;:::-;4451:114;;4203:369;;;;:::o;4578:118::-;4665:24;4683:5;4665:24;:::i;:::-;4660:3;4653:37;4578:118;;:::o;4702:222::-;4795:4;4833:2;4822:9;4818:18;4810:26;;4846:71;4914:1;4903:9;4899:17;4890:6;4846:71;:::i;:::-;4702:222;;;;:::o;4930:122::-;5003:24;5021:5;5003:24;:::i;:::-;4996:5;4993:35;4983:63;;5042:1;5039;5032:12;4983:63;4930:122;:::o;5058:139::-;5104:5;5142:6;5129:20;5120:29;;5158:33;5185:5;5158:33;:::i;:::-;5058:139;;;;:::o;5203:117::-;5312:1;5309;5302:12;5326:117;5435:1;5432;5425:12;5449:117;5558:1;5555;5548:12;5586:553;5644:8;5654:6;5704:3;5697:4;5689:6;5685:17;5681:27;5671:122;;5712:79;;:::i;:::-;5671:122;5825:6;5812:20;5802:30;;5855:18;5847:6;5844:30;5841:117;;;5877:79;;:::i;:::-;5841:117;5991:4;5983:6;5979:17;5967:29;;6045:3;6037:4;6029:6;6025:17;6015:8;6011:32;6008:41;6005:128;;;6052:79;;:::i;:::-;6005:128;5586:553;;;;;:::o;6145:819::-;6234:6;6242;6250;6258;6307:2;6295:9;6286:7;6282:23;6278:32;6275:119;;;6313:79;;:::i;:::-;6275:119;6433:1;6458:53;6503:7;6494:6;6483:9;6479:22;6458:53;:::i;:::-;6448:63;;6404:117;6560:2;6586:53;6631:7;6622:6;6611:9;6607:22;6586:53;:::i;:::-;6576:63;;6531:118;6716:2;6705:9;6701:18;6688:32;6747:18;6739:6;6736:30;6733:117;;;6769:79;;:::i;:::-;6733:117;6882:65;6939:7;6930:6;6919:9;6915:22;6882:65;:::i;:::-;6864:83;;;;6659:298;6145:819;;;;;;;:::o;6970:116::-;7040:21;7055:5;7040:21;:::i;:::-;7033:5;7030:32;7020:60;;7076:1;7073;7066:12;7020:60;6970:116;:::o;7092:133::-;7135:5;7173:6;7160:20;7151:29;;7189:30;7213:5;7189:30;:::i;:::-;7092:133;;;;:::o;7231:813::-;7317:6;7325;7333;7341;7390:2;7378:9;7369:7;7365:23;7361:32;7358:119;;;7396:79;;:::i;:::-;7358:119;7516:1;7541:53;7586:7;7577:6;7566:9;7562:22;7541:53;:::i;:::-;7531:63;;7487:117;7671:2;7660:9;7656:18;7643:32;7702:18;7694:6;7691:30;7688:117;;;7724:79;;:::i;:::-;7688:117;7837:65;7894:7;7885:6;7874:9;7870:22;7837:65;:::i;:::-;7819:83;;;;7614:298;7951:2;7977:50;8019:7;8010:6;7999:9;7995:22;7977:50;:::i;:::-;7967:60;;7922:115;7231:813;;;;;;;:::o;8050:332::-;8171:4;8209:2;8198:9;8194:18;8186:26;;8222:71;8290:1;8279:9;8275:17;8266:6;8222:71;:::i;:::-;8303:72;8371:2;8360:9;8356:18;8347:6;8303:72;:::i;:::-;8050:332;;;;;:::o;8388:474::-;8456:6;8464;8513:2;8501:9;8492:7;8488:23;8484:32;8481:119;;;8519:79;;:::i;:::-;8481:119;8639:1;8664:53;8709:7;8700:6;8689:9;8685:22;8664:53;:::i;:::-;8654:63;;8610:117;8766:2;8792:53;8837:7;8828:6;8817:9;8813:22;8792:53;:::i;:::-;8782:63;;8737:118;8388:474;;;;;:::o;8868:118::-;8955:24;8973:5;8955:24;:::i;:::-;8950:3;8943:37;8868:118;;:::o;8992:222::-;9085:4;9123:2;9112:9;9108:18;9100:26;;9136:71;9204:1;9193:9;9189:17;9180:6;9136:71;:::i;:::-;8992:222;;;;:::o;9220:122::-;9293:24;9311:5;9293:24;:::i;:::-;9286:5;9283:35;9273:63;;9332:1;9329;9322:12;9273:63;9220:122;:::o;9348:139::-;9394:5;9432:6;9419:20;9410:29;;9448:33;9475:5;9448:33;:::i;:::-;9348:139;;;;:::o;9493:329::-;9552:6;9601:2;9589:9;9580:7;9576:23;9572:32;9569:119;;;9607:79;;:::i;:::-;9569:119;9727:1;9752:53;9797:7;9788:6;9777:9;9773:22;9752:53;:::i;:::-;9742:63;;9698:117;9493:329;;;;:::o;9828:169::-;9912:11;9946:6;9941:3;9934:19;9986:4;9981:3;9977:14;9962:29;;9828:169;;;;:::o;10003:::-;10143:21;10139:1;10131:6;10127:14;10120:45;10003:169;:::o;10178:366::-;10320:3;10341:67;10405:2;10400:3;10341:67;:::i;:::-;10334:74;;10417:93;10506:3;10417:93;:::i;:::-;10535:2;10530:3;10526:12;10519:19;;10178:366;;;:::o;10550:419::-;10716:4;10754:2;10743:9;10739:18;10731:26;;10803:9;10797:4;10793:20;10789:1;10778:9;10774:17;10767:47;10831:131;10957:4;10831:131;:::i;:::-;10823:139;;10550:419;;;:::o;10975:180::-;11023:77;11020:1;11013:88;11120:4;11117:1;11110:15;11144:4;11141:1;11134:15;11161:194;11201:4;11221:20;11239:1;11221:20;:::i;:::-;11216:25;;11255:20;11273:1;11255:20;:::i;:::-;11250:25;;11299:1;11296;11292:9;11284:17;;11323:1;11317:4;11314:11;11311:37;;;11328:18;;:::i;:::-;11311:37;11161:194;;;;:::o;11361:180::-;11409:77;11406:1;11399:88;11506:4;11503:1;11496:15;11530:4;11527:1;11520:15;11547:180;11595:77;11592:1;11585:88;11692:4;11689:1;11682:15;11716:4;11713:1;11706:15;11733:320;11777:6;11814:1;11808:4;11804:12;11794:22;;11861:1;11855:4;11851:12;11882:18;11872:81;;11938:4;11930:6;11926:17;11916:27;;11872:81;12000:2;11992:6;11989:14;11969:18;11966:38;11963:84;;12019:18;;:::i;:::-;11963:84;11784:269;11733:320;;;:::o;12059:168::-;12199:20;12195:1;12187:6;12183:14;12176:44;12059:168;:::o;12233:366::-;12375:3;12396:67;12460:2;12455:3;12396:67;:::i;:::-;12389:74;;12472:93;12561:3;12472:93;:::i;:::-;12590:2;12585:3;12581:12;12574:19;;12233:366;;;:::o;12605:419::-;12771:4;12809:2;12798:9;12794:18;12786:26;;12858:9;12852:4;12848:20;12844:1;12833:9;12829:17;12822:47;12886:131;13012:4;12886:131;:::i;:::-;12878:139;;12605:419;;;:::o;13030:164::-;13170:16;13166:1;13158:6;13154:14;13147:40;13030:164;:::o;13200:366::-;13342:3;13363:67;13427:2;13422:3;13363:67;:::i;:::-;13356:74;;13439:93;13528:3;13439:93;:::i;:::-;13557:2;13552:3;13548:12;13541:19;;13200:366;;;:::o;13572:419::-;13738:4;13776:2;13765:9;13761:18;13753:26;;13825:9;13819:4;13815:20;13811:1;13800:9;13796:17;13789:47;13853:131;13979:4;13853:131;:::i;:::-;13845:139;;13572:419;;;:::o;13997:162::-;14137:14;14133:1;14125:6;14121:14;14114:38;13997:162;:::o;14165:366::-;14307:3;14328:67;14392:2;14387:3;14328:67;:::i;:::-;14321:74;;14404:93;14493:3;14404:93;:::i;:::-;14522:2;14517:3;14513:12;14506:19;;14165:366;;;:::o;14537:419::-;14703:4;14741:2;14730:9;14726:18;14718:26;;14790:9;14784:4;14780:20;14776:1;14765:9;14761:17;14754:47;14818:131;14944:4;14818:131;:::i;:::-;14810:139;;14537:419;;;:::o;14962:161::-;15102:13;15098:1;15090:6;15086:14;15079:37;14962:161;:::o;15129:366::-;15271:3;15292:67;15356:2;15351:3;15292:67;:::i;:::-;15285:74;;15368:93;15457:3;15368:93;:::i;:::-;15486:2;15481:3;15477:12;15470:19;;15129:366;;;:::o;15501:419::-;15667:4;15705:2;15694:9;15690:18;15682:26;;15754:9;15748:4;15744:20;15740:1;15729:9;15725:17;15718:47;15782:131;15908:4;15782:131;:::i;:::-;15774:139;;15501:419;;;:::o;15926:180::-;15974:77;15971:1;15964:88;16071:4;16068:1;16061:15;16095:4;16092:1;16085:15;16112:141;16161:4;16184:3;16176:11;;16207:3;16204:1;16197:14;16241:4;16238:1;16228:18;16220:26;;16112:141;;;:::o;16259:93::-;16296:6;16343:2;16338;16331:5;16327:14;16323:23;16313:33;;16259:93;;;:::o;16358:107::-;16402:8;16452:5;16446:4;16442:16;16421:37;;16358:107;;;;:::o;16471:393::-;16540:6;16590:1;16578:10;16574:18;16613:97;16643:66;16632:9;16613:97;:::i;:::-;16731:39;16761:8;16750:9;16731:39;:::i;:::-;16719:51;;16803:4;16799:9;16792:5;16788:21;16779:30;;16852:4;16842:8;16838:19;16831:5;16828:30;16818:40;;16547:317;;16471:393;;;;;:::o;16870:60::-;16898:3;16919:5;16912:12;;16870:60;;;:::o;16936:142::-;16986:9;17019:53;17037:34;17046:24;17064:5;17046:24;:::i;:::-;17037:34;:::i;:::-;17019:53;:::i;:::-;17006:66;;16936:142;;;:::o;17084:75::-;17127:3;17148:5;17141:12;;17084:75;;;:::o;17165:269::-;17275:39;17306:7;17275:39;:::i;:::-;17336:91;17385:41;17409:16;17385:41;:::i;:::-;17377:6;17370:4;17364:11;17336:91;:::i;:::-;17330:4;17323:105;17241:193;17165:269;;;:::o;17440:73::-;17485:3;17440:73;:::o;17519:189::-;17596:32;;:::i;:::-;17637:65;17695:6;17687;17681:4;17637:65;:::i;:::-;17572:136;17519:189;;:::o;17714:186::-;17774:120;17791:3;17784:5;17781:14;17774:120;;;17845:39;17882:1;17875:5;17845:39;:::i;:::-;17818:1;17811:5;17807:13;17798:22;;17774:120;;;17714:186;;:::o;17906:543::-;18007:2;18002:3;17999:11;17996:446;;;18041:38;18073:5;18041:38;:::i;:::-;18125:29;18143:10;18125:29;:::i;:::-;18115:8;18111:44;18308:2;18296:10;18293:18;18290:49;;;18329:8;18314:23;;18290:49;18352:80;18408:22;18426:3;18408:22;:::i;:::-;18398:8;18394:37;18381:11;18352:80;:::i;:::-;18011:431;;17996:446;17906:543;;;:::o;18455:117::-;18509:8;18559:5;18553:4;18549:16;18528:37;;18455:117;;;;:::o;18578:169::-;18622:6;18655:51;18703:1;18699:6;18691:5;18688:1;18684:13;18655:51;:::i;:::-;18651:56;18736:4;18730;18726:15;18716:25;;18629:118;18578:169;;;;:::o;18752:295::-;18828:4;18974:29;18999:3;18993:4;18974:29;:::i;:::-;18966:37;;19036:3;19033:1;19029:11;19023:4;19020:21;19012:29;;18752:295;;;;:::o;19052:1395::-;19169:37;19202:3;19169:37;:::i;:::-;19271:18;19263:6;19260:30;19257:56;;;19293:18;;:::i;:::-;19257:56;19337:38;19369:4;19363:11;19337:38;:::i;:::-;19422:67;19482:6;19474;19468:4;19422:67;:::i;:::-;19516:1;19540:4;19527:17;;19572:2;19564:6;19561:14;19589:1;19584:618;;;;20246:1;20263:6;20260:77;;;20312:9;20307:3;20303:19;20297:26;20288:35;;20260:77;20363:67;20423:6;20416:5;20363:67;:::i;:::-;20357:4;20350:81;20219:222;19554:887;;19584:618;19636:4;19632:9;19624:6;19620:22;19670:37;19702:4;19670:37;:::i;:::-;19729:1;19743:208;19757:7;19754:1;19751:14;19743:208;;;19836:9;19831:3;19827:19;19821:26;19813:6;19806:42;19887:1;19879:6;19875:14;19865:24;;19934:2;19923:9;19919:18;19906:31;;19780:4;19777:1;19773:12;19768:17;;19743:208;;;19979:6;19970:7;19967:19;19964:179;;;20037:9;20032:3;20028:19;20022:26;20080:48;20122:4;20114:6;20110:17;20099:9;20080:48;:::i;:::-;20072:6;20065:64;19987:156;19964:179;20189:1;20185;20177:6;20173:14;20169:22;20163:4;20156:36;19591:611;;;19554:887;;19144:1303;;;19052:1395;;:::o;20453:118::-;20540:24;20558:5;20540:24;:::i;:::-;20535:3;20528:37;20453:118;;:::o;20577:146::-;20674:6;20669:3;20664;20651:30;20715:1;20706:6;20701:3;20697:16;20690:27;20577:146;;;:::o;20753:317::-;20851:3;20872:71;20936:6;20931:3;20872:71;:::i;:::-;20865:78;;20953:56;21002:6;20997:3;20990:5;20953:56;:::i;:::-;21034:29;21056:6;21034:29;:::i;:::-;21029:3;21025:39;21018:46;;20753:317;;;;;:::o;21076:109::-;21157:21;21172:5;21157:21;:::i;:::-;21152:3;21145:34;21076:109;;:::o;21191:541::-;21364:4;21402:2;21391:9;21387:18;21379:26;;21415:71;21483:1;21472:9;21468:17;21459:6;21415:71;:::i;:::-;21533:9;21527:4;21523:20;21518:2;21507:9;21503:18;21496:48;21561:88;21644:4;21635:6;21627;21561:88;:::i;:::-;21553:96;;21659:66;21721:2;21710:9;21706:18;21697:6;21659:66;:::i;:::-;21191:541;;;;;;;:::o;21738:233::-;21777:3;21800:24;21818:5;21800:24;:::i;:::-;21791:33;;21846:66;21839:5;21836:77;21833:103;;21916:18;;:::i;:::-;21833:103;21963:1;21956:5;21952:13;21945:20;;21738:233;;;:::o;21977:161::-;22117:13;22113:1;22105:6;22101:14;22094:37;21977:161;:::o;22144:366::-;22286:3;22307:67;22371:2;22366:3;22307:67;:::i;:::-;22300:74;;22383:93;22472:3;22383:93;:::i;:::-;22501:2;22496:3;22492:12;22485:19;;22144:366;;;:::o;22516:419::-;22682:4;22720:2;22709:9;22705:18;22697:26;;22769:9;22763:4;22759:20;22755:1;22744:9;22740:17;22733:47;22797:131;22923:4;22797:131;:::i;:::-;22789:139;;22516:419;;;:::o;22941:164::-;23081:16;23077:1;23069:6;23065:14;23058:40;22941:164;:::o;23111:366::-;23253:3;23274:67;23338:2;23333:3;23274:67;:::i;:::-;23267:74;;23350:93;23439:3;23350:93;:::i;:::-;23468:2;23463:3;23459:12;23452:19;;23111:366;;;:::o;23483:419::-;23649:4;23687:2;23676:9;23672:18;23664:26;;23736:9;23730:4;23726:20;23722:1;23711:9;23707:17;23700:47;23764:131;23890:4;23764:131;:::i;:::-;23756:139;;23483:419;;;:::o"},"methodIdentifiers":{"appendVersion(uint256,bytes32,string)":"4a538155","getVersion(uint256,uint256)":"6987b075","latest(uint256)":"0007f4a0","lock(uint256)":"dd467064","nextMemorialId()":"18d852d8","owner()":"8da5cb5b","publish(bytes32,string,bool)":"641e8df3","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","versionCount(uint256)":"03190e6d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"}],\"name\":\"MemorialLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"storageURI\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"MemorialPublished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"newContentHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"newStorageURI\",\"type\":\"string\"}],\"name\":\"appendVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"getVersion\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"storageURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"internalType\":\"struct MemorialRegistry.Record\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"}],\"name\":\"latest\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"storageURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"publisher\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"internalType\":\"struct MemorialRegistry.Record\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"}],\"name\":\"lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMemorialId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"contentHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"storageURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockImmediately\",\"type\":\"bool\"}],\"name\":\"publish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"}],\"name\":\"versionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemorialRegistry.sol\":\"MemorialRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MemorialRegistry.sol\":{\"keccak256\":\"0x9a33eb9ede092a578a3d08811e5175dbc43d20c2c4ebe9d62213f6e7a04270cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bdf2b92af9975961c7931a7dc136e196eec2ff974dde541ba2bfc9eb7dbb4f2\",\"dweb:/ipfs/QmVwRcPkZ6babpgrMaZDCRZT2rW2qCnvHCEpCUP1F32pVo\"]}},\"version\":1}"}},"contracts/RemembranceBadges.sol":{"RemembranceBadges":{"abi":[{"inputs":[{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"uint256","name":"memorialId","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"year","type":"uint16"},{"indexed":false,"internalType":"uint256","name":"badgeId","type":"uint256"}],"name":"CandleLit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"uint16","name":"year","type":"uint16"}],"name":"adminBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"uint16","name":"year","type":"uint16"}],"name":"badgeIdFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"candlesForMemorial","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"claimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"memorialId","type":"uint256"},{"internalType":"uint16","name":"year","type":"uint16"}],"name":"lightCandle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"bool","name":"","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newUri","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"totalHolders","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_7124":{"entryPoint":null,"id":7124,"parameterSlots":2,"returnSlots":0},"@_725":{"entryPoint":null,"id":725,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":176,"id":257,"parameterSlots":2,"returnSlots":1},"@_msgSender_2938":{"entryPoint":543,"id":2938,"parameterSlots":0,"returnSlots":1},"@_setURI_1342":{"entryPoint":155,"id":1342,"parameterSlots":1,"returnSlots":0},"@hasRole_81":{"entryPoint":436,"id":81,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":828,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1032,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory":{"entryPoint":1055,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":699,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":551,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":730,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1268,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1157,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1589,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":986,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":954,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1404,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1550,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1424,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1744,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":784,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1289,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1215,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1714,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":645,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1414,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1682,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1168,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":598,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1464,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":571,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":576,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":566,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":561,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1305,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1669,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1522,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1318,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1474,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1006,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1517,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8912:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"423:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:21"},"nodeType":"YulFunctionCall","src":"433:12:21"},"nodeType":"YulExpressionStatement","src":"433:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:21"},{"body":{"nodeType":"YulBlock","src":"546:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:21"},"nodeType":"YulFunctionCall","src":"556:12:21"},"nodeType":"YulExpressionStatement","src":"556:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:21"},{"body":{"nodeType":"YulBlock","src":"628:54:21","statements":[{"nodeType":"YulAssignment","src":"638:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:21"},"nodeType":"YulFunctionCall","src":"652:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:21"},"nodeType":"YulFunctionCall","src":"648:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:21","type":""}],"src":"580:102:21"},{"body":{"nodeType":"YulBlock","src":"716:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:21"},"nodeType":"YulFunctionCall","src":"726:88:21"},"nodeType":"YulExpressionStatement","src":"726:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:21"},"nodeType":"YulFunctionCall","src":"823:15:21"},"nodeType":"YulExpressionStatement","src":"823:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:21"},"nodeType":"YulFunctionCall","src":"847:15:21"},"nodeType":"YulExpressionStatement","src":"847:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:21"},{"body":{"nodeType":"YulBlock","src":"917:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:21"},"nodeType":"YulFunctionCall","src":"957:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:21"},"nodeType":"YulFunctionCall","src":"945:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:21"},"nodeType":"YulFunctionCall","src":"1098:18:21"},"nodeType":"YulExpressionStatement","src":"1098:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:21"},"nodeType":"YulFunctionCall","src":"1036:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:21"},"nodeType":"YulFunctionCall","src":"1072:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:21"},"nodeType":"YulFunctionCall","src":"1033:62:21"},"nodeType":"YulIf","src":"1030:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:21"},"nodeType":"YulFunctionCall","src":"1127:22:21"},"nodeType":"YulExpressionStatement","src":"1127:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:21","type":""}],"src":"874:281:21"},{"body":{"nodeType":"YulBlock","src":"1202:88:21","statements":[{"nodeType":"YulAssignment","src":"1212:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:21"},"nodeType":"YulFunctionCall","src":"1222:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:21"},"nodeType":"YulFunctionCall","src":"1251:33:21"},"nodeType":"YulExpressionStatement","src":"1251:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:21","type":""}],"src":"1161:129:21"},{"body":{"nodeType":"YulBlock","src":"1363:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:21"},"nodeType":"YulFunctionCall","src":"1470:18:21"},"nodeType":"YulExpressionStatement","src":"1470:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:21"},"nodeType":"YulFunctionCall","src":"1437:30:21"},"nodeType":"YulIf","src":"1434:56:21"},{"nodeType":"YulAssignment","src":"1500:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:21"},"nodeType":"YulFunctionCall","src":"1508:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:21"}]},{"nodeType":"YulAssignment","src":"1574:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:21"},"nodeType":"YulFunctionCall","src":"1582:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:21"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:21","type":""}],"src":"1296:308:21"},{"body":{"nodeType":"YulBlock","src":"1672:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:21"},"nodeType":"YulFunctionCall","src":"1772:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:21"},"nodeType":"YulFunctionCall","src":"1791:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:21"},"nodeType":"YulFunctionCall","src":"1785:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:21"},"nodeType":"YulFunctionCall","src":"1765:39:21"},"nodeType":"YulExpressionStatement","src":"1765:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:21"},"nodeType":"YulFunctionCall","src":"1709:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:21","statements":[{"nodeType":"YulAssignment","src":"1725:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:21"},"nodeType":"YulFunctionCall","src":"1730:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:21","statements":[]},"src":"1701:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:21"},"nodeType":"YulFunctionCall","src":"1830:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:21"},"nodeType":"YulFunctionCall","src":"1823:27:21"},"nodeType":"YulExpressionStatement","src":"1823:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:21","type":""}],"src":"1610:246:21"},{"body":{"nodeType":"YulBlock","src":"1957:339:21","statements":[{"nodeType":"YulAssignment","src":"1967:75:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:21"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:21"},"nodeType":"YulFunctionCall","src":"1992:49:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:21"},"nodeType":"YulFunctionCall","src":"1976:66:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:21:21"},"nodeType":"YulExpressionStatement","src":"2051:21:21"},{"nodeType":"YulVariableDeclaration","src":"2081:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:21"},"nodeType":"YulFunctionCall","src":"2092:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:21"},"nodeType":"YulFunctionCall","src":"2148:79:21"},"nodeType":"YulExpressionStatement","src":"2148:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:21"},"nodeType":"YulFunctionCall","src":"2123:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:21"},"nodeType":"YulFunctionCall","src":"2120:25:21"},"nodeType":"YulIf","src":"2117:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:21"},"nodeType":"YulFunctionCall","src":"2238:52:21"},"nodeType":"YulExpressionStatement","src":"2238:52:21"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:21","type":""}],"src":"1862:434:21"},{"body":{"nodeType":"YulBlock","src":"2389:282:21","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:21"},"nodeType":"YulFunctionCall","src":"2440:79:21"},"nodeType":"YulExpressionStatement","src":"2440:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:21"},"nodeType":"YulFunctionCall","src":"2413:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:21"},"nodeType":"YulFunctionCall","src":"2409:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:21"},"nodeType":"YulFunctionCall","src":"2402:35:21"},"nodeType":"YulIf","src":"2399:122:21"},{"nodeType":"YulVariableDeclaration","src":"2530:27:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:21"},"nodeType":"YulFunctionCall","src":"2544:13:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:21"},"nodeType":"YulFunctionCall","src":"2634:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:21"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:21"},"nodeType":"YulFunctionCall","src":"2575:90:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:21"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:21","type":""}],"src":"2316:355:21"},{"body":{"nodeType":"YulBlock","src":"2722:81:21","statements":[{"nodeType":"YulAssignment","src":"2732:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2754:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2743:3:21"},"nodeType":"YulFunctionCall","src":"2743:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:21","type":""}],"src":"2677:126:21"},{"body":{"nodeType":"YulBlock","src":"2854:51:21","statements":[{"nodeType":"YulAssignment","src":"2864:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2893:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2875:17:21"},"nodeType":"YulFunctionCall","src":"2875:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2864:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2836:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2846:7:21","type":""}],"src":"2809:96:21"},{"body":{"nodeType":"YulBlock","src":"2954:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"3011:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3013:6:21"},"nodeType":"YulFunctionCall","src":"3013:12:21"},"nodeType":"YulExpressionStatement","src":"3013:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3002:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2984:17:21"},"nodeType":"YulFunctionCall","src":"2984:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2974:2:21"},"nodeType":"YulFunctionCall","src":"2974:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2967:6:21"},"nodeType":"YulFunctionCall","src":"2967:43:21"},"nodeType":"YulIf","src":"2964:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2947:5:21","type":""}],"src":"2911:122:21"},{"body":{"nodeType":"YulBlock","src":"3102:80:21","statements":[{"nodeType":"YulAssignment","src":"3112:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3127:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3121:5:21"},"nodeType":"YulFunctionCall","src":"3121:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3170:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3143:26:21"},"nodeType":"YulFunctionCall","src":"3143:33:21"},"nodeType":"YulExpressionStatement","src":"3143:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3080:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3088:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3096:5:21","type":""}],"src":"3039:143:21"},{"body":{"nodeType":"YulBlock","src":"3292:576:21","statements":[{"body":{"nodeType":"YulBlock","src":"3338:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3340:77:21"},"nodeType":"YulFunctionCall","src":"3340:79:21"},"nodeType":"YulExpressionStatement","src":"3340:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3313:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3322:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3309:3:21"},"nodeType":"YulFunctionCall","src":"3309:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"3334:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3305:3:21"},"nodeType":"YulFunctionCall","src":"3305:32:21"},"nodeType":"YulIf","src":"3302:119:21"},{"nodeType":"YulBlock","src":"3431:291:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3446:38:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3470:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3481:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3466:3:21"},"nodeType":"YulFunctionCall","src":"3466:17:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3460:5:21"},"nodeType":"YulFunctionCall","src":"3460:24:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3450:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3531:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3533:77:21"},"nodeType":"YulFunctionCall","src":"3533:79:21"},"nodeType":"YulExpressionStatement","src":"3533:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3503:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3511:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3500:2:21"},"nodeType":"YulFunctionCall","src":"3500:30:21"},"nodeType":"YulIf","src":"3497:117:21"},{"nodeType":"YulAssignment","src":"3628:84:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3684:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3695:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3680:3:21"},"nodeType":"YulFunctionCall","src":"3680:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3704:7:21"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3638:41:21"},"nodeType":"YulFunctionCall","src":"3638:74:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3628:6:21"}]}]},{"nodeType":"YulBlock","src":"3732:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3747:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3761:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3751:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3777:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3823:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3834:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3819:3:21"},"nodeType":"YulFunctionCall","src":"3819:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3843:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3787:31:21"},"nodeType":"YulFunctionCall","src":"3787:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3777:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3254:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3265:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3277:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3285:6:21","type":""}],"src":"3188:680:21"},{"body":{"nodeType":"YulBlock","src":"3933:40:21","statements":[{"nodeType":"YulAssignment","src":"3944:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3960:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3954:5:21"},"nodeType":"YulFunctionCall","src":"3954:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3944:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3916:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3926:6:21","type":""}],"src":"3874:99:21"},{"body":{"nodeType":"YulBlock","src":"4007:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4024:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4027:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4017:6:21"},"nodeType":"YulFunctionCall","src":"4017:88:21"},"nodeType":"YulExpressionStatement","src":"4017:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4121:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4124:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4114:6:21"},"nodeType":"YulFunctionCall","src":"4114:15:21"},"nodeType":"YulExpressionStatement","src":"4114:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4145:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4148:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4138:6:21"},"nodeType":"YulFunctionCall","src":"4138:15:21"},"nodeType":"YulExpressionStatement","src":"4138:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3979:180:21"},{"body":{"nodeType":"YulBlock","src":"4216:269:21","statements":[{"nodeType":"YulAssignment","src":"4226:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4240:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"4246:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4236:3:21"},"nodeType":"YulFunctionCall","src":"4236:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4226:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"4257:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4287:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"4293:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4283:3:21"},"nodeType":"YulFunctionCall","src":"4283:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4261:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4334:51:21","statements":[{"nodeType":"YulAssignment","src":"4348:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4362:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4370:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4358:3:21"},"nodeType":"YulFunctionCall","src":"4358:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4348:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4314:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4307:6:21"},"nodeType":"YulFunctionCall","src":"4307:26:21"},"nodeType":"YulIf","src":"4304:81:21"},{"body":{"nodeType":"YulBlock","src":"4437:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4451:16:21"},"nodeType":"YulFunctionCall","src":"4451:18:21"},"nodeType":"YulExpressionStatement","src":"4451:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4401:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4424:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4432:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4421:2:21"},"nodeType":"YulFunctionCall","src":"4421:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4398:2:21"},"nodeType":"YulFunctionCall","src":"4398:38:21"},"nodeType":"YulIf","src":"4395:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4200:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4209:6:21","type":""}],"src":"4165:320:21"},{"body":{"nodeType":"YulBlock","src":"4545:87:21","statements":[{"nodeType":"YulAssignment","src":"4555:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4563:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4555:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4583:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4586:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4576:6:21"},"nodeType":"YulFunctionCall","src":"4576:14:21"},"nodeType":"YulExpressionStatement","src":"4576:14:21"},{"nodeType":"YulAssignment","src":"4599:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4617:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4620:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4607:9:21"},"nodeType":"YulFunctionCall","src":"4607:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4599:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4532:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4540:4:21","type":""}],"src":"4491:141:21"},{"body":{"nodeType":"YulBlock","src":"4682:49:21","statements":[{"nodeType":"YulAssignment","src":"4692:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4710:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4717:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:21"},"nodeType":"YulFunctionCall","src":"4706:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4702:3:21"},"nodeType":"YulFunctionCall","src":"4702:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4665:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4675:6:21","type":""}],"src":"4638:93:21"},{"body":{"nodeType":"YulBlock","src":"4790:54:21","statements":[{"nodeType":"YulAssignment","src":"4800:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4825:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"4831:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4821:3:21"},"nodeType":"YulFunctionCall","src":"4821:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4800:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4765:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"4771:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4781:8:21","type":""}],"src":"4737:107:21"},{"body":{"nodeType":"YulBlock","src":"4926:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4957:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4969:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4953:3:21"},"nodeType":"YulFunctionCall","src":"4953:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4940:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4980:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5011:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5022:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4992:18:21"},"nodeType":"YulFunctionCall","src":"4992:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4984:4:21","type":""}]},{"nodeType":"YulAssignment","src":"5098:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5129:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5140:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5110:18:21"},"nodeType":"YulFunctionCall","src":"5110:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5098:8:21"}]},{"nodeType":"YulAssignment","src":"5158:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5171:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5182:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5178:3:21"},"nodeType":"YulFunctionCall","src":"5178:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5167:3:21"},"nodeType":"YulFunctionCall","src":"5167:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5158:5:21"}]},{"nodeType":"YulAssignment","src":"5197:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5210:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5221:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"5231:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5217:3:21"},"nodeType":"YulFunctionCall","src":"5217:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5207:2:21"},"nodeType":"YulFunctionCall","src":"5207:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5197:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4887:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4894:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4906:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4919:6:21","type":""}],"src":"4850:393:21"},{"body":{"nodeType":"YulBlock","src":"5294:32:21","statements":[{"nodeType":"YulAssignment","src":"5304:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5315:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5304:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5276:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5286:7:21","type":""}],"src":"5249:77:21"},{"body":{"nodeType":"YulBlock","src":"5364:28:21","statements":[{"nodeType":"YulAssignment","src":"5374:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5381:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5374:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5350:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5360:3:21","type":""}],"src":"5332:60:21"},{"body":{"nodeType":"YulBlock","src":"5458:82:21","statements":[{"nodeType":"YulAssignment","src":"5468:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5526:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5508:17:21"},"nodeType":"YulFunctionCall","src":"5508:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5499:8:21"},"nodeType":"YulFunctionCall","src":"5499:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:21"},"nodeType":"YulFunctionCall","src":"5481:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5468:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5438:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5448:9:21","type":""}],"src":"5398:142:21"},{"body":{"nodeType":"YulBlock","src":"5593:28:21","statements":[{"nodeType":"YulAssignment","src":"5603:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"5610:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5603:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5579:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5589:3:21","type":""}],"src":"5546:75:21"},{"body":{"nodeType":"YulBlock","src":"5703:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5713:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5768:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5737:30:21"},"nodeType":"YulFunctionCall","src":"5737:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5717:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5792:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5832:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5826:5:21"},"nodeType":"YulFunctionCall","src":"5826:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"5839:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5871:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5847:23:21"},"nodeType":"YulFunctionCall","src":"5847:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5798:27:21"},"nodeType":"YulFunctionCall","src":"5798:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5785:6:21"},"nodeType":"YulFunctionCall","src":"5785:105:21"},"nodeType":"YulExpressionStatement","src":"5785:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5680:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5686:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5694:7:21","type":""}],"src":"5627:269:21"},{"body":{"nodeType":"YulBlock","src":"5951:24:21","statements":[{"nodeType":"YulAssignment","src":"5961:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5968:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5961:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5947:3:21","type":""}],"src":"5902:73:21"},{"body":{"nodeType":"YulBlock","src":"6034:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6044:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6058:30:21"},"nodeType":"YulFunctionCall","src":"6058:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6048:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6143:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6149:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6157:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6099:43:21"},"nodeType":"YulFunctionCall","src":"6099:65:21"},"nodeType":"YulExpressionStatement","src":"6099:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6020:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6026:6:21","type":""}],"src":"5981:189:21"},{"body":{"nodeType":"YulBlock","src":"6226:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"6293:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6337:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6344:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6307:29:21"},"nodeType":"YulFunctionCall","src":"6307:39:21"},"nodeType":"YulExpressionStatement","src":"6307:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6246:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"6253:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6243:2:21"},"nodeType":"YulFunctionCall","src":"6243:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6258:26:21","statements":[{"nodeType":"YulAssignment","src":"6260:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6273:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"6280:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:21"},"nodeType":"YulFunctionCall","src":"6269:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6260:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"6240:2:21","statements":[]},"src":"6236:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6214:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6221:3:21","type":""}],"src":"6176:186:21"},{"body":{"nodeType":"YulBlock","src":"6447:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"6473:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6487:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6535:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6503:31:21"},"nodeType":"YulFunctionCall","src":"6503:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6491:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6554:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6577:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6605:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6587:17:21"},"nodeType":"YulFunctionCall","src":"6587:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6573:3:21"},"nodeType":"YulFunctionCall","src":"6573:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6558:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"6774:27:21","statements":[{"nodeType":"YulAssignment","src":"6776:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6791:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6776:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6758:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"6770:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6755:2:21"},"nodeType":"YulFunctionCall","src":"6755:18:21"},"nodeType":"YulIf","src":"6752:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6843:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6860:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6888:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6870:17:21"},"nodeType":"YulFunctionCall","src":"6870:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6856:3:21"},"nodeType":"YulFunctionCall","src":"6856:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6814:28:21"},"nodeType":"YulFunctionCall","src":"6814:80:21"},"nodeType":"YulExpressionStatement","src":"6814:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6464:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"6469:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6461:2:21"},"nodeType":"YulFunctionCall","src":"6461:11:21"},"nodeType":"YulIf","src":"6458:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6423:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"6430:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6435:10:21","type":""}],"src":"6368:543:21"},{"body":{"nodeType":"YulBlock","src":"6980:54:21","statements":[{"nodeType":"YulAssignment","src":"6990:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7015:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"7021:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7011:3:21"},"nodeType":"YulFunctionCall","src":"7011:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6990:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6955:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"6961:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6971:8:21","type":""}],"src":"6917:117:21"},{"body":{"nodeType":"YulBlock","src":"7091:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7101:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7150:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7153:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7146:3:21"},"nodeType":"YulFunctionCall","src":"7146:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7165:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7161:3:21"},"nodeType":"YulFunctionCall","src":"7161:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7117:28:21"},"nodeType":"YulFunctionCall","src":"7117:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7113:3:21"},"nodeType":"YulFunctionCall","src":"7113:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7105:4:21","type":""}]},{"nodeType":"YulAssignment","src":"7178:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7192:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"7198:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7188:3:21"},"nodeType":"YulFunctionCall","src":"7188:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7178:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7068:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7074:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7084:6:21","type":""}],"src":"7040:169:21"},{"body":{"nodeType":"YulBlock","src":"7295:214:21","statements":[{"nodeType":"YulAssignment","src":"7428:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7455:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"7461:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7436:18:21"},"nodeType":"YulFunctionCall","src":"7436:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:21"}]},{"nodeType":"YulAssignment","src":"7474:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7485:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7495:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7498:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7491:3:21"},"nodeType":"YulFunctionCall","src":"7491:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7482:2:21"},"nodeType":"YulFunctionCall","src":"7482:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7474:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7276:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"7282:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7290:4:21","type":""}],"src":"7214:295:21"},{"body":{"nodeType":"YulBlock","src":"7606:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7617:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7664:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7631:32:21"},"nodeType":"YulFunctionCall","src":"7631:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7621:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7753:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7755:16:21"},"nodeType":"YulFunctionCall","src":"7755:18:21"},"nodeType":"YulExpressionStatement","src":"7755:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7725:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7733:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7722:2:21"},"nodeType":"YulFunctionCall","src":"7722:30:21"},"nodeType":"YulIf","src":"7719:56:21"},{"nodeType":"YulVariableDeclaration","src":"7785:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7831:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7825:5:21"},"nodeType":"YulFunctionCall","src":"7825:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7799:25:21"},"nodeType":"YulFunctionCall","src":"7799:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7789:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7930:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7936:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"7944:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7884:45:21"},"nodeType":"YulFunctionCall","src":"7884:67:21"},"nodeType":"YulExpressionStatement","src":"7884:67:21"},{"nodeType":"YulVariableDeclaration","src":"7961:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7978:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7965:9:21","type":""}]},{"nodeType":"YulAssignment","src":"7989:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8002:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7989:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8053:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8067:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8086:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8098:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8094:3:21"},"nodeType":"YulFunctionCall","src":"8094:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8082:3:21"},"nodeType":"YulFunctionCall","src":"8082:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8071:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8118:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8164:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8132:31:21"},"nodeType":"YulFunctionCall","src":"8132:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8122:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8182:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8191:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8186:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8250:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8275:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8293:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8298:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8289:3:21"},"nodeType":"YulFunctionCall","src":"8289:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8283:5:21"},"nodeType":"YulFunctionCall","src":"8283:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8268:6:21"},"nodeType":"YulFunctionCall","src":"8268:42:21"},"nodeType":"YulExpressionStatement","src":"8268:42:21"},{"nodeType":"YulAssignment","src":"8327:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8341:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8349:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:21"},"nodeType":"YulFunctionCall","src":"8337:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8327:6:21"}]},{"nodeType":"YulAssignment","src":"8368:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8385:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8396:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8381:3:21"},"nodeType":"YulFunctionCall","src":"8381:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8368:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8216:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8219:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:21"},"nodeType":"YulFunctionCall","src":"8213:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8228:21:21","statements":[{"nodeType":"YulAssignment","src":"8230:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8239:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"8242:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8235:3:21"},"nodeType":"YulFunctionCall","src":"8235:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8230:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"8209:3:21","statements":[]},"src":"8205:208:21"},{"body":{"nodeType":"YulBlock","src":"8449:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8467:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8494:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8499:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:21"},"nodeType":"YulFunctionCall","src":"8490:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8484:5:21"},"nodeType":"YulFunctionCall","src":"8484:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8471:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8534:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8561:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8576:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8584:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8572:3:21"},"nodeType":"YulFunctionCall","src":"8572:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8542:18:21"},"nodeType":"YulFunctionCall","src":"8542:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8527:6:21"},"nodeType":"YulFunctionCall","src":"8527:64:21"},"nodeType":"YulExpressionStatement","src":"8527:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8432:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8441:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8429:2:21"},"nodeType":"YulFunctionCall","src":"8429:19:21"},"nodeType":"YulIf","src":"8426:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8625:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8639:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8647:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8635:3:21"},"nodeType":"YulFunctionCall","src":"8635:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"8651:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:21"},"nodeType":"YulFunctionCall","src":"8631:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8618:6:21"},"nodeType":"YulFunctionCall","src":"8618:36:21"},"nodeType":"YulExpressionStatement","src":"8618:36:21"}]},"nodeType":"YulCase","src":"8046:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8051:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8681:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8695:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8708:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8699:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8732:67:21","statements":[{"nodeType":"YulAssignment","src":"8750:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8769:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8774:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8765:3:21"},"nodeType":"YulFunctionCall","src":"8765:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8759:5:21"},"nodeType":"YulFunctionCall","src":"8759:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8750:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8725:6:21"},"nodeType":"YulIf","src":"8722:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8819:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8878:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"8885:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8825:52:21"},"nodeType":"YulFunctionCall","src":"8825:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8812:6:21"},"nodeType":"YulFunctionCall","src":"8812:81:21"},"nodeType":"YulExpressionStatement","src":"8812:81:21"}]},"nodeType":"YulCase","src":"8673:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8026:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8034:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8023:2:21"},"nodeType":"YulFunctionCall","src":"8023:14:21"},"nodeType":"YulSwitch","src":"8016:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7595:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"7601:3:21","type":""}],"src":"7514:1395:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620036ea380380620036ea83398181016040528101906200003791906200041f565b8162000049816200009b60201b60201c565b506200005f6000801b82620000b060201b60201c565b50620000927f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682620000b060201b60201c565b505050620007b7565b8060029081620000ac9190620006d0565b5050565b6000620000c48383620001b460201b60201c565b620001a95760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001456200021f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050620001ae565b600090505b92915050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002908262000245565b810181811067ffffffffffffffff82111715620002b257620002b162000256565b5b80604052505050565b6000620002c762000227565b9050620002d5828262000285565b919050565b600067ffffffffffffffff821115620002f857620002f762000256565b5b620003038262000245565b9050602081019050919050565b60005b838110156200033057808201518184015260208101905062000313565b60008484015250505050565b6000620003536200034d84620002da565b620002bb565b90508281526020810184848401111562000372576200037162000240565b5b6200037f84828562000310565b509392505050565b600082601f8301126200039f576200039e6200023b565b5b8151620003b18482602086016200033c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003e782620003ba565b9050919050565b620003f981620003da565b81146200040557600080fd5b50565b6000815190506200041981620003ee565b92915050565b6000806040838503121562000439576200043862000231565b5b600083015167ffffffffffffffff8111156200045a576200045962000236565b5b620004688582860162000387565b92505060206200047b8582860162000408565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004d857607f821691505b602082108103620004ee57620004ed62000490565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005587fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000519565b62000564868362000519565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620005b1620005ab620005a5846200057c565b62000586565b6200057c565b9050919050565b6000819050919050565b620005cd8362000590565b620005e5620005dc82620005b8565b84845462000526565b825550505050565b600090565b620005fc620005ed565b62000609818484620005c2565b505050565b5b81811015620006315762000625600082620005f2565b6001810190506200060f565b5050565b601f82111562000680576200064a81620004f4565b620006558462000509565b8101602085101562000665578190505b6200067d620006748562000509565b8301826200060e565b50505b505050565b600082821c905092915050565b6000620006a56000198460080262000685565b1980831691505092915050565b6000620006c0838362000692565b9150826002028217905092915050565b620006db8262000485565b67ffffffffffffffff811115620006f757620006f662000256565b5b620007038254620004bf565b6200071082828562000635565b600060209050601f83116001811462000748576000841562000733578287015190505b6200073f8582620006b2565b865550620007af565b601f1984166200075886620004f4565b60005b8281101562000782578489015182556001820191506020850194506020810190506200075b565b86831015620007a257848901516200079e601f89168262000692565b8355505b6001600288020188555050505b505050505050565b612f2380620007c76000396000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c80635509dc1b116100b8578063a217fddf1161007c578063a217fddf146103ce578063a22cb465146103ec578063d539139314610408578063d547741f14610426578063e985e9c514610442578063f242432a1461047257610141565b80635509dc1b146103065780635ce695f1146103225780636eb2be00146103525780637bbdff8b1461038257806391d148541461039e57610141565b8063248a9ca31161010a578063248a9ca3146102225780632eb2c2d6146102525780632f2ff15d1461026e57806336568abe1461028a5780634dd6c8de146102a65780634e1273f4146102d657610141565b8062fdd58e1461014657806301ffc9a71461017657806302fe5305146101a65780630e89341c146101c257806313ba55df146101f2575b600080fd5b610160600480360381019061015b9190611b73565b61048e565b60405161016d9190611bc2565b60405180910390f35b610190600480360381019061018b9190611c35565b6104e8565b60405161019d9190611c7d565b60405180910390f35b6101c060048036038101906101bb9190611cfd565b6104fa565b005b6101dc60048036038101906101d79190611d4a565b610559565b6040516101e99190611e07565b60405180910390f35b61020c60048036038101906102079190611d4a565b6105ed565b6040516102199190611bc2565b60405180910390f35b61023c60048036038101906102379190611e5f565b610605565b6040516102499190611e9b565b60405180910390f35b61026c600480360381019061026791906120a9565b610625565b005b61028860048036038101906102839190612178565b610660565b005b6102a4600480360381019061029f9190612178565b610682565b005b6102c060048036038101906102bb9190611b73565b6106fd565b6040516102cd9190611c7d565b60405180910390f35b6102f060048036038101906102eb919061227b565b61072c565b6040516102fd91906123b1565b60405180910390f35b610320600480360381019061031b919061240d565b61083b565b005b61033c60048036038101906103379190612460565b6108b5565b6040516103499190611bc2565b60405180910390f35b61036c60048036038101906103679190611d4a565b6108eb565b6040516103799190611bc2565b60405180910390f35b61039c6004803603810190610397919061240d565b610903565b005b6103b860048036038101906103b39190612178565b610b7e565b6040516103c59190611c7d565b60405180910390f35b6103d6610be9565b6040516103e39190611e9b565b60405180910390f35b610406600480360381019061040191906124cc565b610bf0565b005b610410610c2b565b60405161041d9190611e9b565b60405180910390f35b610440600480360381019061043b9190612178565b610c4f565b005b61045c6004803603810190610457919061250c565b610c71565b6040516104699190611c7d565b60405180910390f35b61048c6004803603810190610487919061254c565b610d05565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006104f382610d40565b9050919050565b6000801b61050781610dba565b61055483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dce565b505050565b60606002805461056890612612565b80601f016020809104026020016040519081016040528092919081815260200182805461059490612612565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050509050919050565b60056020528060005260406000206000915090505481565b600060036000838152602001908152602001600020600101549050919050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106579061268f565b60405180910390fd5b61066982610605565b61067281610dba565b61067c8383610de1565b50505050565b61068a610ed3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f88282610edb565b505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060815183511461077857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161076f9291906126af565b60405180910390fd5b6000835167ffffffffffffffff81111561079557610794611eb6565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b50905060005b8451811015610830576108006107e88287610fce90919063ffffffff16565b6107fb8387610fe290919063ffffffff16565b61048e565b828281518110610813576108126126d8565b5b6020026020010181815250508061082990612736565b90506107c9565b508091505092915050565b6000801b61084881610dba565b600061085484846108b5565b90506001610862868361048e565b146108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610899906127ca565b60405180910390fd5b6108ae85826001610ff6565b5050505050565b600082826040516020016108ca929190612898565b6040516020818303038152906040528051906020012060001c905092915050565b60066020528060005260406000206000915090505481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661092d81610dba565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109939061291b565b60405180910390fd5b60006109a884846108b5565b9050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90612987565b60405180910390fd5b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610acd858260016040518060200160405280600081525061109d565b6001600560008381526020019081526020016000206000828254610af191906129a7565b925050819055506001600660008681526020019081526020016000206000828254610b1c91906129a7565b925050819055508261ffff16848673ffffffffffffffffffffffffffffffffffffffff167fc5e4f97f4e1ac5c9db12a9e39353b3c61176f2578fe4145a469276997597fba184604051610b6f9190611bc2565b60405180910390a45050505050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290612a27565b60405180910390fd5b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c5882610605565b610c6181610dba565b610c6b8383610edb565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d379061268f565b60405180910390fd5b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610db35750610db282611136565b5b9050919050565b610dcb81610dc6610ed3565b611218565b50565b8060029081610ddd9190612bf3565b5050565b6000610ded8383610b7e565b610ec85760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e65610ed3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ecd565b600090505b92915050565b600033905090565b6000610ee78383610b7e565b15610fc35760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f60610ed3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610fc8565b600090505b92915050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110685760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161105f9190612cd4565b60405180910390fd5b6000806110758484611269565b91509150611096856000848460405180602001604052806000815250611299565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361110f5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111069190612cd4565b60405180910390fd5b60008061111c8585611269565b9150915061112e600087848487611299565b505050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061120157507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061121157506112108261134b565b5b9050919050565b6112228282610b7e565b6112655780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161125c929190612cef565b60405180910390fd5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6112a5858585856113b5565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146113445760006112e3610ed3565b90506001845103611333576000611304600086610fe290919063ffffffff16565b9050600061131c600086610fe290919063ffffffff16565b905061132c838989858589611763565b5050611342565b611341818787878787611917565b5b505b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b80518251146113ff57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016113f69291906126af565b60405180910390fd5b6000611409610ed3565b905060005b835181101561161e57600061142c8286610fe290919063ffffffff16565b905060006114438386610fe290919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461157057600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561151857888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161150f9493929190612d18565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461160b578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461160391906129a7565b925050819055505b50508061161790612736565b905061140e565b5060018351036116dd57600061163e600085610fe290919063ffffffff16565b90506000611656600085610fe290919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516116ce9291906126af565b60405180910390a4505061175c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611753929190612d5d565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561190f578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016117c4959493929190612de9565b6020604051808303816000875af192505050801561180057506040513d601f19601f820116820180604052508101906117fd9190612e58565b60015b611884573d8060008114611830576040519150601f19603f3d011682016040523d82523d6000602084013e611835565b606091505b50600081510361187c57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016118739190612cd4565b60405180910390fd5b805160208201fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461190d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016119049190612cd4565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611ac3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611978959493929190612e85565b6020604051808303816000875af19250505080156119b457506040513d601f19601f820116820180604052508101906119b19190612e58565b60015b611a38573d80600081146119e4576040519150601f19603f3d011682016040523d82523d6000602084013e6119e9565b606091505b506000815103611a3057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a279190612cd4565b60405180910390fd5b805160208201fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ac157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ab89190612cd4565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0a82611adf565b9050919050565b611b1a81611aff565b8114611b2557600080fd5b50565b600081359050611b3781611b11565b92915050565b6000819050919050565b611b5081611b3d565b8114611b5b57600080fd5b50565b600081359050611b6d81611b47565b92915050565b60008060408385031215611b8a57611b89611ad5565b5b6000611b9885828601611b28565b9250506020611ba985828601611b5e565b9150509250929050565b611bbc81611b3d565b82525050565b6000602082019050611bd76000830184611bb3565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c1281611bdd565b8114611c1d57600080fd5b50565b600081359050611c2f81611c09565b92915050565b600060208284031215611c4b57611c4a611ad5565b5b6000611c5984828501611c20565b91505092915050565b60008115159050919050565b611c7781611c62565b82525050565b6000602082019050611c926000830184611c6e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611cbd57611cbc611c98565b5b8235905067ffffffffffffffff811115611cda57611cd9611c9d565b5b602083019150836001820283011115611cf657611cf5611ca2565b5b9250929050565b60008060208385031215611d1457611d13611ad5565b5b600083013567ffffffffffffffff811115611d3257611d31611ada565b5b611d3e85828601611ca7565b92509250509250929050565b600060208284031215611d6057611d5f611ad5565b5b6000611d6e84828501611b5e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611db1578082015181840152602081019050611d96565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dd982611d77565b611de38185611d82565b9350611df3818560208601611d93565b611dfc81611dbd565b840191505092915050565b60006020820190508181036000830152611e218184611dce565b905092915050565b6000819050919050565b611e3c81611e29565b8114611e4757600080fd5b50565b600081359050611e5981611e33565b92915050565b600060208284031215611e7557611e74611ad5565b5b6000611e8384828501611e4a565b91505092915050565b611e9581611e29565b82525050565b6000602082019050611eb06000830184611e8c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eee82611dbd565b810181811067ffffffffffffffff82111715611f0d57611f0c611eb6565b5b80604052505050565b6000611f20611acb565b9050611f2c8282611ee5565b919050565b600067ffffffffffffffff821115611f4c57611f4b611eb6565b5b602082029050602081019050919050565b6000611f70611f6b84611f31565b611f16565b90508083825260208201905060208402830185811115611f9357611f92611ca2565b5b835b81811015611fbc5780611fa88882611b5e565b845260208401935050602081019050611f95565b5050509392505050565b600082601f830112611fdb57611fda611c98565b5b8135611feb848260208601611f5d565b91505092915050565b600080fd5b600067ffffffffffffffff82111561201457612013611eb6565b5b61201d82611dbd565b9050602081019050919050565b82818337600083830152505050565b600061204c61204784611ff9565b611f16565b90508281526020810184848401111561206857612067611ff4565b5b61207384828561202a565b509392505050565b600082601f8301126120905761208f611c98565b5b81356120a0848260208601612039565b91505092915050565b600080600080600060a086880312156120c5576120c4611ad5565b5b60006120d388828901611b28565b95505060206120e488828901611b28565b945050604086013567ffffffffffffffff81111561210557612104611ada565b5b61211188828901611fc6565b935050606086013567ffffffffffffffff81111561213257612131611ada565b5b61213e88828901611fc6565b925050608086013567ffffffffffffffff81111561215f5761215e611ada565b5b61216b8882890161207b565b9150509295509295909350565b6000806040838503121561218f5761218e611ad5565b5b600061219d85828601611e4a565b92505060206121ae85828601611b28565b9150509250929050565b600067ffffffffffffffff8211156121d3576121d2611eb6565b5b602082029050602081019050919050565b60006121f76121f2846121b8565b611f16565b9050808382526020820190506020840283018581111561221a57612219611ca2565b5b835b81811015612243578061222f8882611b28565b84526020840193505060208101905061221c565b5050509392505050565b600082601f83011261226257612261611c98565b5b81356122728482602086016121e4565b91505092915050565b6000806040838503121561229257612291611ad5565b5b600083013567ffffffffffffffff8111156122b0576122af611ada565b5b6122bc8582860161224d565b925050602083013567ffffffffffffffff8111156122dd576122dc611ada565b5b6122e985828601611fc6565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61232881611b3d565b82525050565b600061233a838361231f565b60208301905092915050565b6000602082019050919050565b600061235e826122f3565b61236881856122fe565b93506123738361230f565b8060005b838110156123a457815161238b888261232e565b975061239683612346565b925050600181019050612377565b5085935050505092915050565b600060208201905081810360008301526123cb8184612353565b905092915050565b600061ffff82169050919050565b6123ea816123d3565b81146123f557600080fd5b50565b600081359050612407816123e1565b92915050565b60008060006060848603121561242657612425611ad5565b5b600061243486828701611b28565b935050602061244586828701611b5e565b9250506040612456868287016123f8565b9150509250925092565b6000806040838503121561247757612476611ad5565b5b600061248585828601611b5e565b9250506020612496858286016123f8565b9150509250929050565b6124a981611c62565b81146124b457600080fd5b50565b6000813590506124c6816124a0565b92915050565b600080604083850312156124e3576124e2611ad5565b5b60006124f185828601611b28565b9250506020612502858286016124b7565b9150509250929050565b6000806040838503121561252357612522611ad5565b5b600061253185828601611b28565b925050602061254285828601611b28565b9150509250929050565b600080600080600060a0868803121561256857612567611ad5565b5b600061257688828901611b28565b955050602061258788828901611b28565b945050604061259888828901611b5e565b93505060606125a988828901611b5e565b925050608086013567ffffffffffffffff8111156125ca576125c9611ada565b5b6125d68882890161207b565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061262a57607f821691505b60208210810361263d5761263c6125e3565b5b50919050565b7f536f756c626f756e643a206e6f6e2d7472616e7366657261626c650000000000600082015250565b6000612679601b83611d82565b915061268482612643565b602082019050919050565b600060208201905081810360008301526126a88161266c565b9050919050565b60006040820190506126c46000830185611bb3565b6126d16020830184611bb3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061274182611b3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361277357612772612707565b5b600182019050919050565b7f4e6f206261646765000000000000000000000000000000000000000000000000600082015250565b60006127b4600883611d82565b91506127bf8261277e565b602082019050919050565b600060208201905081810360008301526127e3816127a7565b9050919050565b600081905092915050565b7f52454d454d4252414e43455f4241444745000000000000000000000000000000600082015250565b600061282b6011836127ea565b9150612836826127f5565b601182019050919050565b6000819050919050565b61285c61285782611b3d565b612841565b82525050565b60008160f01b9050919050565b600061287a82612862565b9050919050565b61289261288d826123d3565b61286f565b82525050565b60006128a38261281e565b91506128af828561284b565b6020820191506128bf8284612881565b6002820191508190509392505050565b7f42616420726563697069656e7400000000000000000000000000000000000000600082015250565b6000612905600d83611d82565b9150612910826128cf565b602082019050919050565b60006020820190508181036000830152612934816128f8565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000612971600f83611d82565b915061297c8261293b565b602082019050919050565b600060208201905081810360008301526129a081612964565b9050919050565b60006129b282611b3d565b91506129bd83611b3d565b92508282019050808211156129d5576129d4612707565b5b92915050565b7f536f756c626f756e643a20617070726f76616c732064697361626c6564000000600082015250565b6000612a11601d83611d82565b9150612a1c826129db565b602082019050919050565b60006020820190508181036000830152612a4081612a04565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612aa97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a6c565b612ab38683612a6c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612af0612aeb612ae684611b3d565b612acb565b611b3d565b9050919050565b6000819050919050565b612b0a83612ad5565b612b1e612b1682612af7565b848454612a79565b825550505050565b600090565b612b33612b26565b612b3e818484612b01565b505050565b5b81811015612b6257612b57600082612b2b565b600181019050612b44565b5050565b601f821115612ba757612b7881612a47565b612b8184612a5c565b81016020851015612b90578190505b612ba4612b9c85612a5c565b830182612b43565b50505b505050565b600082821c905092915050565b6000612bca60001984600802612bac565b1980831691505092915050565b6000612be38383612bb9565b9150826002028217905092915050565b612bfc82611d77565b67ffffffffffffffff811115612c1557612c14611eb6565b5b612c1f8254612612565b612c2a828285612b66565b600060209050601f831160018114612c5d5760008415612c4b578287015190505b612c558582612bd7565b865550612cbd565b601f198416612c6b86612a47565b60005b82811015612c9357848901518255600182019150602085019450602081019050612c6e565b86831015612cb05784890151612cac601f891682612bb9565b8355505b6001600288020188555050505b505050505050565b612cce81611aff565b82525050565b6000602082019050612ce96000830184612cc5565b92915050565b6000604082019050612d046000830185612cc5565b612d116020830184611e8c565b9392505050565b6000608082019050612d2d6000830187612cc5565b612d3a6020830186611bb3565b612d476040830185611bb3565b612d546060830184611bb3565b95945050505050565b60006040820190508181036000830152612d778185612353565b90508181036020830152612d8b8184612353565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000612dbb82612d94565b612dc58185612d9f565b9350612dd5818560208601611d93565b612dde81611dbd565b840191505092915050565b600060a082019050612dfe6000830188612cc5565b612e0b6020830187612cc5565b612e186040830186611bb3565b612e256060830185611bb3565b8181036080830152612e378184612db0565b90509695505050505050565b600081519050612e5281611c09565b92915050565b600060208284031215612e6e57612e6d611ad5565b5b6000612e7c84828501612e43565b91505092915050565b600060a082019050612e9a6000830188612cc5565b612ea76020830187612cc5565b8181036040830152612eb98186612353565b90508181036060830152612ecd8185612353565b90508181036080830152612ee18184612db0565b9050969550505050505056fea26469706673582212205097f3481e1905344651492dcae0730843ec9aef94892583795ac6c25d3ed73c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x36EA CODESIZE SUB DUP1 PUSH3 0x36EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x41F JUMP JUMPDEST DUP2 PUSH3 0x49 DUP2 PUSH3 0x9B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5F PUSH1 0x0 DUP1 SHL DUP3 PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x92 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0xB0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x7B7 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xAC SWAP2 SWAP1 PUSH3 0x6D0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC4 DUP4 DUP4 PUSH3 0x1B4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1A9 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x145 PUSH3 0x21F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x1AE JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x290 DUP3 PUSH3 0x245 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x2B2 JUMPI PUSH3 0x2B1 PUSH3 0x256 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C7 PUSH3 0x227 JUMP JUMPDEST SWAP1 POP PUSH3 0x2D5 DUP3 DUP3 PUSH3 0x285 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x2F8 JUMPI PUSH3 0x2F7 PUSH3 0x256 JUMP JUMPDEST JUMPDEST PUSH3 0x303 DUP3 PUSH3 0x245 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x330 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x313 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x353 PUSH3 0x34D DUP5 PUSH3 0x2DA JUMP JUMPDEST PUSH3 0x2BB JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x372 JUMPI PUSH3 0x371 PUSH3 0x240 JUMP JUMPDEST JUMPDEST PUSH3 0x37F DUP5 DUP3 DUP6 PUSH3 0x310 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x39F JUMPI PUSH3 0x39E PUSH3 0x23B JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x3B1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x33C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP3 PUSH3 0x3BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3F9 DUP2 PUSH3 0x3DA JUMP JUMPDEST DUP2 EQ PUSH3 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x419 DUP2 PUSH3 0x3EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x439 JUMPI PUSH3 0x438 PUSH3 0x231 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x45A JUMPI PUSH3 0x459 PUSH3 0x236 JUMP JUMPDEST JUMPDEST PUSH3 0x468 DUP6 DUP3 DUP7 ADD PUSH3 0x387 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x47B DUP6 DUP3 DUP7 ADD PUSH3 0x408 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4D8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4EE JUMPI PUSH3 0x4ED PUSH3 0x490 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x558 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x519 JUMP JUMPDEST PUSH3 0x564 DUP7 DUP4 PUSH3 0x519 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5B1 PUSH3 0x5AB PUSH3 0x5A5 DUP5 PUSH3 0x57C JUMP JUMPDEST PUSH3 0x586 JUMP JUMPDEST PUSH3 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5CD DUP4 PUSH3 0x590 JUMP JUMPDEST PUSH3 0x5E5 PUSH3 0x5DC DUP3 PUSH3 0x5B8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x526 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5FC PUSH3 0x5ED JUMP JUMPDEST PUSH3 0x609 DUP2 DUP5 DUP5 PUSH3 0x5C2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x631 JUMPI PUSH3 0x625 PUSH1 0x0 DUP3 PUSH3 0x5F2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x60F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x680 JUMPI PUSH3 0x64A DUP2 PUSH3 0x4F4 JUMP JUMPDEST PUSH3 0x655 DUP5 PUSH3 0x509 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x665 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x67D PUSH3 0x674 DUP6 PUSH3 0x509 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x60E JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6A5 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x685 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6C0 DUP4 DUP4 PUSH3 0x692 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6DB DUP3 PUSH3 0x485 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6F7 JUMPI PUSH3 0x6F6 PUSH3 0x256 JUMP JUMPDEST JUMPDEST PUSH3 0x703 DUP3 SLOAD PUSH3 0x4BF JUMP JUMPDEST PUSH3 0x710 DUP3 DUP3 DUP6 PUSH3 0x635 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x748 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x733 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x73F DUP6 DUP3 PUSH3 0x6B2 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x7AF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x758 DUP7 PUSH3 0x4F4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x782 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x75B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x7A2 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x79E PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x692 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F23 DUP1 PUSH3 0x7C7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5509DC1B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x472 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x5509DC1B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x5CE695F1 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x6EB2BE00 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x7BBDFF8B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39E JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x4DD6C8DE EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2D6 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x13BA55DF EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x507 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x554 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x2612 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x594 SWAP1 PUSH2 0x2612 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x669 DUP3 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x672 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x67C DUP4 DUP4 PUSH2 0xDE1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x68A PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP3 DUP3 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x778 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x830 JUMPI PUSH2 0x800 PUSH2 0x7E8 DUP3 DUP8 PUSH2 0xFCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7FB DUP4 DUP8 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x813 JUMPI PUSH2 0x812 PUSH2 0x26D8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x829 SWAP1 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x848 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP5 DUP5 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH2 0x862 DUP7 DUP4 PUSH2 0x48E JUMP JUMPDEST EQ PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP1 PUSH2 0x27CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AE DUP6 DUP3 PUSH1 0x1 PUSH2 0xFF6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CA SWAP3 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x92D DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A8 DUP5 DUP5 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xACD DUP6 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x109D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5E4F97F4E1AC5C9DB12A9E39353B3C61176F2578FE4145A469276997597FBA1 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC58 DUP3 PUSH2 0x605 JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xC6B DUP4 DUP4 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDB3 JUMPI POP PUSH2 0xDB2 DUP3 PUSH2 0x1136 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCB DUP2 PUSH2 0xDC6 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x1218 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDED DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xEC8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE65 PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE7 DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF60 PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1068 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1075 DUP5 DUP5 PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1096 DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111C DUP6 DUP6 PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x112E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1201 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1211 JUMPI POP PUSH2 0x1210 DUP3 PUSH2 0x134B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP3 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0x1265 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP3 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A5 DUP6 DUP6 DUP6 DUP6 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH2 0x12E3 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1333 JUMPI PUSH1 0x0 PUSH2 0x1304 PUSH1 0x0 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131C PUSH1 0x0 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x132C DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1763 JUMP JUMPDEST POP POP PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1341 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1917 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x13FF JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F6 SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1409 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 PUSH2 0x142C DUP3 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1443 DUP4 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1570 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1518 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x160B JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1617 SWAP1 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP PUSH2 0x140E JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x16DD JUMPI PUSH1 0x0 PUSH2 0x163E PUSH1 0x0 DUP6 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1656 PUSH1 0x0 DUP6 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16CE SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x175C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP3 SWAP2 SWAP1 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x190F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1800 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1884 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1830 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x187C JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1873 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x190D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AC3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19B4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B1 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A38 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A30 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1AC1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB8 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0A DUP3 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1A DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B37 DUP2 PUSH2 0x1B11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B50 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6D DUP2 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8A JUMPI PUSH2 0x1B89 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B98 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBC DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C12 DUP2 PUSH2 0x1BDD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2F DUP2 PUSH2 0x1C09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH2 0x1C4A PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP5 DUP3 DUP6 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x1C62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C92 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x1D3E DUP6 DUP3 DUP7 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D60 JUMPI PUSH2 0x1D5F PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP5 DUP3 DUP6 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x1D82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1DBD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0x1E29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E59 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E83 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E95 DUP2 PUSH2 0x1E29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EEE DUP3 PUSH2 0x1DBD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F20 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2C DUP3 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 PUSH2 0x1F6B DUP5 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FBC JUMPI DUP1 PUSH2 0x1FA8 DUP9 DUP3 PUSH2 0x1B5E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F95 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FEB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2014 JUMPI PUSH2 0x2013 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x201D DUP3 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204C PUSH2 0x2047 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2073 DUP5 DUP3 DUP6 PUSH2 0x202A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D3 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20E4 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2104 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x2111 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x213E DUP9 DUP3 DUP10 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x216B DUP9 DUP3 DUP10 ADD PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x218F JUMPI PUSH2 0x218E PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x219D DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21AE DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D3 JUMPI PUSH2 0x21D2 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F7 PUSH2 0x21F2 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2243 JUMPI DUP1 PUSH2 0x222F DUP9 DUP3 PUSH2 0x1B28 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x221C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2262 JUMPI PUSH2 0x2261 PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2272 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x22BC DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x22E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233A DUP4 DUP4 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x2368 DUP2 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2373 DUP4 PUSH2 0x230F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23A4 JUMPI DUP2 MLOAD PUSH2 0x238B DUP9 DUP3 PUSH2 0x232E JUMP JUMPDEST SWAP8 POP PUSH2 0x2396 DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2377 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CB DUP2 DUP5 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23EA DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x23F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2407 DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2426 JUMPI PUSH2 0x2425 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2434 DUP7 DUP3 DUP8 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2445 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2456 DUP7 DUP3 DUP8 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2477 JUMPI PUSH2 0x2476 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2485 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2496 DUP6 DUP3 DUP7 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x1C62 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C6 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E3 JUMPI PUSH2 0x24E2 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2531 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2542 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH2 0x2567 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2576 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2587 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2598 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x25A9 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CA JUMPI PUSH2 0x25C9 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x25D6 DUP9 DUP3 DUP10 ADD PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x262A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x263D JUMPI PUSH2 0x263C PUSH2 0x25E3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F756C626F756E643A206E6F6E2D7472616E7366657261626C650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2679 PUSH1 0x1B DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2684 DUP3 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A8 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x26D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2741 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2773 JUMPI PUSH2 0x2772 PUSH2 0x2707 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206261646765000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B4 PUSH1 0x8 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BF DUP3 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E3 DUP2 PUSH2 0x27A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52454D454D4252414E43455F4241444745000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282B PUSH1 0x11 DUP4 PUSH2 0x27EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2836 DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285C PUSH2 0x2857 DUP3 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x2841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287A DUP3 PUSH2 0x2862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2892 PUSH2 0x288D DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A3 DUP3 PUSH2 0x281E JUMP JUMPDEST SWAP2 POP PUSH2 0x28AF DUP3 DUP6 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x28BF DUP3 DUP5 PUSH2 0x2881 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42616420726563697069656E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2905 PUSH1 0xD DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2910 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2934 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2971 PUSH1 0xF DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x297C DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A0 DUP2 PUSH2 0x2964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B2 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH2 0x29BD DUP4 PUSH2 0x1B3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2707 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536F756C626F756E643A20617070726F76616C732064697361626C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A11 PUSH1 0x1D DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1C DUP3 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A40 DUP2 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AA9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x2AB3 DUP7 DUP4 PUSH2 0x2A6C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF0 PUSH2 0x2AEB PUSH2 0x2AE6 DUP5 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B0A DUP4 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2B1E PUSH2 0x2B16 DUP3 PUSH2 0x2AF7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A79 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2B33 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x2B3E DUP2 DUP5 DUP5 PUSH2 0x2B01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B62 JUMPI PUSH2 0x2B57 PUSH1 0x0 DUP3 PUSH2 0x2B2B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BA7 JUMPI PUSH2 0x2B78 DUP2 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2B81 DUP5 PUSH2 0x2A5C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B90 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BA4 PUSH2 0x2B9C DUP6 PUSH2 0x2A5C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B43 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BAC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE3 DUP4 DUP4 PUSH2 0x2BB9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BFC DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C15 JUMPI PUSH2 0x2C14 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x2C1F DUP3 SLOAD PUSH2 0x2612 JUMP JUMPDEST PUSH2 0x2C2A DUP3 DUP3 DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C5D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C4B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C55 DUP6 DUP3 PUSH2 0x2BD7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C6B DUP7 PUSH2 0x2A47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C93 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C6E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CB0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CAC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BB9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CCE DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D2D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D3A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2D47 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2D54 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D77 DUP2 DUP6 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2D8B DUP2 DUP5 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x2DC5 DUP2 DUP6 PUSH2 0x2D9F JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x2DDE DUP2 PUSH2 0x1DBD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DFE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2E0B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2E18 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2E25 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E37 DUP2 DUP5 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E52 DUP2 PUSH2 0x1C09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6E JUMPI PUSH2 0x2E6D PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E7C DUP5 DUP3 DUP6 ADD PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E9A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2EA7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2EB9 DUP2 DUP7 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 DUP6 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2EE1 DUP2 DUP5 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SWAP8 RETURN BASEFEE 0x1E NOT SDIV CALLVALUE CHAINID MLOAD 0x49 0x2D 0xCA 0xE0 PUSH20 0x843EC9AEF94892583795AC6C25D3ED73C64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"214:2810:20:-:0;;;721:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;779:7;1291:13:4;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;798:37:20::1;2241:4:0;809:18:20::0;::::1;829:5;798:10;;;:37;;:::i;:::-;;845:30;311:24;869:5;845:10;;;:30;;:::i;:::-;;721:161:::0;;214:2810;;10098:86:4;10171:6;10164:4;:13;;;;;;:::i;:::-;;10098:86;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:680::-;3277:6;3285;3334:2;3322:9;3313:7;3309:23;3305:32;3302:119;;;3340:79;;:::i;:::-;3302:119;3481:1;3470:9;3466:17;3460:24;3511:18;3503:6;3500:30;3497:117;;;3533:79;;:::i;:::-;3497:117;3638:74;3704:7;3695:6;3684:9;3680:22;3638:74;:::i;:::-;3628:84;;3431:291;3761:2;3787:64;3843:7;3834:6;3823:9;3819:22;3787:64;:::i;:::-;3777:74;;3732:129;3188:680;;;;;:::o;3874:99::-;3926:6;3960:5;3954:12;3944:22;;3874:99;;;:::o;3979:180::-;4027:77;4024:1;4017:88;4124:4;4121:1;4114:15;4148:4;4145:1;4138:15;4165:320;4209:6;4246:1;4240:4;4236:12;4226:22;;4293:1;4287:4;4283:12;4314:18;4304:81;;4370:4;4362:6;4358:17;4348:27;;4304:81;4432:2;4424:6;4421:14;4401:18;4398:38;4395:84;;4451:18;;:::i;:::-;4395:84;4216:269;4165:320;;;:::o;4491:141::-;4540:4;4563:3;4555:11;;4586:3;4583:1;4576:14;4620:4;4617:1;4607:18;4599:26;;4491:141;;;:::o;4638:93::-;4675:6;4722:2;4717;4710:5;4706:14;4702:23;4692:33;;4638:93;;;:::o;4737:107::-;4781:8;4831:5;4825:4;4821:16;4800:37;;4737:107;;;;:::o;4850:393::-;4919:6;4969:1;4957:10;4953:18;4992:97;5022:66;5011:9;4992:97;:::i;:::-;5110:39;5140:8;5129:9;5110:39;:::i;:::-;5098:51;;5182:4;5178:9;5171:5;5167:21;5158:30;;5231:4;5221:8;5217:19;5210:5;5207:30;5197:40;;4926:317;;4850:393;;;;;:::o;5249:77::-;5286:7;5315:5;5304:16;;5249:77;;;:::o;5332:60::-;5360:3;5381:5;5374:12;;5332:60;;;:::o;5398:142::-;5448:9;5481:53;5499:34;5508:24;5526:5;5508:24;:::i;:::-;5499:34;:::i;:::-;5481:53;:::i;:::-;5468:66;;5398:142;;;:::o;5546:75::-;5589:3;5610:5;5603:12;;5546:75;;;:::o;5627:269::-;5737:39;5768:7;5737:39;:::i;:::-;5798:91;5847:41;5871:16;5847:41;:::i;:::-;5839:6;5832:4;5826:11;5798:91;:::i;:::-;5792:4;5785:105;5703:193;5627:269;;;:::o;5902:73::-;5947:3;5902:73;:::o;5981:189::-;6058:32;;:::i;:::-;6099:65;6157:6;6149;6143:4;6099:65;:::i;:::-;6034:136;5981:189;;:::o;6176:186::-;6236:120;6253:3;6246:5;6243:14;6236:120;;;6307:39;6344:1;6337:5;6307:39;:::i;:::-;6280:1;6273:5;6269:13;6260:22;;6236:120;;;6176:186;;:::o;6368:543::-;6469:2;6464:3;6461:11;6458:446;;;6503:38;6535:5;6503:38;:::i;:::-;6587:29;6605:10;6587:29;:::i;:::-;6577:8;6573:44;6770:2;6758:10;6755:18;6752:49;;;6791:8;6776:23;;6752:49;6814:80;6870:22;6888:3;6870:22;:::i;:::-;6860:8;6856:37;6843:11;6814:80;:::i;:::-;6473:431;;6458:446;6368:543;;;:::o;6917:117::-;6971:8;7021:5;7015:4;7011:16;6990:37;;6917:117;;;;:::o;7040:169::-;7084:6;7117:51;7165:1;7161:6;7153:5;7150:1;7146:13;7117:51;:::i;:::-;7113:56;7198:4;7192;7188:15;7178:25;;7091:118;7040:169;;;;:::o;7214:295::-;7290:4;7436:29;7461:3;7455:4;7436:29;:::i;:::-;7428:37;;7498:3;7495:1;7491:11;7485:4;7482:21;7474:29;;7214:295;;;;:::o;7514:1395::-;7631:37;7664:3;7631:37;:::i;:::-;7733:18;7725:6;7722:30;7719:56;;;7755:18;;:::i;:::-;7719:56;7799:38;7831:4;7825:11;7799:38;:::i;:::-;7884:67;7944:6;7936;7930:4;7884:67;:::i;:::-;7978:1;8002:4;7989:17;;8034:2;8026:6;8023:14;8051:1;8046:618;;;;8708:1;8725:6;8722:77;;;8774:9;8769:3;8765:19;8759:26;8750:35;;8722:77;8825:67;8885:6;8878:5;8825:67;:::i;:::-;8819:4;8812:81;8681:222;8016:887;;8046:618;8098:4;8094:9;8086:6;8082:22;8132:37;8164:4;8132:37;:::i;:::-;8191:1;8205:208;8219:7;8216:1;8213:14;8205:208;;;8298:9;8293:3;8289:19;8283:26;8275:6;8268:42;8349:1;8341:6;8337:14;8327:24;;8396:2;8385:9;8381:18;8368:31;;8242:4;8239:1;8235:12;8230:17;;8205:208;;;8441:6;8432:7;8429:19;8426:179;;;8499:9;8494:3;8490:19;8484:26;8542:48;8584:4;8576:6;8572:17;8561:9;8542:48;:::i;:::-;8534:6;8527:64;8449:156;8426:179;8651:1;8647;8639:6;8635:14;8631:22;8625:4;8618:36;8053:611;;;8016:887;;7606:1303;;;7514:1395;;:::o;214:2810:20:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":3049,"id":30,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_7079":{"entryPoint":3115,"id":7079,"parameterSlots":0,"returnSlots":0},"@_asSingletonArrays_1580":{"entryPoint":4713,"id":1580,"parameterSlots":2,"returnSlots":2},"@_burn_1485":{"entryPoint":4086,"id":1485,"parameterSlots":3,"returnSlots":0},"@_checkRole_115":{"entryPoint":4632,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":3514,"id":94,"parameterSlots":1,"returnSlots":0},"@_grantRole_257":{"entryPoint":3553,"id":257,"parameterSlots":2,"returnSlots":1},"@_mint_1394":{"entryPoint":4253,"id":1394,"parameterSlots":4,"returnSlots":0},"@_msgSender_2938":{"entryPoint":3795,"id":2938,"parameterSlots":0,"returnSlots":1},"@_revokeRole_295":{"entryPoint":3803,"id":295,"parameterSlots":2,"returnSlots":1},"@_setURI_1342":{"entryPoint":3534,"id":1342,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_1210":{"entryPoint":4761,"id":1210,"parameterSlots":5,"returnSlots":0},"@_update_1130":{"entryPoint":5045,"id":1130,"parameterSlots":4,"returnSlots":0},"@adminBurn_7325":{"entryPoint":2107,"id":7325,"parameterSlots":3,"returnSlots":0},"@badgeIdFor_7146":{"entryPoint":2229,"id":7146,"parameterSlots":2,"returnSlots":1},"@balanceOfBatch_854":{"entryPoint":1836,"id":854,"parameterSlots":2,"returnSlots":1},"@balanceOf_784":{"entryPoint":1166,"id":784,"parameterSlots":2,"returnSlots":1},"@candlesForMemorial_7093":{"entryPoint":2283,"id":7093,"parameterSlots":0,"returnSlots":0},"@checkOnERC1155BatchReceived_1915":{"entryPoint":6423,"id":1915,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1841":{"entryPoint":5987,"id":1841,"parameterSlots":6,"returnSlots":0},"@claimed_7085":{"entryPoint":1789,"id":7085,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_129":{"entryPoint":1541,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":1632,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":2942,"id":81,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_887":{"entryPoint":3185,"id":887,"parameterSlots":2,"returnSlots":1},"@lightCandle_7220":{"entryPoint":2307,"id":7220,"parameterSlots":3,"returnSlots":0},"@renounceRole_190":{"entryPoint":1666,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":3151,"id":167,"parameterSlots":2,"returnSlots":0},"@safeBatchTransferFrom_7260":{"entryPoint":1573,"id":7260,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_7239":{"entryPoint":3333,"id":7239,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_7273":{"entryPoint":3056,"id":7273,"parameterSlots":2,"returnSlots":0},"@setURI_7338":{"entryPoint":1274,"id":7338,"parameterSlots":2,"returnSlots":0},"@supportsInterface_3285":{"entryPoint":4939,"id":3285,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":3392,"id":63,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7289":{"entryPoint":1256,"id":7289,"parameterSlots":1,"returnSlots":1},"@supportsInterface_756":{"entryPoint":4406,"id":756,"parameterSlots":1,"returnSlots":1},"@totalHolders_7089":{"entryPoint":1517,"id":7089,"parameterSlots":0,"returnSlots":0},"@unsafeMemoryAccess_2786":{"entryPoint":4046,"id":2786,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_2812":{"entryPoint":4066,"id":2812,"parameterSlots":2,"returnSlots":1},"@uri_767":{"entryPoint":1369,"id":767,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8676,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8029,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8249,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":9399,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7200,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11843,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_calldata_ptr":{"entryPoint":7335,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint16":{"entryPoint":9208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9484,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":8361,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9548,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":9420,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7027,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint16":{"entryPoint":9229,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8827,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":7775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":8568,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7221,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11864,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":7421,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":7498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint16":{"entryPoint":9312,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":9006,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11461,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":9043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7278,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad_to_t_string_memory_ptr_fromStack":{"entryPoint":9836,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack":{"entryPoint":10596,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88_to_t_string_memory_ptr_fromStack":{"entryPoint":10488,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e_to_t_string_memory_ptr_fromStack":{"entryPoint":10151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866_to_t_string_memory_ptr_fromStack":{"entryPoint":10756,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_nonPadded_inplace_fromStack":{"entryPoint":10369,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8991,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":10315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_t_uint256_t_uint16__to_t_string_memory_ptr_t_uint256_t_uint16__nonPadded_inplace_fromStack_reversed":{"entryPoint":10392,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11476,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11909,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11753,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":11503,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11544,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":11613,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7293,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9871,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10631,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10523,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10186,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10791,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9903,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":7958,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6859,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8632,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7985,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8185,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8975,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10823,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8947,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11668,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7543,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9030,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8958,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11679,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7554,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10218,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10663,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":11110,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":6911,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7266,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7721,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":9171,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":11075,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":10965,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11251,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8234,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7571,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10844,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9746,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":11223,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7909,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10955,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10038,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint16":{"entryPoint":10351,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":10305,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":11193,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9991,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9699,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9944,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7862,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10999,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7325,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7320,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7330,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8180,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6874,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6869,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7613,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_240":{"entryPoint":10338,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10860,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":11180,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":11051,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad":{"entryPoint":9795,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf":{"entryPoint":10555,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88":{"entryPoint":10447,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e":{"entryPoint":10110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866":{"entryPoint":10715,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae":{"entryPoint":10229,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10873,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":11009,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6929,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":9376,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7731,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7177,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":9185,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6983,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":11046,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38685:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"748:87:21","statements":[{"nodeType":"YulAssignment","src":"758:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:21"},"nodeType":"YulFunctionCall","src":"767:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:21"},"nodeType":"YulFunctionCall","src":"796:33:21"},"nodeType":"YulExpressionStatement","src":"796:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:21","type":""}],"src":"696:139:21"},{"body":{"nodeType":"YulBlock","src":"886:32:21","statements":[{"nodeType":"YulAssignment","src":"896:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:21","type":""}],"src":"841:77:21"},{"body":{"nodeType":"YulBlock","src":"967:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:21"},"nodeType":"YulFunctionCall","src":"1026:12:21"},"nodeType":"YulExpressionStatement","src":"1026:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:21"},"nodeType":"YulFunctionCall","src":"997:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:21"},"nodeType":"YulFunctionCall","src":"987:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:21"},"nodeType":"YulFunctionCall","src":"980:43:21"},"nodeType":"YulIf","src":"977:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:21","type":""}],"src":"924:122:21"},{"body":{"nodeType":"YulBlock","src":"1104:87:21","statements":[{"nodeType":"YulAssignment","src":"1114:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:21"},"nodeType":"YulFunctionCall","src":"1123:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:21"},"nodeType":"YulFunctionCall","src":"1152:33:21"},"nodeType":"YulExpressionStatement","src":"1152:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:21","type":""}],"src":"1052:139:21"},{"body":{"nodeType":"YulBlock","src":"1280:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:21"},"nodeType":"YulFunctionCall","src":"1328:79:21"},"nodeType":"YulExpressionStatement","src":"1328:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:21"},"nodeType":"YulFunctionCall","src":"1297:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:21"},"nodeType":"YulFunctionCall","src":"1293:32:21"},"nodeType":"YulIf","src":"1290:119:21"},{"nodeType":"YulBlock","src":"1419:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:21"},"nodeType":"YulFunctionCall","src":"1494:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:21"},"nodeType":"YulFunctionCall","src":"1473:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:21"}]}]},{"nodeType":"YulBlock","src":"1546:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:21"},"nodeType":"YulFunctionCall","src":"1622:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:21"},"nodeType":"YulFunctionCall","src":"1601:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:21","type":""}],"src":"1197:474:21"},{"body":{"nodeType":"YulBlock","src":"1742:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:21"},"nodeType":"YulFunctionCall","src":"1764:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:21"},"nodeType":"YulFunctionCall","src":"1752:37:21"},"nodeType":"YulExpressionStatement","src":"1752:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:21","type":""}],"src":"1677:118:21"},{"body":{"nodeType":"YulBlock","src":"1899:124:21","statements":[{"nodeType":"YulAssignment","src":"1909:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:21"},"nodeType":"YulFunctionCall","src":"1917:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:21"},"nodeType":"YulFunctionCall","src":"1998:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:21"},"nodeType":"YulFunctionCall","src":"1945:71:21"},"nodeType":"YulExpressionStatement","src":"1945:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:21","type":""}],"src":"1801:222:21"},{"body":{"nodeType":"YulBlock","src":"2073:105:21","statements":[{"nodeType":"YulAssignment","src":"2083:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:21"},"nodeType":"YulFunctionCall","src":"2094:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:21","type":""}],"src":"2029:149:21"},{"body":{"nodeType":"YulBlock","src":"2226:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:21"},"nodeType":"YulFunctionCall","src":"2284:12:21"},"nodeType":"YulExpressionStatement","src":"2284:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:21"},"nodeType":"YulFunctionCall","src":"2256:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:21"},"nodeType":"YulFunctionCall","src":"2246:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:21"},"nodeType":"YulFunctionCall","src":"2239:42:21"},"nodeType":"YulIf","src":"2236:62:21"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:21","type":""}],"src":"2184:120:21"},{"body":{"nodeType":"YulBlock","src":"2361:86:21","statements":[{"nodeType":"YulAssignment","src":"2371:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:21"},"nodeType":"YulFunctionCall","src":"2380:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:21"},"nodeType":"YulFunctionCall","src":"2409:32:21"},"nodeType":"YulExpressionStatement","src":"2409:32:21"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:21","type":""}],"src":"2310:137:21"},{"body":{"nodeType":"YulBlock","src":"2518:262:21","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:21"},"nodeType":"YulFunctionCall","src":"2566:79:21"},"nodeType":"YulExpressionStatement","src":"2566:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:21"},"nodeType":"YulFunctionCall","src":"2535:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:21"},"nodeType":"YulFunctionCall","src":"2531:32:21"},"nodeType":"YulIf","src":"2528:119:21"},{"nodeType":"YulBlock","src":"2657:116:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:21"},"nodeType":"YulFunctionCall","src":"2731:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:21"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:21"},"nodeType":"YulFunctionCall","src":"2711:52:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:21","type":""}],"src":"2453:327:21"},{"body":{"nodeType":"YulBlock","src":"2828:48:21","statements":[{"nodeType":"YulAssignment","src":"2838:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:21"},"nodeType":"YulFunctionCall","src":"2856:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:21"},"nodeType":"YulFunctionCall","src":"2849:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:21","type":""}],"src":"2786:90:21"},{"body":{"nodeType":"YulBlock","src":"2941:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:21"},"nodeType":"YulFunctionCall","src":"2963:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:21"},"nodeType":"YulFunctionCall","src":"2951:34:21"},"nodeType":"YulExpressionStatement","src":"2951:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:21","type":""}],"src":"2882:109:21"},{"body":{"nodeType":"YulBlock","src":"3089:118:21","statements":[{"nodeType":"YulAssignment","src":"3099:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:21"},"nodeType":"YulFunctionCall","src":"3107:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:21"},"nodeType":"YulFunctionCall","src":"3182:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:21"},"nodeType":"YulFunctionCall","src":"3135:65:21"},"nodeType":"YulExpressionStatement","src":"3135:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:21","type":""}],"src":"2997:210:21"},{"body":{"nodeType":"YulBlock","src":"3302:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3322:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3312:6:21"},"nodeType":"YulFunctionCall","src":"3312:12:21"},"nodeType":"YulExpressionStatement","src":"3312:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"3213:117:21"},{"body":{"nodeType":"YulBlock","src":"3425:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3442:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3445:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3435:6:21"},"nodeType":"YulFunctionCall","src":"3435:12:21"},"nodeType":"YulExpressionStatement","src":"3435:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"3336:117:21"},{"body":{"nodeType":"YulBlock","src":"3548:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3565:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3568:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3558:6:21"},"nodeType":"YulFunctionCall","src":"3558:12:21"},"nodeType":"YulExpressionStatement","src":"3558:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3459:117:21"},{"body":{"nodeType":"YulBlock","src":"3671:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"3720:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"3722:77:21"},"nodeType":"YulFunctionCall","src":"3722:79:21"},"nodeType":"YulExpressionStatement","src":"3722:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3699:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3707:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3695:3:21"},"nodeType":"YulFunctionCall","src":"3695:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"3714:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3691:3:21"},"nodeType":"YulFunctionCall","src":"3691:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3684:6:21"},"nodeType":"YulFunctionCall","src":"3684:35:21"},"nodeType":"YulIf","src":"3681:122:21"},{"nodeType":"YulAssignment","src":"3812:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3835:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3822:12:21"},"nodeType":"YulFunctionCall","src":"3822:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3812:6:21"}]},{"body":{"nodeType":"YulBlock","src":"3885:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"3887:77:21"},"nodeType":"YulFunctionCall","src":"3887:79:21"},"nodeType":"YulExpressionStatement","src":"3887:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3857:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3865:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3854:2:21"},"nodeType":"YulFunctionCall","src":"3854:30:21"},"nodeType":"YulIf","src":"3851:117:21"},{"nodeType":"YulAssignment","src":"3977:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3993:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4001:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3989:3:21"},"nodeType":"YulFunctionCall","src":"3989:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3977:8:21"}]},{"body":{"nodeType":"YulBlock","src":"4060:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"4062:77:21"},"nodeType":"YulFunctionCall","src":"4062:79:21"},"nodeType":"YulExpressionStatement","src":"4062:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4025:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4039:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4047:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4035:3:21"},"nodeType":"YulFunctionCall","src":"4035:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4021:3:21"},"nodeType":"YulFunctionCall","src":"4021:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"4055:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4018:2:21"},"nodeType":"YulFunctionCall","src":"4018:41:21"},"nodeType":"YulIf","src":"4015:128:21"}]},"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3638:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"3646:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3654:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"3664:6:21","type":""}],"src":"3596:553:21"},{"body":{"nodeType":"YulBlock","src":"4241:443:21","statements":[{"body":{"nodeType":"YulBlock","src":"4287:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4289:77:21"},"nodeType":"YulFunctionCall","src":"4289:79:21"},"nodeType":"YulExpressionStatement","src":"4289:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4262:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4271:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4258:3:21"},"nodeType":"YulFunctionCall","src":"4258:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4283:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4254:3:21"},"nodeType":"YulFunctionCall","src":"4254:32:21"},"nodeType":"YulIf","src":"4251:119:21"},{"nodeType":"YulBlock","src":"4380:297:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4395:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4426:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4437:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4422:3:21"},"nodeType":"YulFunctionCall","src":"4422:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4409:12:21"},"nodeType":"YulFunctionCall","src":"4409:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4399:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4487:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4489:77:21"},"nodeType":"YulFunctionCall","src":"4489:79:21"},"nodeType":"YulExpressionStatement","src":"4489:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4459:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"4467:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4456:2:21"},"nodeType":"YulFunctionCall","src":"4456:30:21"},"nodeType":"YulIf","src":"4453:117:21"},{"nodeType":"YulAssignment","src":"4584:83:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4639:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4650:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4635:3:21"},"nodeType":"YulFunctionCall","src":"4635:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4659:7:21"}],"functionName":{"name":"abi_decode_t_string_calldata_ptr","nodeType":"YulIdentifier","src":"4602:32:21"},"nodeType":"YulFunctionCall","src":"4602:65:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4584:6:21"},{"name":"value1","nodeType":"YulIdentifier","src":"4592:6:21"}]}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4203:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4214:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4226:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4234:6:21","type":""}],"src":"4155:529:21"},{"body":{"nodeType":"YulBlock","src":"4756:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"4802:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4804:77:21"},"nodeType":"YulFunctionCall","src":"4804:79:21"},"nodeType":"YulExpressionStatement","src":"4804:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4777:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"4786:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4773:3:21"},"nodeType":"YulFunctionCall","src":"4773:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"4798:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4769:3:21"},"nodeType":"YulFunctionCall","src":"4769:32:21"},"nodeType":"YulIf","src":"4766:119:21"},{"nodeType":"YulBlock","src":"4895:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4910:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4924:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4914:6:21","type":""}]},{"nodeType":"YulAssignment","src":"4939:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4974:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"4985:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4970:3:21"},"nodeType":"YulFunctionCall","src":"4970:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4994:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4949:20:21"},"nodeType":"YulFunctionCall","src":"4949:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4939:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4726:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4737:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4749:6:21","type":""}],"src":"4690:329:21"},{"body":{"nodeType":"YulBlock","src":"5084:40:21","statements":[{"nodeType":"YulAssignment","src":"5095:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5111:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5105:5:21"},"nodeType":"YulFunctionCall","src":"5105:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5095:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5067:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5077:6:21","type":""}],"src":"5025:99:21"},{"body":{"nodeType":"YulBlock","src":"5226:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5243:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5248:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5236:6:21"},"nodeType":"YulFunctionCall","src":"5236:19:21"},"nodeType":"YulExpressionStatement","src":"5236:19:21"},{"nodeType":"YulAssignment","src":"5264:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5283:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"5288:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5279:3:21"},"nodeType":"YulFunctionCall","src":"5279:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5264:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5198:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"5203:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5214:11:21","type":""}],"src":"5130:169:21"},{"body":{"nodeType":"YulBlock","src":"5367:184:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5377:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"5386:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5381:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5446:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5471:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5476:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5467:3:21"},"nodeType":"YulFunctionCall","src":"5467:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5490:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5495:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5486:3:21"},"nodeType":"YulFunctionCall","src":"5486:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5480:5:21"},"nodeType":"YulFunctionCall","src":"5480:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5460:6:21"},"nodeType":"YulFunctionCall","src":"5460:39:21"},"nodeType":"YulExpressionStatement","src":"5460:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5407:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"5410:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5404:2:21"},"nodeType":"YulFunctionCall","src":"5404:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5418:19:21","statements":[{"nodeType":"YulAssignment","src":"5420:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5429:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5432:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5425:3:21"},"nodeType":"YulFunctionCall","src":"5425:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5420:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"5400:3:21","statements":[]},"src":"5396:113:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5529:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5534:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5525:3:21"},"nodeType":"YulFunctionCall","src":"5525:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"5543:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5518:6:21"},"nodeType":"YulFunctionCall","src":"5518:27:21"},"nodeType":"YulExpressionStatement","src":"5518:27:21"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5349:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5354:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"5359:6:21","type":""}],"src":"5305:246:21"},{"body":{"nodeType":"YulBlock","src":"5605:54:21","statements":[{"nodeType":"YulAssignment","src":"5615:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5633:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5640:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5629:3:21"},"nodeType":"YulFunctionCall","src":"5629:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5649:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5645:3:21"},"nodeType":"YulFunctionCall","src":"5645:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5625:3:21"},"nodeType":"YulFunctionCall","src":"5625:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5615:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5588:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5598:6:21","type":""}],"src":"5557:102:21"},{"body":{"nodeType":"YulBlock","src":"5757:285:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5767:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5814:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5781:32:21"},"nodeType":"YulFunctionCall","src":"5781:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5771:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5829:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5895:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5900:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5836:58:21"},"nodeType":"YulFunctionCall","src":"5836:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5829:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5962:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5951:3:21"},"nodeType":"YulFunctionCall","src":"5951:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5969:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5974:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5916:34:21"},"nodeType":"YulFunctionCall","src":"5916:65:21"},"nodeType":"YulExpressionStatement","src":"5916:65:21"},{"nodeType":"YulAssignment","src":"5990:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6001:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6028:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6006:21:21"},"nodeType":"YulFunctionCall","src":"6006:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5997:3:21"},"nodeType":"YulFunctionCall","src":"5997:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5990:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5738:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5745:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5753:3:21","type":""}],"src":"5665:377:21"},{"body":{"nodeType":"YulBlock","src":"6166:195:21","statements":[{"nodeType":"YulAssignment","src":"6176:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6188:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6199:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6184:3:21"},"nodeType":"YulFunctionCall","src":"6184:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6176:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:21"},"nodeType":"YulFunctionCall","src":"6219:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6242:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6248:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6238:3:21"},"nodeType":"YulFunctionCall","src":"6238:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6212:6:21"},"nodeType":"YulFunctionCall","src":"6212:47:21"},"nodeType":"YulExpressionStatement","src":"6212:47:21"},{"nodeType":"YulAssignment","src":"6268:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6340:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"6349:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6276:63:21"},"nodeType":"YulFunctionCall","src":"6276:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6268:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6138:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6150:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6161:4:21","type":""}],"src":"6048:313:21"},{"body":{"nodeType":"YulBlock","src":"6412:32:21","statements":[{"nodeType":"YulAssignment","src":"6422:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"6433:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6422:7:21"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6394:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6404:7:21","type":""}],"src":"6367:77:21"},{"body":{"nodeType":"YulBlock","src":"6493:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"6550:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6559:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6562:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6552:6:21"},"nodeType":"YulFunctionCall","src":"6552:12:21"},"nodeType":"YulExpressionStatement","src":"6552:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6516:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6541:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6523:17:21"},"nodeType":"YulFunctionCall","src":"6523:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6513:2:21"},"nodeType":"YulFunctionCall","src":"6513:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6506:6:21"},"nodeType":"YulFunctionCall","src":"6506:43:21"},"nodeType":"YulIf","src":"6503:63:21"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6486:5:21","type":""}],"src":"6450:122:21"},{"body":{"nodeType":"YulBlock","src":"6630:87:21","statements":[{"nodeType":"YulAssignment","src":"6640:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6662:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6649:12:21"},"nodeType":"YulFunctionCall","src":"6649:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6640:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6705:5:21"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6678:26:21"},"nodeType":"YulFunctionCall","src":"6678:33:21"},"nodeType":"YulExpressionStatement","src":"6678:33:21"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6608:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"6616:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6624:5:21","type":""}],"src":"6578:139:21"},{"body":{"nodeType":"YulBlock","src":"6789:263:21","statements":[{"body":{"nodeType":"YulBlock","src":"6835:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6837:77:21"},"nodeType":"YulFunctionCall","src":"6837:79:21"},"nodeType":"YulExpressionStatement","src":"6837:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6810:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6819:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6806:3:21"},"nodeType":"YulFunctionCall","src":"6806:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6831:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6802:3:21"},"nodeType":"YulFunctionCall","src":"6802:32:21"},"nodeType":"YulIf","src":"6799:119:21"},{"nodeType":"YulBlock","src":"6928:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6943:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6957:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6947:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6972:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7007:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7018:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7003:3:21"},"nodeType":"YulFunctionCall","src":"7003:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7027:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6982:20:21"},"nodeType":"YulFunctionCall","src":"6982:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6972:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6759:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6770:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6782:6:21","type":""}],"src":"6723:329:21"},{"body":{"nodeType":"YulBlock","src":"7123:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7140:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7163:5:21"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7145:17:21"},"nodeType":"YulFunctionCall","src":"7145:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7133:6:21"},"nodeType":"YulFunctionCall","src":"7133:37:21"},"nodeType":"YulExpressionStatement","src":"7133:37:21"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7111:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7118:3:21","type":""}],"src":"7058:118:21"},{"body":{"nodeType":"YulBlock","src":"7280:124:21","statements":[{"nodeType":"YulAssignment","src":"7290:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7313:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7298:3:21"},"nodeType":"YulFunctionCall","src":"7298:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7290:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7370:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7383:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7394:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7379:3:21"},"nodeType":"YulFunctionCall","src":"7379:17:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7326:43:21"},"nodeType":"YulFunctionCall","src":"7326:71:21"},"nodeType":"YulExpressionStatement","src":"7326:71:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7252:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7264:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7275:4:21","type":""}],"src":"7182:222:21"},{"body":{"nodeType":"YulBlock","src":"7438:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7455:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7458:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7448:6:21"},"nodeType":"YulFunctionCall","src":"7448:88:21"},"nodeType":"YulExpressionStatement","src":"7448:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7552:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7555:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7545:6:21"},"nodeType":"YulFunctionCall","src":"7545:15:21"},"nodeType":"YulExpressionStatement","src":"7545:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7576:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7579:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7569:6:21"},"nodeType":"YulFunctionCall","src":"7569:15:21"},"nodeType":"YulExpressionStatement","src":"7569:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7410:180:21"},{"body":{"nodeType":"YulBlock","src":"7639:238:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7649:58:21","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7671:6:21"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7701:4:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7679:21:21"},"nodeType":"YulFunctionCall","src":"7679:27:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:21"},"nodeType":"YulFunctionCall","src":"7667:40:21"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7653:10:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7818:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7820:16:21"},"nodeType":"YulFunctionCall","src":"7820:18:21"},"nodeType":"YulExpressionStatement","src":"7820:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7761:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"7773:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7758:2:21"},"nodeType":"YulFunctionCall","src":"7758:34:21"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7797:10:21"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7809:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7794:2:21"},"nodeType":"YulFunctionCall","src":"7794:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7755:2:21"},"nodeType":"YulFunctionCall","src":"7755:62:21"},"nodeType":"YulIf","src":"7752:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7856:2:21","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7860:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7849:6:21"},"nodeType":"YulFunctionCall","src":"7849:22:21"},"nodeType":"YulExpressionStatement","src":"7849:22:21"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7625:6:21","type":""},{"name":"size","nodeType":"YulTypedName","src":"7633:4:21","type":""}],"src":"7596:281:21"},{"body":{"nodeType":"YulBlock","src":"7924:88:21","statements":[{"nodeType":"YulAssignment","src":"7934:30:21","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7944:18:21"},"nodeType":"YulFunctionCall","src":"7944:20:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7934:6:21"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7993:6:21"},{"name":"size","nodeType":"YulIdentifier","src":"8001:4:21"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7973:19:21"},"nodeType":"YulFunctionCall","src":"7973:33:21"},"nodeType":"YulExpressionStatement","src":"7973:33:21"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7908:4:21","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7917:6:21","type":""}],"src":"7883:129:21"},{"body":{"nodeType":"YulBlock","src":"8100:229:21","statements":[{"body":{"nodeType":"YulBlock","src":"8205:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8207:16:21"},"nodeType":"YulFunctionCall","src":"8207:18:21"},"nodeType":"YulExpressionStatement","src":"8207:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8177:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8185:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8174:2:21"},"nodeType":"YulFunctionCall","src":"8174:30:21"},"nodeType":"YulIf","src":"8171:56:21"},{"nodeType":"YulAssignment","src":"8237:25:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8249:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8257:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8245:3:21"},"nodeType":"YulFunctionCall","src":"8245:17:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8237:4:21"}]},{"nodeType":"YulAssignment","src":"8299:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8311:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"8317:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8307:3:21"},"nodeType":"YulFunctionCall","src":"8307:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8299:4:21"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8084:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8095:4:21","type":""}],"src":"8018:311:21"},{"body":{"nodeType":"YulBlock","src":"8454:608:21","statements":[{"nodeType":"YulAssignment","src":"8464:90:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8546:6:21"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8489:56:21"},"nodeType":"YulFunctionCall","src":"8489:64:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8473:15:21"},"nodeType":"YulFunctionCall","src":"8473:81:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8464:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"8563:16:21","value":{"name":"array","nodeType":"YulIdentifier","src":"8574:5:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8567:3:21","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8596:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"8603:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8589:6:21"},"nodeType":"YulFunctionCall","src":"8589:21:21"},"nodeType":"YulExpressionStatement","src":"8589:21:21"},{"nodeType":"YulAssignment","src":"8619:23:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8630:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"8637:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8626:3:21"},"nodeType":"YulFunctionCall","src":"8626:16:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8619:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"8652:44:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8670:6:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8682:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8690:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8678:3:21"},"nodeType":"YulFunctionCall","src":"8678:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8666:3:21"},"nodeType":"YulFunctionCall","src":"8666:30:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8656:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8724:103:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8738:77:21"},"nodeType":"YulFunctionCall","src":"8738:79:21"},"nodeType":"YulExpressionStatement","src":"8738:79:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8711:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"8719:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8708:2:21"},"nodeType":"YulFunctionCall","src":"8708:15:21"},"nodeType":"YulIf","src":"8705:122:21"},{"body":{"nodeType":"YulBlock","src":"8912:144:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8927:21:21","value":{"name":"src","nodeType":"YulIdentifier","src":"8945:3:21"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"8931:10:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8969:3:21"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"8995:10:21"},{"name":"end","nodeType":"YulIdentifier","src":"9007:3:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8974:20:21"},"nodeType":"YulFunctionCall","src":"8974:37:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8962:6:21"},"nodeType":"YulFunctionCall","src":"8962:50:21"},"nodeType":"YulExpressionStatement","src":"8962:50:21"},{"nodeType":"YulAssignment","src":"9025:21:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9036:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9041:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9032:3:21"},"nodeType":"YulFunctionCall","src":"9032:14:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9025:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8865:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8870:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8862:2:21"},"nodeType":"YulFunctionCall","src":"8862:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8878:25:21","statements":[{"nodeType":"YulAssignment","src":"8880:21:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8891:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8896:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8887:3:21"},"nodeType":"YulFunctionCall","src":"8887:14:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8880:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"8840:21:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8842:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"8853:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8846:3:21","type":""}]}]},"src":"8836:220:21"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8424:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"8432:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"8440:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8448:5:21","type":""}],"src":"8352:710:21"},{"body":{"nodeType":"YulBlock","src":"9162:293:21","statements":[{"body":{"nodeType":"YulBlock","src":"9211:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9213:77:21"},"nodeType":"YulFunctionCall","src":"9213:79:21"},"nodeType":"YulExpressionStatement","src":"9213:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9190:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9198:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:21"},"nodeType":"YulFunctionCall","src":"9186:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"9205:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9182:3:21"},"nodeType":"YulFunctionCall","src":"9182:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9175:6:21"},"nodeType":"YulFunctionCall","src":"9175:35:21"},"nodeType":"YulIf","src":"9172:122:21"},{"nodeType":"YulVariableDeclaration","src":"9303:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9330:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9317:12:21"},"nodeType":"YulFunctionCall","src":"9317:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9307:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9346:103:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9422:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9430:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9418:3:21"},"nodeType":"YulFunctionCall","src":"9418:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"9437:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"9445:3:21"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9355:62:21"},"nodeType":"YulFunctionCall","src":"9355:94:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9346:5:21"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9140:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"9148:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9156:5:21","type":""}],"src":"9085:370:21"},{"body":{"nodeType":"YulBlock","src":"9550:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9567:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9570:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9560:6:21"},"nodeType":"YulFunctionCall","src":"9560:12:21"},"nodeType":"YulExpressionStatement","src":"9560:12:21"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"9461:117:21"},{"body":{"nodeType":"YulBlock","src":"9650:241:21","statements":[{"body":{"nodeType":"YulBlock","src":"9755:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9757:16:21"},"nodeType":"YulFunctionCall","src":"9757:18:21"},"nodeType":"YulExpressionStatement","src":"9757:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9727:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9735:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9724:2:21"},"nodeType":"YulFunctionCall","src":"9724:30:21"},"nodeType":"YulIf","src":"9721:56:21"},{"nodeType":"YulAssignment","src":"9787:37:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9817:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9795:21:21"},"nodeType":"YulFunctionCall","src":"9795:29:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9787:4:21"}]},{"nodeType":"YulAssignment","src":"9861:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9873:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"9879:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9869:3:21"},"nodeType":"YulFunctionCall","src":"9869:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9861:4:21"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9634:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9645:4:21","type":""}],"src":"9584:307:21"},{"body":{"nodeType":"YulBlock","src":"9961:82:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9984:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"9989:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"9994:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9971:12:21"},"nodeType":"YulFunctionCall","src":"9971:30:21"},"nodeType":"YulExpressionStatement","src":"9971:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10021:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10026:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10017:3:21"},"nodeType":"YulFunctionCall","src":"10017:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"10035:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10010:6:21"},"nodeType":"YulFunctionCall","src":"10010:27:21"},"nodeType":"YulExpressionStatement","src":"10010:27:21"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9943:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9948:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"9953:6:21","type":""}],"src":"9897:146:21"},{"body":{"nodeType":"YulBlock","src":"10132:340:21","statements":[{"nodeType":"YulAssignment","src":"10142:74:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10208:6:21"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10167:40:21"},"nodeType":"YulFunctionCall","src":"10167:48:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10151:15:21"},"nodeType":"YulFunctionCall","src":"10151:65:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10142:5:21"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10232:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"10239:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10225:6:21"},"nodeType":"YulFunctionCall","src":"10225:21:21"},"nodeType":"YulExpressionStatement","src":"10225:21:21"},{"nodeType":"YulVariableDeclaration","src":"10255:27:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10270:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10277:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10266:3:21"},"nodeType":"YulFunctionCall","src":"10266:16:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10259:3:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"10320:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10322:77:21"},"nodeType":"YulFunctionCall","src":"10322:79:21"},"nodeType":"YulExpressionStatement","src":"10322:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10301:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10306:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10297:3:21"},"nodeType":"YulFunctionCall","src":"10297:16:21"},{"name":"end","nodeType":"YulIdentifier","src":"10315:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10294:2:21"},"nodeType":"YulFunctionCall","src":"10294:25:21"},"nodeType":"YulIf","src":"10291:112:21"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10449:3:21"},{"name":"dst","nodeType":"YulIdentifier","src":"10454:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10459:6:21"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10412:36:21"},"nodeType":"YulFunctionCall","src":"10412:54:21"},"nodeType":"YulExpressionStatement","src":"10412:54:21"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10105:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"10110:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10118:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10126:5:21","type":""}],"src":"10049:423:21"},{"body":{"nodeType":"YulBlock","src":"10552:277:21","statements":[{"body":{"nodeType":"YulBlock","src":"10601:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10603:77:21"},"nodeType":"YulFunctionCall","src":"10603:79:21"},"nodeType":"YulExpressionStatement","src":"10603:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10580:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10588:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10576:3:21"},"nodeType":"YulFunctionCall","src":"10576:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"10595:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10572:3:21"},"nodeType":"YulFunctionCall","src":"10572:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10565:6:21"},"nodeType":"YulFunctionCall","src":"10565:35:21"},"nodeType":"YulIf","src":"10562:122:21"},{"nodeType":"YulVariableDeclaration","src":"10693:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10720:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10707:12:21"},"nodeType":"YulFunctionCall","src":"10707:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10697:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10736:87:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10796:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10804:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10792:3:21"},"nodeType":"YulFunctionCall","src":"10792:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"10811:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"10819:3:21"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10745:46:21"},"nodeType":"YulFunctionCall","src":"10745:78:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10736:5:21"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10530:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"10538:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10546:5:21","type":""}],"src":"10491:338:21"},{"body":{"nodeType":"YulBlock","src":"11028:1316:21","statements":[{"body":{"nodeType":"YulBlock","src":"11075:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11077:77:21"},"nodeType":"YulFunctionCall","src":"11077:79:21"},"nodeType":"YulExpressionStatement","src":"11077:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11049:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"11058:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11045:3:21"},"nodeType":"YulFunctionCall","src":"11045:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"11070:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11041:3:21"},"nodeType":"YulFunctionCall","src":"11041:33:21"},"nodeType":"YulIf","src":"11038:120:21"},{"nodeType":"YulBlock","src":"11168:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11183:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11197:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11187:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11212:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11247:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11258:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11243:3:21"},"nodeType":"YulFunctionCall","src":"11243:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11267:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11222:20:21"},"nodeType":"YulFunctionCall","src":"11222:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11212:6:21"}]}]},{"nodeType":"YulBlock","src":"11295:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11310:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"11324:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11314:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11340:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11375:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11386:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11371:3:21"},"nodeType":"YulFunctionCall","src":"11371:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11395:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11350:20:21"},"nodeType":"YulFunctionCall","src":"11350:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11340:6:21"}]}]},{"nodeType":"YulBlock","src":"11423:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11438:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11480:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11465:3:21"},"nodeType":"YulFunctionCall","src":"11465:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11452:12:21"},"nodeType":"YulFunctionCall","src":"11452:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11442:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11531:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11533:77:21"},"nodeType":"YulFunctionCall","src":"11533:79:21"},"nodeType":"YulExpressionStatement","src":"11533:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11503:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11511:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11500:2:21"},"nodeType":"YulFunctionCall","src":"11500:30:21"},"nodeType":"YulIf","src":"11497:117:21"},{"nodeType":"YulAssignment","src":"11628:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11688:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"11699:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11684:3:21"},"nodeType":"YulFunctionCall","src":"11684:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11708:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11638:45:21"},"nodeType":"YulFunctionCall","src":"11638:78:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11628:6:21"}]}]},{"nodeType":"YulBlock","src":"11736:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11751:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11782:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"11793:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11778:3:21"},"nodeType":"YulFunctionCall","src":"11778:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11765:12:21"},"nodeType":"YulFunctionCall","src":"11765:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11755:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"11844:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11846:77:21"},"nodeType":"YulFunctionCall","src":"11846:79:21"},"nodeType":"YulExpressionStatement","src":"11846:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11816:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11824:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11813:2:21"},"nodeType":"YulFunctionCall","src":"11813:30:21"},"nodeType":"YulIf","src":"11810:117:21"},{"nodeType":"YulAssignment","src":"11941:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12001:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12012:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11997:3:21"},"nodeType":"YulFunctionCall","src":"11997:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12021:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11951:45:21"},"nodeType":"YulFunctionCall","src":"11951:78:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"11941:6:21"}]}]},{"nodeType":"YulBlock","src":"12049:288:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12064:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12095:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"12106:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12091:3:21"},"nodeType":"YulFunctionCall","src":"12091:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12078:12:21"},"nodeType":"YulFunctionCall","src":"12078:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12068:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"12158:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12160:77:21"},"nodeType":"YulFunctionCall","src":"12160:79:21"},"nodeType":"YulExpressionStatement","src":"12160:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12130:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12138:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12127:2:21"},"nodeType":"YulFunctionCall","src":"12127:30:21"},"nodeType":"YulIf","src":"12124:117:21"},{"nodeType":"YulAssignment","src":"12255:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12299:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12310:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12295:3:21"},"nodeType":"YulFunctionCall","src":"12295:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12319:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12265:29:21"},"nodeType":"YulFunctionCall","src":"12265:62:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"12255:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10966:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10977:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10989:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10997:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11005:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11013:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11021:6:21","type":""}],"src":"10835:1509:21"},{"body":{"nodeType":"YulBlock","src":"12433:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"12479:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12481:77:21"},"nodeType":"YulFunctionCall","src":"12481:79:21"},"nodeType":"YulExpressionStatement","src":"12481:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12454:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12463:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12450:3:21"},"nodeType":"YulFunctionCall","src":"12450:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12475:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12446:3:21"},"nodeType":"YulFunctionCall","src":"12446:32:21"},"nodeType":"YulIf","src":"12443:119:21"},{"nodeType":"YulBlock","src":"12572:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12587:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12601:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12591:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12616:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12651:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12662:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12647:3:21"},"nodeType":"YulFunctionCall","src":"12647:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12671:7:21"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12626:20:21"},"nodeType":"YulFunctionCall","src":"12626:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12616:6:21"}]}]},{"nodeType":"YulBlock","src":"12699:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12714:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12728:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12718:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12744:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12779:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12790:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12775:3:21"},"nodeType":"YulFunctionCall","src":"12775:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12799:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12754:20:21"},"nodeType":"YulFunctionCall","src":"12754:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12744:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12395:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12406:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12418:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12426:6:21","type":""}],"src":"12350:474:21"},{"body":{"nodeType":"YulBlock","src":"12912:229:21","statements":[{"body":{"nodeType":"YulBlock","src":"13017:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13019:16:21"},"nodeType":"YulFunctionCall","src":"13019:18:21"},"nodeType":"YulExpressionStatement","src":"13019:18:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12989:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12997:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12986:2:21"},"nodeType":"YulFunctionCall","src":"12986:30:21"},"nodeType":"YulIf","src":"12983:56:21"},{"nodeType":"YulAssignment","src":"13049:25:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13061:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13069:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13057:3:21"},"nodeType":"YulFunctionCall","src":"13057:17:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13049:4:21"}]},{"nodeType":"YulAssignment","src":"13111:23:21","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13123:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"13129:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13119:3:21"},"nodeType":"YulFunctionCall","src":"13119:15:21"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13111:4:21"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12896:6:21","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12907:4:21","type":""}],"src":"12830:311:21"},{"body":{"nodeType":"YulBlock","src":"13266:608:21","statements":[{"nodeType":"YulAssignment","src":"13276:90:21","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13358:6:21"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13301:56:21"},"nodeType":"YulFunctionCall","src":"13301:64:21"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13285:15:21"},"nodeType":"YulFunctionCall","src":"13285:81:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13276:5:21"}]},{"nodeType":"YulVariableDeclaration","src":"13375:16:21","value":{"name":"array","nodeType":"YulIdentifier","src":"13386:5:21"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13379:3:21","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13408:5:21"},{"name":"length","nodeType":"YulIdentifier","src":"13415:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13401:6:21"},"nodeType":"YulFunctionCall","src":"13401:21:21"},"nodeType":"YulExpressionStatement","src":"13401:21:21"},{"nodeType":"YulAssignment","src":"13431:23:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13442:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"13449:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13438:3:21"},"nodeType":"YulFunctionCall","src":"13438:16:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13431:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"13464:44:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13482:6:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13494:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13502:4:21","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13490:3:21"},"nodeType":"YulFunctionCall","src":"13490:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13478:3:21"},"nodeType":"YulFunctionCall","src":"13478:30:21"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"13468:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"13536:103:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"13550:77:21"},"nodeType":"YulFunctionCall","src":"13550:79:21"},"nodeType":"YulExpressionStatement","src":"13550:79:21"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"13523:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"13531:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13520:2:21"},"nodeType":"YulFunctionCall","src":"13520:15:21"},"nodeType":"YulIf","src":"13517:122:21"},{"body":{"nodeType":"YulBlock","src":"13724:144:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13739:21:21","value":{"name":"src","nodeType":"YulIdentifier","src":"13757:3:21"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"13743:10:21","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13781:3:21"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"13807:10:21"},{"name":"end","nodeType":"YulIdentifier","src":"13819:3:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13786:20:21"},"nodeType":"YulFunctionCall","src":"13786:37:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13774:6:21"},"nodeType":"YulFunctionCall","src":"13774:50:21"},"nodeType":"YulExpressionStatement","src":"13774:50:21"},{"nodeType":"YulAssignment","src":"13837:21:21","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13848:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13853:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13844:3:21"},"nodeType":"YulFunctionCall","src":"13844:14:21"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"13837:3:21"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13677:3:21"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"13682:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13674:2:21"},"nodeType":"YulFunctionCall","src":"13674:15:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"13690:25:21","statements":[{"nodeType":"YulAssignment","src":"13692:21:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13703:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13708:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13699:3:21"},"nodeType":"YulFunctionCall","src":"13699:14:21"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"13692:3:21"}]}]},"pre":{"nodeType":"YulBlock","src":"13652:21:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13654:17:21","value":{"name":"offset","nodeType":"YulIdentifier","src":"13665:6:21"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"13658:3:21","type":""}]}]},"src":"13648:220:21"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13236:6:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"13244:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13252:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13260:5:21","type":""}],"src":"13164:710:21"},{"body":{"nodeType":"YulBlock","src":"13974:293:21","statements":[{"body":{"nodeType":"YulBlock","src":"14023:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"14025:77:21"},"nodeType":"YulFunctionCall","src":"14025:79:21"},"nodeType":"YulExpressionStatement","src":"14025:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14002:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14010:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13998:3:21"},"nodeType":"YulFunctionCall","src":"13998:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"14017:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13994:3:21"},"nodeType":"YulFunctionCall","src":"13994:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13987:6:21"},"nodeType":"YulFunctionCall","src":"13987:35:21"},"nodeType":"YulIf","src":"13984:122:21"},{"nodeType":"YulVariableDeclaration","src":"14115:34:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14142:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14129:12:21"},"nodeType":"YulFunctionCall","src":"14129:20:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14119:6:21","type":""}]},{"nodeType":"YulAssignment","src":"14158:103:21","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14234:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14242:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14230:3:21"},"nodeType":"YulFunctionCall","src":"14230:17:21"},{"name":"length","nodeType":"YulIdentifier","src":"14249:6:21"},{"name":"end","nodeType":"YulIdentifier","src":"14257:3:21"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14167:62:21"},"nodeType":"YulFunctionCall","src":"14167:94:21"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14158:5:21"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13952:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13960:3:21","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13968:5:21","type":""}],"src":"13897:370:21"},{"body":{"nodeType":"YulBlock","src":"14406:761:21","statements":[{"body":{"nodeType":"YulBlock","src":"14452:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14454:77:21"},"nodeType":"YulFunctionCall","src":"14454:79:21"},"nodeType":"YulExpressionStatement","src":"14454:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14427:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14436:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14423:3:21"},"nodeType":"YulFunctionCall","src":"14423:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"14448:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14419:3:21"},"nodeType":"YulFunctionCall","src":"14419:32:21"},"nodeType":"YulIf","src":"14416:119:21"},{"nodeType":"YulBlock","src":"14545:302:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14560:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14591:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14602:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14587:3:21"},"nodeType":"YulFunctionCall","src":"14587:17:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14574:12:21"},"nodeType":"YulFunctionCall","src":"14574:31:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14564:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14652:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14654:77:21"},"nodeType":"YulFunctionCall","src":"14654:79:21"},"nodeType":"YulExpressionStatement","src":"14654:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14624:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14632:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14621:2:21"},"nodeType":"YulFunctionCall","src":"14621:30:21"},"nodeType":"YulIf","src":"14618:117:21"},{"nodeType":"YulAssignment","src":"14749:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14809:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"14820:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14805:3:21"},"nodeType":"YulFunctionCall","src":"14805:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14829:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14759:45:21"},"nodeType":"YulFunctionCall","src":"14759:78:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14749:6:21"}]}]},{"nodeType":"YulBlock","src":"14857:303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"14872:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14903:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14914:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14899:3:21"},"nodeType":"YulFunctionCall","src":"14899:18:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14886:12:21"},"nodeType":"YulFunctionCall","src":"14886:32:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14876:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"14965:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14967:77:21"},"nodeType":"YulFunctionCall","src":"14967:79:21"},"nodeType":"YulExpressionStatement","src":"14967:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14937:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14945:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14934:2:21"},"nodeType":"YulFunctionCall","src":"14934:30:21"},"nodeType":"YulIf","src":"14931:117:21"},{"nodeType":"YulAssignment","src":"15062:88:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15122:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"15133:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15118:3:21"},"nodeType":"YulFunctionCall","src":"15118:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15142:7:21"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15072:45:21"},"nodeType":"YulFunctionCall","src":"15072:78:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15062:6:21"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14368:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14379:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14391:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14399:6:21","type":""}],"src":"14273:894:21"},{"body":{"nodeType":"YulBlock","src":"15247:40:21","statements":[{"nodeType":"YulAssignment","src":"15258:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15274:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15268:5:21"},"nodeType":"YulFunctionCall","src":"15268:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15258:6:21"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15230:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15240:6:21","type":""}],"src":"15173:114:21"},{"body":{"nodeType":"YulBlock","src":"15404:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15421:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"15426:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15414:6:21"},"nodeType":"YulFunctionCall","src":"15414:19:21"},"nodeType":"YulExpressionStatement","src":"15414:19:21"},{"nodeType":"YulAssignment","src":"15442:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15461:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15466:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15457:3:21"},"nodeType":"YulFunctionCall","src":"15457:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15442:11:21"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15376:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"15381:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15392:11:21","type":""}],"src":"15293:184:21"},{"body":{"nodeType":"YulBlock","src":"15555:60:21","statements":[{"nodeType":"YulAssignment","src":"15565:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"15573:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15565:4:21"}]},{"nodeType":"YulAssignment","src":"15586:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"15598:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15603:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15594:3:21"},"nodeType":"YulFunctionCall","src":"15594:14:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"15586:4:21"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15542:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"15550:4:21","type":""}],"src":"15483:132:21"},{"body":{"nodeType":"YulBlock","src":"15676:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15693:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15716:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15698:17:21"},"nodeType":"YulFunctionCall","src":"15698:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15686:6:21"},"nodeType":"YulFunctionCall","src":"15686:37:21"},"nodeType":"YulExpressionStatement","src":"15686:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15664:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15671:3:21","type":""}],"src":"15621:108:21"},{"body":{"nodeType":"YulBlock","src":"15815:99:21","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15859:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"15867:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"15825:33:21"},"nodeType":"YulFunctionCall","src":"15825:46:21"},"nodeType":"YulExpressionStatement","src":"15825:46:21"},{"nodeType":"YulAssignment","src":"15880:28:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15898:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15903:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15894:3:21"},"nodeType":"YulFunctionCall","src":"15894:14:21"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"15880:10:21"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"15788:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15796:3:21","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"15804:10:21","type":""}],"src":"15735:179:21"},{"body":{"nodeType":"YulBlock","src":"15995:38:21","statements":[{"nodeType":"YulAssignment","src":"16005:22:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"16017:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16022:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16013:3:21"},"nodeType":"YulFunctionCall","src":"16013:14:21"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"16005:4:21"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"15982:3:21","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"15990:4:21","type":""}],"src":"15920:113:21"},{"body":{"nodeType":"YulBlock","src":"16193:608:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16203:68:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16265:5:21"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16217:47:21"},"nodeType":"YulFunctionCall","src":"16217:54:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16207:6:21","type":""}]},{"nodeType":"YulAssignment","src":"16280:93:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16361:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"16366:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16287:73:21"},"nodeType":"YulFunctionCall","src":"16287:86:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16280:3:21"}]},{"nodeType":"YulVariableDeclaration","src":"16382:71:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16447:5:21"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16397:49:21"},"nodeType":"YulFunctionCall","src":"16397:56:21"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"16386:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16462:21:21","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"16476:7:21"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"16466:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"16552:224:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16566:34:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16593:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16587:5:21"},"nodeType":"YulFunctionCall","src":"16587:13:21"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"16570:13:21","type":""}]},{"nodeType":"YulAssignment","src":"16613:70:21","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"16664:13:21"},{"name":"pos","nodeType":"YulIdentifier","src":"16679:3:21"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16620:43:21"},"nodeType":"YulFunctionCall","src":"16620:63:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16613:3:21"}]},{"nodeType":"YulAssignment","src":"16696:70:21","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16759:6:21"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"16706:52:21"},"nodeType":"YulFunctionCall","src":"16706:60:21"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"16696:6:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16514:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"16517:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16511:2:21"},"nodeType":"YulFunctionCall","src":"16511:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"16525:18:21","statements":[{"nodeType":"YulAssignment","src":"16527:14:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"16536:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"16539:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16532:3:21"},"nodeType":"YulFunctionCall","src":"16532:9:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"16527:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"16496:14:21","statements":[{"nodeType":"YulVariableDeclaration","src":"16498:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"16507:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"16502:1:21","type":""}]}]},"src":"16492:284:21"},{"nodeType":"YulAssignment","src":"16785:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"16792:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16785:3:21"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16172:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16179:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16188:3:21","type":""}],"src":"16069:732:21"},{"body":{"nodeType":"YulBlock","src":"16955:225:21","statements":[{"nodeType":"YulAssignment","src":"16965:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16977:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16988:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16973:3:21"},"nodeType":"YulFunctionCall","src":"16973:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16965:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17012:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17023:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17008:3:21"},"nodeType":"YulFunctionCall","src":"17008:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17031:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17037:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17027:3:21"},"nodeType":"YulFunctionCall","src":"17027:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17001:6:21"},"nodeType":"YulFunctionCall","src":"17001:47:21"},"nodeType":"YulExpressionStatement","src":"17001:47:21"},{"nodeType":"YulAssignment","src":"17057:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17159:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"17168:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17065:93:21"},"nodeType":"YulFunctionCall","src":"17065:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17057:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16927:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16939:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16950:4:21","type":""}],"src":"16807:373:21"},{"body":{"nodeType":"YulBlock","src":"17230:45:21","statements":[{"nodeType":"YulAssignment","src":"17240:29:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17255:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"17262:6:21","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17251:3:21"},"nodeType":"YulFunctionCall","src":"17251:18:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17240:7:21"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17212:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17222:7:21","type":""}],"src":"17186:89:21"},{"body":{"nodeType":"YulBlock","src":"17323:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"17379:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17388:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17391:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17381:6:21"},"nodeType":"YulFunctionCall","src":"17381:12:21"},"nodeType":"YulExpressionStatement","src":"17381:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17346:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17370:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"17353:16:21"},"nodeType":"YulFunctionCall","src":"17353:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"17343:2:21"},"nodeType":"YulFunctionCall","src":"17343:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17336:6:21"},"nodeType":"YulFunctionCall","src":"17336:42:21"},"nodeType":"YulIf","src":"17333:62:21"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17316:5:21","type":""}],"src":"17281:120:21"},{"body":{"nodeType":"YulBlock","src":"17458:86:21","statements":[{"nodeType":"YulAssignment","src":"17468:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17490:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17477:12:21"},"nodeType":"YulFunctionCall","src":"17477:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"17468:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17532:5:21"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"17506:25:21"},"nodeType":"YulFunctionCall","src":"17506:32:21"},"nodeType":"YulExpressionStatement","src":"17506:32:21"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17436:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"17444:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"17452:5:21","type":""}],"src":"17407:137:21"},{"body":{"nodeType":"YulBlock","src":"17649:518:21","statements":[{"body":{"nodeType":"YulBlock","src":"17695:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17697:77:21"},"nodeType":"YulFunctionCall","src":"17697:79:21"},"nodeType":"YulExpressionStatement","src":"17697:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17670:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"17679:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17666:3:21"},"nodeType":"YulFunctionCall","src":"17666:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"17691:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17662:3:21"},"nodeType":"YulFunctionCall","src":"17662:32:21"},"nodeType":"YulIf","src":"17659:119:21"},{"nodeType":"YulBlock","src":"17788:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17803:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17817:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17807:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17832:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17867:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"17878:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17863:3:21"},"nodeType":"YulFunctionCall","src":"17863:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17887:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"17842:20:21"},"nodeType":"YulFunctionCall","src":"17842:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17832:6:21"}]}]},{"nodeType":"YulBlock","src":"17915:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17930:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"17944:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17934:6:21","type":""}]},{"nodeType":"YulAssignment","src":"17960:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17995:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18006:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17991:3:21"},"nodeType":"YulFunctionCall","src":"17991:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18015:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17970:20:21"},"nodeType":"YulFunctionCall","src":"17970:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"17960:6:21"}]}]},{"nodeType":"YulBlock","src":"18043:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18058:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18072:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18062:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18088:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18122:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18133:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18118:3:21"},"nodeType":"YulFunctionCall","src":"18118:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18142:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"18098:19:21"},"nodeType":"YulFunctionCall","src":"18098:52:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18088:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17603:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17614:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17626:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17634:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17642:6:21","type":""}],"src":"17550:617:21"},{"body":{"nodeType":"YulBlock","src":"18255:390:21","statements":[{"body":{"nodeType":"YulBlock","src":"18301:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18303:77:21"},"nodeType":"YulFunctionCall","src":"18303:79:21"},"nodeType":"YulExpressionStatement","src":"18303:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18276:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18285:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18272:3:21"},"nodeType":"YulFunctionCall","src":"18272:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"18297:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18268:3:21"},"nodeType":"YulFunctionCall","src":"18268:32:21"},"nodeType":"YulIf","src":"18265:119:21"},{"nodeType":"YulBlock","src":"18394:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18409:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18423:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18413:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18438:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18473:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18484:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18469:3:21"},"nodeType":"YulFunctionCall","src":"18469:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18493:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18448:20:21"},"nodeType":"YulFunctionCall","src":"18448:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18438:6:21"}]}]},{"nodeType":"YulBlock","src":"18521:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"18536:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"18550:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18540:6:21","type":""}]},{"nodeType":"YulAssignment","src":"18566:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18600:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"18611:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18596:3:21"},"nodeType":"YulFunctionCall","src":"18596:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18620:7:21"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"18576:19:21"},"nodeType":"YulFunctionCall","src":"18576:52:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18566:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18217:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18228:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18240:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18248:6:21","type":""}],"src":"18173:472:21"},{"body":{"nodeType":"YulBlock","src":"18691:76:21","statements":[{"body":{"nodeType":"YulBlock","src":"18745:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18754:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18757:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18747:6:21"},"nodeType":"YulFunctionCall","src":"18747:12:21"},"nodeType":"YulExpressionStatement","src":"18747:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18714:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18736:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"18721:14:21"},"nodeType":"YulFunctionCall","src":"18721:21:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"18711:2:21"},"nodeType":"YulFunctionCall","src":"18711:32:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18704:6:21"},"nodeType":"YulFunctionCall","src":"18704:40:21"},"nodeType":"YulIf","src":"18701:60:21"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18684:5:21","type":""}],"src":"18651:116:21"},{"body":{"nodeType":"YulBlock","src":"18822:84:21","statements":[{"nodeType":"YulAssignment","src":"18832:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18854:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18841:12:21"},"nodeType":"YulFunctionCall","src":"18841:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"18832:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18894:5:21"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"18870:23:21"},"nodeType":"YulFunctionCall","src":"18870:30:21"},"nodeType":"YulExpressionStatement","src":"18870:30:21"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18800:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"18808:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"18816:5:21","type":""}],"src":"18773:133:21"},{"body":{"nodeType":"YulBlock","src":"18992:388:21","statements":[{"body":{"nodeType":"YulBlock","src":"19038:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19040:77:21"},"nodeType":"YulFunctionCall","src":"19040:79:21"},"nodeType":"YulExpressionStatement","src":"19040:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19013:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19022:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19009:3:21"},"nodeType":"YulFunctionCall","src":"19009:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"19034:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19005:3:21"},"nodeType":"YulFunctionCall","src":"19005:32:21"},"nodeType":"YulIf","src":"19002:119:21"},{"nodeType":"YulBlock","src":"19131:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19146:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19160:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19150:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19175:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19210:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19221:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19206:3:21"},"nodeType":"YulFunctionCall","src":"19206:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19230:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19185:20:21"},"nodeType":"YulFunctionCall","src":"19185:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19175:6:21"}]}]},{"nodeType":"YulBlock","src":"19258:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19273:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19287:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19277:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19303:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19335:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19346:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19331:3:21"},"nodeType":"YulFunctionCall","src":"19331:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19355:7:21"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"19313:17:21"},"nodeType":"YulFunctionCall","src":"19313:50:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19303:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18954:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18965:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18977:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18985:6:21","type":""}],"src":"18912:468:21"},{"body":{"nodeType":"YulBlock","src":"19469:391:21","statements":[{"body":{"nodeType":"YulBlock","src":"19515:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19517:77:21"},"nodeType":"YulFunctionCall","src":"19517:79:21"},"nodeType":"YulExpressionStatement","src":"19517:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19490:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19499:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19486:3:21"},"nodeType":"YulFunctionCall","src":"19486:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"19511:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19482:3:21"},"nodeType":"YulFunctionCall","src":"19482:32:21"},"nodeType":"YulIf","src":"19479:119:21"},{"nodeType":"YulBlock","src":"19608:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19623:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19637:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19627:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19652:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19687:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19698:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19683:3:21"},"nodeType":"YulFunctionCall","src":"19683:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19707:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19662:20:21"},"nodeType":"YulFunctionCall","src":"19662:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19652:6:21"}]}]},{"nodeType":"YulBlock","src":"19735:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19750:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"19764:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19754:6:21","type":""}]},{"nodeType":"YulAssignment","src":"19780:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19815:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"19826:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19811:3:21"},"nodeType":"YulFunctionCall","src":"19811:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19835:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"19790:20:21"},"nodeType":"YulFunctionCall","src":"19790:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19780:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19431:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19442:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19454:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19462:6:21","type":""}],"src":"19386:474:21"},{"body":{"nodeType":"YulBlock","src":"20009:946:21","statements":[{"body":{"nodeType":"YulBlock","src":"20056:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20058:77:21"},"nodeType":"YulFunctionCall","src":"20058:79:21"},"nodeType":"YulExpressionStatement","src":"20058:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20030:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20039:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20026:3:21"},"nodeType":"YulFunctionCall","src":"20026:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"20051:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20022:3:21"},"nodeType":"YulFunctionCall","src":"20022:33:21"},"nodeType":"YulIf","src":"20019:120:21"},{"nodeType":"YulBlock","src":"20149:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20164:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20178:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20168:6:21","type":""}]},{"nodeType":"YulAssignment","src":"20193:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20228:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20239:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20224:3:21"},"nodeType":"YulFunctionCall","src":"20224:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20248:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20203:20:21"},"nodeType":"YulFunctionCall","src":"20203:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20193:6:21"}]}]},{"nodeType":"YulBlock","src":"20276:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20291:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20305:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20295:6:21","type":""}]},{"nodeType":"YulAssignment","src":"20321:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20356:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20367:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20352:3:21"},"nodeType":"YulFunctionCall","src":"20352:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20376:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20331:20:21"},"nodeType":"YulFunctionCall","src":"20331:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20321:6:21"}]}]},{"nodeType":"YulBlock","src":"20404:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20419:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20433:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20423:6:21","type":""}]},{"nodeType":"YulAssignment","src":"20449:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20484:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20495:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20480:3:21"},"nodeType":"YulFunctionCall","src":"20480:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20504:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20459:20:21"},"nodeType":"YulFunctionCall","src":"20459:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"20449:6:21"}]}]},{"nodeType":"YulBlock","src":"20532:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20547:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"20561:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20551:6:21","type":""}]},{"nodeType":"YulAssignment","src":"20577:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20612:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20623:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20608:3:21"},"nodeType":"YulFunctionCall","src":"20608:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20632:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20587:20:21"},"nodeType":"YulFunctionCall","src":"20587:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"20577:6:21"}]}]},{"nodeType":"YulBlock","src":"20660:288:21","statements":[{"nodeType":"YulVariableDeclaration","src":"20675:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20706:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20717:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20702:3:21"},"nodeType":"YulFunctionCall","src":"20702:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20689:12:21"},"nodeType":"YulFunctionCall","src":"20689:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20679:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"20769:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"20771:77:21"},"nodeType":"YulFunctionCall","src":"20771:79:21"},"nodeType":"YulExpressionStatement","src":"20771:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20741:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20749:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20738:2:21"},"nodeType":"YulFunctionCall","src":"20738:30:21"},"nodeType":"YulIf","src":"20735:117:21"},{"nodeType":"YulAssignment","src":"20866:72:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20910:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"20921:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20906:3:21"},"nodeType":"YulFunctionCall","src":"20906:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20930:7:21"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"20876:29:21"},"nodeType":"YulFunctionCall","src":"20876:62:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"20866:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19947:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19958:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19970:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19978:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19986:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19994:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20002:6:21","type":""}],"src":"19866:1089:21"},{"body":{"nodeType":"YulBlock","src":"20989:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21006:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21009:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20999:6:21"},"nodeType":"YulFunctionCall","src":"20999:88:21"},"nodeType":"YulExpressionStatement","src":"20999:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21103:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21106:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21096:6:21"},"nodeType":"YulFunctionCall","src":"21096:15:21"},"nodeType":"YulExpressionStatement","src":"21096:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21127:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21130:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21120:6:21"},"nodeType":"YulFunctionCall","src":"21120:15:21"},"nodeType":"YulExpressionStatement","src":"21120:15:21"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"20961:180:21"},{"body":{"nodeType":"YulBlock","src":"21198:269:21","statements":[{"nodeType":"YulAssignment","src":"21208:22:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21222:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"21228:1:21","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21218:3:21"},"nodeType":"YulFunctionCall","src":"21218:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21208:6:21"}]},{"nodeType":"YulVariableDeclaration","src":"21239:38:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21269:4:21"},{"kind":"number","nodeType":"YulLiteral","src":"21275:1:21","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21265:3:21"},"nodeType":"YulFunctionCall","src":"21265:12:21"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"21243:18:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"21316:51:21","statements":[{"nodeType":"YulAssignment","src":"21330:27:21","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21344:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21352:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21340:3:21"},"nodeType":"YulFunctionCall","src":"21340:17:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21330:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21296:18:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21289:6:21"},"nodeType":"YulFunctionCall","src":"21289:26:21"},"nodeType":"YulIf","src":"21286:81:21"},{"body":{"nodeType":"YulBlock","src":"21419:42:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21433:16:21"},"nodeType":"YulFunctionCall","src":"21433:18:21"},"nodeType":"YulExpressionStatement","src":"21433:18:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21383:18:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21406:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21414:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21403:2:21"},"nodeType":"YulFunctionCall","src":"21403:14:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21380:2:21"},"nodeType":"YulFunctionCall","src":"21380:38:21"},"nodeType":"YulIf","src":"21377:84:21"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21182:4:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21191:6:21","type":""}],"src":"21147:320:21"},{"body":{"nodeType":"YulBlock","src":"21579:71:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21601:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21609:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21597:3:21"},"nodeType":"YulFunctionCall","src":"21597:14:21"},{"hexValue":"536f756c626f756e643a206e6f6e2d7472616e7366657261626c65","kind":"string","nodeType":"YulLiteral","src":"21613:29:21","type":"","value":"Soulbound: non-transferable"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21590:6:21"},"nodeType":"YulFunctionCall","src":"21590:53:21"},"nodeType":"YulExpressionStatement","src":"21590:53:21"}]},"name":"store_literal_in_memory_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21571:6:21","type":""}],"src":"21473:177:21"},{"body":{"nodeType":"YulBlock","src":"21802:220:21","statements":[{"nodeType":"YulAssignment","src":"21812:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21878:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21883:2:21","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21819:58:21"},"nodeType":"YulFunctionCall","src":"21819:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21812:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21984:3:21"}],"functionName":{"name":"store_literal_in_memory_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad","nodeType":"YulIdentifier","src":"21895:88:21"},"nodeType":"YulFunctionCall","src":"21895:93:21"},"nodeType":"YulExpressionStatement","src":"21895:93:21"},{"nodeType":"YulAssignment","src":"21997:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22008:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22013:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22004:3:21"},"nodeType":"YulFunctionCall","src":"22004:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21997:3:21"}]}]},"name":"abi_encode_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21790:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21798:3:21","type":""}],"src":"21656:366:21"},{"body":{"nodeType":"YulBlock","src":"22199:248:21","statements":[{"nodeType":"YulAssignment","src":"22209:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22221:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22232:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22217:3:21"},"nodeType":"YulFunctionCall","src":"22217:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22209:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22256:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22267:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22252:3:21"},"nodeType":"YulFunctionCall","src":"22252:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22275:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22281:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22271:3:21"},"nodeType":"YulFunctionCall","src":"22271:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22245:6:21"},"nodeType":"YulFunctionCall","src":"22245:47:21"},"nodeType":"YulExpressionStatement","src":"22245:47:21"},{"nodeType":"YulAssignment","src":"22301:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22435:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22309:124:21"},"nodeType":"YulFunctionCall","src":"22309:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22301:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22179:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22194:4:21","type":""}],"src":"22028:419:21"},{"body":{"nodeType":"YulBlock","src":"22579:206:21","statements":[{"nodeType":"YulAssignment","src":"22589:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22601:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22612:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22597:3:21"},"nodeType":"YulFunctionCall","src":"22597:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22589:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22669:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22682:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22693:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22678:3:21"},"nodeType":"YulFunctionCall","src":"22678:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22625:43:21"},"nodeType":"YulFunctionCall","src":"22625:71:21"},"nodeType":"YulExpressionStatement","src":"22625:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22750:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22763:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22774:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22759:3:21"},"nodeType":"YulFunctionCall","src":"22759:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22706:43:21"},"nodeType":"YulFunctionCall","src":"22706:72:21"},"nodeType":"YulExpressionStatement","src":"22706:72:21"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22543:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22555:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22563:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22574:4:21","type":""}],"src":"22453:332:21"},{"body":{"nodeType":"YulBlock","src":"22819:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22836:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22839:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22829:6:21"},"nodeType":"YulFunctionCall","src":"22829:88:21"},"nodeType":"YulExpressionStatement","src":"22829:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22933:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22936:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22926:6:21"},"nodeType":"YulFunctionCall","src":"22926:15:21"},"nodeType":"YulExpressionStatement","src":"22926:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22957:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22960:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22950:6:21"},"nodeType":"YulFunctionCall","src":"22950:15:21"},"nodeType":"YulExpressionStatement","src":"22950:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22791:180:21"},{"body":{"nodeType":"YulBlock","src":"23005:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23022:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23025:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23015:6:21"},"nodeType":"YulFunctionCall","src":"23015:88:21"},"nodeType":"YulExpressionStatement","src":"23015:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23119:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23122:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23112:6:21"},"nodeType":"YulFunctionCall","src":"23112:15:21"},"nodeType":"YulExpressionStatement","src":"23112:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23143:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23146:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23136:6:21"},"nodeType":"YulFunctionCall","src":"23136:15:21"},"nodeType":"YulExpressionStatement","src":"23136:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22977:180:21"},{"body":{"nodeType":"YulBlock","src":"23206:190:21","statements":[{"nodeType":"YulAssignment","src":"23216:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23243:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23225:17:21"},"nodeType":"YulFunctionCall","src":"23225:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23216:5:21"}]},{"body":{"nodeType":"YulBlock","src":"23339:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23341:16:21"},"nodeType":"YulFunctionCall","src":"23341:18:21"},"nodeType":"YulExpressionStatement","src":"23341:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23264:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"23271:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23261:2:21"},"nodeType":"YulFunctionCall","src":"23261:77:21"},"nodeType":"YulIf","src":"23258:103:21"},{"nodeType":"YulAssignment","src":"23370:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23381:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"23388:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23377:3:21"},"nodeType":"YulFunctionCall","src":"23377:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23370:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23192:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23202:3:21","type":""}],"src":"23163:233:21"},{"body":{"nodeType":"YulBlock","src":"23508:52:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23530:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"23538:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23526:3:21"},"nodeType":"YulFunctionCall","src":"23526:14:21"},{"hexValue":"4e6f206261646765","kind":"string","nodeType":"YulLiteral","src":"23542:10:21","type":"","value":"No badge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23519:6:21"},"nodeType":"YulFunctionCall","src":"23519:34:21"},"nodeType":"YulExpressionStatement","src":"23519:34:21"}]},"name":"store_literal_in_memory_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23500:6:21","type":""}],"src":"23402:158:21"},{"body":{"nodeType":"YulBlock","src":"23712:219:21","statements":[{"nodeType":"YulAssignment","src":"23722:73:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23788:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23793:1:21","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23729:58:21"},"nodeType":"YulFunctionCall","src":"23729:66:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23722:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23893:3:21"}],"functionName":{"name":"store_literal_in_memory_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e","nodeType":"YulIdentifier","src":"23804:88:21"},"nodeType":"YulFunctionCall","src":"23804:93:21"},"nodeType":"YulExpressionStatement","src":"23804:93:21"},{"nodeType":"YulAssignment","src":"23906:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23917:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"23922:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23913:3:21"},"nodeType":"YulFunctionCall","src":"23913:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23906:3:21"}]}]},"name":"abi_encode_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23700:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23708:3:21","type":""}],"src":"23566:365:21"},{"body":{"nodeType":"YulBlock","src":"24108:248:21","statements":[{"nodeType":"YulAssignment","src":"24118:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24130:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24141:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24126:3:21"},"nodeType":"YulFunctionCall","src":"24126:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24118:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24165:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24176:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24161:3:21"},"nodeType":"YulFunctionCall","src":"24161:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24184:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24190:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24180:3:21"},"nodeType":"YulFunctionCall","src":"24180:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24154:6:21"},"nodeType":"YulFunctionCall","src":"24154:47:21"},"nodeType":"YulExpressionStatement","src":"24154:47:21"},{"nodeType":"YulAssignment","src":"24210:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24344:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24218:124:21"},"nodeType":"YulFunctionCall","src":"24218:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24210:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24088:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24103:4:21","type":""}],"src":"23937:419:21"},{"body":{"nodeType":"YulBlock","src":"24476:34:21","statements":[{"nodeType":"YulAssignment","src":"24486:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"24501:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"24486:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24448:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"24453:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"24464:11:21","type":""}],"src":"24362:148:21"},{"body":{"nodeType":"YulBlock","src":"24622:61:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24644:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"24652:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24640:3:21"},"nodeType":"YulFunctionCall","src":"24640:14:21"},{"hexValue":"52454d454d4252414e43455f4241444745","kind":"string","nodeType":"YulLiteral","src":"24656:19:21","type":"","value":"REMEMBRANCE_BADGE"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24633:6:21"},"nodeType":"YulFunctionCall","src":"24633:43:21"},"nodeType":"YulExpressionStatement","src":"24633:43:21"}]},"name":"store_literal_in_memory_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24614:6:21","type":""}],"src":"24516:167:21"},{"body":{"nodeType":"YulBlock","src":"24853:238:21","statements":[{"nodeType":"YulAssignment","src":"24863:92:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24947:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"24952:2:21","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24870:76:21"},"nodeType":"YulFunctionCall","src":"24870:85:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24863:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25053:3:21"}],"functionName":{"name":"store_literal_in_memory_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae","nodeType":"YulIdentifier","src":"24964:88:21"},"nodeType":"YulFunctionCall","src":"24964:93:21"},"nodeType":"YulExpressionStatement","src":"24964:93:21"},{"nodeType":"YulAssignment","src":"25066:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25077:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"25082:2:21","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25073:3:21"},"nodeType":"YulFunctionCall","src":"25073:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25066:3:21"}]}]},"name":"abi_encode_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24841:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24849:3:21","type":""}],"src":"24689:402:21"},{"body":{"nodeType":"YulBlock","src":"25144:32:21","statements":[{"nodeType":"YulAssignment","src":"25154:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"25165:5:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"25154:7:21"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25126:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"25136:7:21","type":""}],"src":"25097:79:21"},{"body":{"nodeType":"YulBlock","src":"25265:74:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25282:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25325:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25307:17:21"},"nodeType":"YulFunctionCall","src":"25307:24:21"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"25287:19:21"},"nodeType":"YulFunctionCall","src":"25287:45:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25275:6:21"},"nodeType":"YulFunctionCall","src":"25275:58:21"},"nodeType":"YulExpressionStatement","src":"25275:58:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25253:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25260:3:21","type":""}],"src":"25182:157:21"},{"body":{"nodeType":"YulBlock","src":"25388:53:21","statements":[{"nodeType":"YulAssignment","src":"25398:36:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25423:3:21","type":"","value":"240"},{"name":"value","nodeType":"YulIdentifier","src":"25428:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25419:3:21"},"nodeType":"YulFunctionCall","src":"25419:15:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25398:8:21"}]}]},"name":"shift_left_240","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25369:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25379:8:21","type":""}],"src":"25345:96:21"},{"body":{"nodeType":"YulBlock","src":"25493:48:21","statements":[{"nodeType":"YulAssignment","src":"25503:32:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25529:5:21"}],"functionName":{"name":"shift_left_240","nodeType":"YulIdentifier","src":"25514:14:21"},"nodeType":"YulFunctionCall","src":"25514:21:21"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"25503:7:21"}]}]},"name":"leftAlign_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25475:5:21","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"25485:7:21","type":""}],"src":"25447:94:21"},{"body":{"nodeType":"YulBlock","src":"25628:72:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25645:3:21"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25686:5:21"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"25669:16:21"},"nodeType":"YulFunctionCall","src":"25669:23:21"}],"functionName":{"name":"leftAlign_t_uint16","nodeType":"YulIdentifier","src":"25650:18:21"},"nodeType":"YulFunctionCall","src":"25650:43:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25638:6:21"},"nodeType":"YulFunctionCall","src":"25638:56:21"},"nodeType":"YulExpressionStatement","src":"25638:56:21"}]},"name":"abi_encode_t_uint16_to_t_uint16_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25616:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25623:3:21","type":""}],"src":"25547:153:21"},{"body":{"nodeType":"YulBlock","src":"25949:415:21","statements":[{"nodeType":"YulAssignment","src":"25960:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26111:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25967:142:21"},"nodeType":"YulFunctionCall","src":"25967:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25960:3:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26187:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"26196:3:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26125:61:21"},"nodeType":"YulFunctionCall","src":"26125:75:21"},"nodeType":"YulExpressionStatement","src":"26125:75:21"},{"nodeType":"YulAssignment","src":"26209:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26220:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26225:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26216:3:21"},"nodeType":"YulFunctionCall","src":"26216:12:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26209:3:21"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26298:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"26307:3:21"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26238:59:21"},"nodeType":"YulFunctionCall","src":"26238:73:21"},"nodeType":"YulExpressionStatement","src":"26238:73:21"},{"nodeType":"YulAssignment","src":"26320:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26331:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26336:1:21","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26327:3:21"},"nodeType":"YulFunctionCall","src":"26327:11:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26320:3:21"}]},{"nodeType":"YulAssignment","src":"26348:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"26355:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26348:3:21"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_t_uint256_t_uint16__to_t_string_memory_ptr_t_uint256_t_uint16__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25920:3:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25926:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25934:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25945:3:21","type":""}],"src":"25706:658:21"},{"body":{"nodeType":"YulBlock","src":"26476:57:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26498:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"26506:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26494:3:21"},"nodeType":"YulFunctionCall","src":"26494:14:21"},{"hexValue":"42616420726563697069656e74","kind":"string","nodeType":"YulLiteral","src":"26510:15:21","type":"","value":"Bad recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26487:6:21"},"nodeType":"YulFunctionCall","src":"26487:39:21"},"nodeType":"YulExpressionStatement","src":"26487:39:21"}]},"name":"store_literal_in_memory_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26468:6:21","type":""}],"src":"26370:163:21"},{"body":{"nodeType":"YulBlock","src":"26685:220:21","statements":[{"nodeType":"YulAssignment","src":"26695:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26761:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26766:2:21","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26702:58:21"},"nodeType":"YulFunctionCall","src":"26702:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26695:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26867:3:21"}],"functionName":{"name":"store_literal_in_memory_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88","nodeType":"YulIdentifier","src":"26778:88:21"},"nodeType":"YulFunctionCall","src":"26778:93:21"},"nodeType":"YulExpressionStatement","src":"26778:93:21"},{"nodeType":"YulAssignment","src":"26880:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26891:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"26896:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26887:3:21"},"nodeType":"YulFunctionCall","src":"26887:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26880:3:21"}]}]},"name":"abi_encode_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26673:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26681:3:21","type":""}],"src":"26539:366:21"},{"body":{"nodeType":"YulBlock","src":"27082:248:21","statements":[{"nodeType":"YulAssignment","src":"27092:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27104:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27115:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27100:3:21"},"nodeType":"YulFunctionCall","src":"27100:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27092:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27139:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27150:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27135:3:21"},"nodeType":"YulFunctionCall","src":"27135:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27158:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"27164:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27154:3:21"},"nodeType":"YulFunctionCall","src":"27154:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27128:6:21"},"nodeType":"YulFunctionCall","src":"27128:47:21"},"nodeType":"YulExpressionStatement","src":"27128:47:21"},{"nodeType":"YulAssignment","src":"27184:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27318:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27192:124:21"},"nodeType":"YulFunctionCall","src":"27192:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27184:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27062:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27077:4:21","type":""}],"src":"26911:419:21"},{"body":{"nodeType":"YulBlock","src":"27442:59:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27464:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"27472:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27460:3:21"},"nodeType":"YulFunctionCall","src":"27460:14:21"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"27476:17:21","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27453:6:21"},"nodeType":"YulFunctionCall","src":"27453:41:21"},"nodeType":"YulExpressionStatement","src":"27453:41:21"}]},"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27434:6:21","type":""}],"src":"27336:165:21"},{"body":{"nodeType":"YulBlock","src":"27653:220:21","statements":[{"nodeType":"YulAssignment","src":"27663:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27729:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27734:2:21","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27670:58:21"},"nodeType":"YulFunctionCall","src":"27670:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27663:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27835:3:21"}],"functionName":{"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulIdentifier","src":"27746:88:21"},"nodeType":"YulFunctionCall","src":"27746:93:21"},"nodeType":"YulExpressionStatement","src":"27746:93:21"},{"nodeType":"YulAssignment","src":"27848:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27859:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"27864:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27855:3:21"},"nodeType":"YulFunctionCall","src":"27855:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27848:3:21"}]}]},"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27641:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27649:3:21","type":""}],"src":"27507:366:21"},{"body":{"nodeType":"YulBlock","src":"28050:248:21","statements":[{"nodeType":"YulAssignment","src":"28060:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28072:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28083:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28068:3:21"},"nodeType":"YulFunctionCall","src":"28068:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28060:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28107:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28118:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28103:3:21"},"nodeType":"YulFunctionCall","src":"28103:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28126:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"28132:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28122:3:21"},"nodeType":"YulFunctionCall","src":"28122:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28096:6:21"},"nodeType":"YulFunctionCall","src":"28096:47:21"},"nodeType":"YulExpressionStatement","src":"28096:47:21"},{"nodeType":"YulAssignment","src":"28152:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28286:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28160:124:21"},"nodeType":"YulFunctionCall","src":"28160:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28152:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28030:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28045:4:21","type":""}],"src":"27879:419:21"},{"body":{"nodeType":"YulBlock","src":"28348:147:21","statements":[{"nodeType":"YulAssignment","src":"28358:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28381:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28363:17:21"},"nodeType":"YulFunctionCall","src":"28363:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"28358:1:21"}]},{"nodeType":"YulAssignment","src":"28392:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28415:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28397:17:21"},"nodeType":"YulFunctionCall","src":"28397:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28392:1:21"}]},{"nodeType":"YulAssignment","src":"28426:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28437:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"28440:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28433:3:21"},"nodeType":"YulFunctionCall","src":"28433:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"28426:3:21"}]},{"body":{"nodeType":"YulBlock","src":"28466:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28468:16:21"},"nodeType":"YulFunctionCall","src":"28468:18:21"},"nodeType":"YulExpressionStatement","src":"28468:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28458:1:21"},{"name":"sum","nodeType":"YulIdentifier","src":"28461:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28455:2:21"},"nodeType":"YulFunctionCall","src":"28455:10:21"},"nodeType":"YulIf","src":"28452:36:21"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"28335:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"28338:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"28344:3:21","type":""}],"src":"28304:191:21"},{"body":{"nodeType":"YulBlock","src":"28607:73:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28629:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"28637:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28625:3:21"},"nodeType":"YulFunctionCall","src":"28625:14:21"},{"hexValue":"536f756c626f756e643a20617070726f76616c732064697361626c6564","kind":"string","nodeType":"YulLiteral","src":"28641:31:21","type":"","value":"Soulbound: approvals disabled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28618:6:21"},"nodeType":"YulFunctionCall","src":"28618:55:21"},"nodeType":"YulExpressionStatement","src":"28618:55:21"}]},"name":"store_literal_in_memory_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28599:6:21","type":""}],"src":"28501:179:21"},{"body":{"nodeType":"YulBlock","src":"28832:220:21","statements":[{"nodeType":"YulAssignment","src":"28842:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28908:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"28913:2:21","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28849:58:21"},"nodeType":"YulFunctionCall","src":"28849:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28842:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29014:3:21"}],"functionName":{"name":"store_literal_in_memory_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866","nodeType":"YulIdentifier","src":"28925:88:21"},"nodeType":"YulFunctionCall","src":"28925:93:21"},"nodeType":"YulExpressionStatement","src":"28925:93:21"},{"nodeType":"YulAssignment","src":"29027:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29038:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"29043:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29034:3:21"},"nodeType":"YulFunctionCall","src":"29034:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29027:3:21"}]}]},"name":"abi_encode_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28820:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28828:3:21","type":""}],"src":"28686:366:21"},{"body":{"nodeType":"YulBlock","src":"29229:248:21","statements":[{"nodeType":"YulAssignment","src":"29239:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29251:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29262:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29247:3:21"},"nodeType":"YulFunctionCall","src":"29247:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29239:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29286:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"29297:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29282:3:21"},"nodeType":"YulFunctionCall","src":"29282:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29305:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"29311:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29301:3:21"},"nodeType":"YulFunctionCall","src":"29301:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29275:6:21"},"nodeType":"YulFunctionCall","src":"29275:47:21"},"nodeType":"YulExpressionStatement","src":"29275:47:21"},{"nodeType":"YulAssignment","src":"29331:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29465:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29339:124:21"},"nodeType":"YulFunctionCall","src":"29339:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29331:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29209:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29224:4:21","type":""}],"src":"29058:419:21"},{"body":{"nodeType":"YulBlock","src":"29537:87:21","statements":[{"nodeType":"YulAssignment","src":"29547:11:21","value":{"name":"ptr","nodeType":"YulIdentifier","src":"29555:3:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29547:4:21"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29575:1:21","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"29578:3:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29568:6:21"},"nodeType":"YulFunctionCall","src":"29568:14:21"},"nodeType":"YulExpressionStatement","src":"29568:14:21"},{"nodeType":"YulAssignment","src":"29591:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"29609:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"29612:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"29599:9:21"},"nodeType":"YulFunctionCall","src":"29599:18:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"29591:4:21"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"29524:3:21","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"29532:4:21","type":""}],"src":"29483:141:21"},{"body":{"nodeType":"YulBlock","src":"29674:49:21","statements":[{"nodeType":"YulAssignment","src":"29684:33:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29702:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"29709:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29698:3:21"},"nodeType":"YulFunctionCall","src":"29698:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"29714:2:21","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"29694:3:21"},"nodeType":"YulFunctionCall","src":"29694:23:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"29684:6:21"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29657:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29667:6:21","type":""}],"src":"29630:93:21"},{"body":{"nodeType":"YulBlock","src":"29782:54:21","statements":[{"nodeType":"YulAssignment","src":"29792:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"29817:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"29823:5:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"29813:3:21"},"nodeType":"YulFunctionCall","src":"29813:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"29792:8:21"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"29757:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"29763:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"29773:8:21","type":""}],"src":"29729:107:21"},{"body":{"nodeType":"YulBlock","src":"29918:317:21","statements":[{"nodeType":"YulVariableDeclaration","src":"29928:35:21","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"29949:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"29961:1:21","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29945:3:21"},"nodeType":"YulFunctionCall","src":"29945:18:21"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"29932:9:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"29972:109:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"30003:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"30014:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"29984:18:21"},"nodeType":"YulFunctionCall","src":"29984:97:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"29976:4:21","type":""}]},{"nodeType":"YulAssignment","src":"30090:51:21","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"30121:9:21"},{"name":"toInsert","nodeType":"YulIdentifier","src":"30132:8:21"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"30102:18:21"},"nodeType":"YulFunctionCall","src":"30102:39:21"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30090:8:21"}]},{"nodeType":"YulAssignment","src":"30150:30:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30163:5:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"30174:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"30170:3:21"},"nodeType":"YulFunctionCall","src":"30170:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30159:3:21"},"nodeType":"YulFunctionCall","src":"30159:21:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"30150:5:21"}]},{"nodeType":"YulAssignment","src":"30189:40:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30202:5:21"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"30213:8:21"},{"name":"mask","nodeType":"YulIdentifier","src":"30223:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"30209:3:21"},"nodeType":"YulFunctionCall","src":"30209:19:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"30199:2:21"},"nodeType":"YulFunctionCall","src":"30199:30:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"30189:6:21"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29879:5:21","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"29886:10:21","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"29898:8:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"29911:6:21","type":""}],"src":"29842:393:21"},{"body":{"nodeType":"YulBlock","src":"30273:28:21","statements":[{"nodeType":"YulAssignment","src":"30283:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"30290:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30283:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30259:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30269:3:21","type":""}],"src":"30241:60:21"},{"body":{"nodeType":"YulBlock","src":"30367:82:21","statements":[{"nodeType":"YulAssignment","src":"30377:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30435:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30417:17:21"},"nodeType":"YulFunctionCall","src":"30417:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"30408:8:21"},"nodeType":"YulFunctionCall","src":"30408:34:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30390:17:21"},"nodeType":"YulFunctionCall","src":"30390:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"30377:9:21"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30347:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"30357:9:21","type":""}],"src":"30307:142:21"},{"body":{"nodeType":"YulBlock","src":"30502:28:21","statements":[{"nodeType":"YulAssignment","src":"30512:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"30519:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30512:3:21"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30488:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30498:3:21","type":""}],"src":"30455:75:21"},{"body":{"nodeType":"YulBlock","src":"30612:193:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30622:63:21","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"30677:7:21"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30646:30:21"},"nodeType":"YulFunctionCall","src":"30646:39:21"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"30626:16:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30701:4:21"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"30741:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"30735:5:21"},"nodeType":"YulFunctionCall","src":"30735:11:21"},{"name":"offset","nodeType":"YulIdentifier","src":"30748:6:21"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"30780:16:21"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"30756:23:21"},"nodeType":"YulFunctionCall","src":"30756:41:21"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"30707:27:21"},"nodeType":"YulFunctionCall","src":"30707:91:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"30694:6:21"},"nodeType":"YulFunctionCall","src":"30694:105:21"},"nodeType":"YulExpressionStatement","src":"30694:105:21"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30589:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"30595:6:21","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"30603:7:21","type":""}],"src":"30536:269:21"},{"body":{"nodeType":"YulBlock","src":"30860:24:21","statements":[{"nodeType":"YulAssignment","src":"30870:8:21","value":{"kind":"number","nodeType":"YulLiteral","src":"30877:1:21","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"30870:3:21"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"30856:3:21","type":""}],"src":"30811:73:21"},{"body":{"nodeType":"YulBlock","src":"30943:136:21","statements":[{"nodeType":"YulVariableDeclaration","src":"30953:46:21","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"30967:30:21"},"nodeType":"YulFunctionCall","src":"30967:32:21"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"30957:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"31052:4:21"},{"name":"offset","nodeType":"YulIdentifier","src":"31058:6:21"},{"name":"zero_0","nodeType":"YulIdentifier","src":"31066:6:21"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"31008:43:21"},"nodeType":"YulFunctionCall","src":"31008:65:21"},"nodeType":"YulExpressionStatement","src":"31008:65:21"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"30929:4:21","type":""},{"name":"offset","nodeType":"YulTypedName","src":"30935:6:21","type":""}],"src":"30890:189:21"},{"body":{"nodeType":"YulBlock","src":"31135:136:21","statements":[{"body":{"nodeType":"YulBlock","src":"31202:63:21","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31246:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31253:1:21","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"31216:29:21"},"nodeType":"YulFunctionCall","src":"31216:39:21"},"nodeType":"YulExpressionStatement","src":"31216:39:21"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31155:5:21"},{"name":"end","nodeType":"YulIdentifier","src":"31162:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31152:2:21"},"nodeType":"YulFunctionCall","src":"31152:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31167:26:21","statements":[{"nodeType":"YulAssignment","src":"31169:22:21","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"31182:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"31189:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31178:3:21"},"nodeType":"YulFunctionCall","src":"31178:13:21"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"31169:5:21"}]}]},"pre":{"nodeType":"YulBlock","src":"31149:2:21","statements":[]},"src":"31145:120:21"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"31123:5:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"31130:3:21","type":""}],"src":"31085:186:21"},{"body":{"nodeType":"YulBlock","src":"31356:464:21","statements":[{"body":{"nodeType":"YulBlock","src":"31382:431:21","statements":[{"nodeType":"YulVariableDeclaration","src":"31396:54:21","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"31444:5:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"31412:31:21"},"nodeType":"YulFunctionCall","src":"31412:38:21"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"31400:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31463:63:21","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"31486:8:21"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"31514:10:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"31496:17:21"},"nodeType":"YulFunctionCall","src":"31496:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31482:3:21"},"nodeType":"YulFunctionCall","src":"31482:44:21"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"31467:11:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"31683:27:21","statements":[{"nodeType":"YulAssignment","src":"31685:23:21","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"31700:8:21"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"31685:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"31667:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"31679:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31664:2:21"},"nodeType":"YulFunctionCall","src":"31664:18:21"},"nodeType":"YulIf","src":"31661:49:21"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"31752:11:21"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"31769:8:21"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31797:3:21"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"31779:17:21"},"nodeType":"YulFunctionCall","src":"31779:22:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31765:3:21"},"nodeType":"YulFunctionCall","src":"31765:37:21"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"31723:28:21"},"nodeType":"YulFunctionCall","src":"31723:80:21"},"nodeType":"YulExpressionStatement","src":"31723:80:21"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"31373:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"31378:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31370:2:21"},"nodeType":"YulFunctionCall","src":"31370:11:21"},"nodeType":"YulIf","src":"31367:446:21"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"31332:5:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"31339:3:21","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"31344:10:21","type":""}],"src":"31277:543:21"},{"body":{"nodeType":"YulBlock","src":"31889:54:21","statements":[{"nodeType":"YulAssignment","src":"31899:37:21","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"31924:4:21"},{"name":"value","nodeType":"YulIdentifier","src":"31930:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"31920:3:21"},"nodeType":"YulFunctionCall","src":"31920:16:21"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"31899:8:21"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"31864:4:21","type":""},{"name":"value","nodeType":"YulTypedName","src":"31870:5:21","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"31880:8:21","type":""}],"src":"31826:117:21"},{"body":{"nodeType":"YulBlock","src":"32000:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32010:68:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32059:1:21","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"32062:5:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32055:3:21"},"nodeType":"YulFunctionCall","src":"32055:13:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32074:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32070:3:21"},"nodeType":"YulFunctionCall","src":"32070:6:21"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"32026:28:21"},"nodeType":"YulFunctionCall","src":"32026:51:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32022:3:21"},"nodeType":"YulFunctionCall","src":"32022:56:21"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32014:4:21","type":""}]},{"nodeType":"YulAssignment","src":"32087:25:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32101:4:21"},{"name":"mask","nodeType":"YulIdentifier","src":"32107:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32097:3:21"},"nodeType":"YulFunctionCall","src":"32097:15:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32087:6:21"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31977:4:21","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"31983:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"31993:6:21","type":""}],"src":"31949:169:21"},{"body":{"nodeType":"YulBlock","src":"32204:214:21","statements":[{"nodeType":"YulAssignment","src":"32337:37:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32364:4:21"},{"name":"len","nodeType":"YulIdentifier","src":"32370:3:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"32345:18:21"},"nodeType":"YulFunctionCall","src":"32345:29:21"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32337:4:21"}]},{"nodeType":"YulAssignment","src":"32383:29:21","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"32394:4:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32404:1:21","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"32407:3:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32400:3:21"},"nodeType":"YulFunctionCall","src":"32400:11:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32391:2:21"},"nodeType":"YulFunctionCall","src":"32391:21:21"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"32383:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"32185:4:21","type":""},{"name":"len","nodeType":"YulTypedName","src":"32191:3:21","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"32199:4:21","type":""}],"src":"32123:295:21"},{"body":{"nodeType":"YulBlock","src":"32515:1303:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32526:51:21","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"32573:3:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"32540:32:21"},"nodeType":"YulFunctionCall","src":"32540:37:21"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"32530:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"32662:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"32664:16:21"},"nodeType":"YulFunctionCall","src":"32664:18:21"},"nodeType":"YulExpressionStatement","src":"32664:18:21"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32634:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32642:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32631:2:21"},"nodeType":"YulFunctionCall","src":"32631:30:21"},"nodeType":"YulIf","src":"32628:56:21"},{"nodeType":"YulVariableDeclaration","src":"32694:52:21","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32740:4:21"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"32734:5:21"},"nodeType":"YulFunctionCall","src":"32734:11:21"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"32708:25:21"},"nodeType":"YulFunctionCall","src":"32708:38:21"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"32698:6:21","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"32839:4:21"},{"name":"oldLen","nodeType":"YulIdentifier","src":"32845:6:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"32853:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"32793:45:21"},"nodeType":"YulFunctionCall","src":"32793:67:21"},"nodeType":"YulExpressionStatement","src":"32793:67:21"},{"nodeType":"YulVariableDeclaration","src":"32870:18:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32887:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"32874:9:21","type":""}]},{"nodeType":"YulAssignment","src":"32898:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32911:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"32898:9:21"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"32962:611:21","statements":[{"nodeType":"YulVariableDeclaration","src":"32976:37:21","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32995:6:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33007:4:21","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"33003:3:21"},"nodeType":"YulFunctionCall","src":"33003:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32991:3:21"},"nodeType":"YulFunctionCall","src":"32991:22:21"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"32980:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33027:51:21","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33073:4:21"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33041:31:21"},"nodeType":"YulFunctionCall","src":"33041:37:21"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"33031:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33091:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"33100:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"33095:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"33159:163:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33184:6:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33202:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33207:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33198:3:21"},"nodeType":"YulFunctionCall","src":"33198:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33192:5:21"},"nodeType":"YulFunctionCall","src":"33192:26:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33177:6:21"},"nodeType":"YulFunctionCall","src":"33177:42:21"},"nodeType":"YulExpressionStatement","src":"33177:42:21"},{"nodeType":"YulAssignment","src":"33236:24:21","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33250:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33258:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33246:3:21"},"nodeType":"YulFunctionCall","src":"33246:14:21"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33236:6:21"}]},{"nodeType":"YulAssignment","src":"33277:31:21","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"33294:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"33305:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33290:3:21"},"nodeType":"YulFunctionCall","src":"33290:18:21"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"33277:9:21"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33125:1:21"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"33128:7:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33122:2:21"},"nodeType":"YulFunctionCall","src":"33122:14:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33137:21:21","statements":[{"nodeType":"YulAssignment","src":"33139:17:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"33148:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"33151:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33144:3:21"},"nodeType":"YulFunctionCall","src":"33144:12:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"33139:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"33118:3:21","statements":[]},"src":"33114:208:21"},{"body":{"nodeType":"YulBlock","src":"33358:156:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33376:43:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33403:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33408:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33399:3:21"},"nodeType":"YulFunctionCall","src":"33399:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33393:5:21"},"nodeType":"YulFunctionCall","src":"33393:26:21"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"33380:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"33443:6:21"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"33470:9:21"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33485:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33493:4:21","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33481:3:21"},"nodeType":"YulFunctionCall","src":"33481:17:21"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"33451:18:21"},"nodeType":"YulFunctionCall","src":"33451:48:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33436:6:21"},"nodeType":"YulFunctionCall","src":"33436:64:21"},"nodeType":"YulExpressionStatement","src":"33436:64:21"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"33341:7:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"33350:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33338:2:21"},"nodeType":"YulFunctionCall","src":"33338:19:21"},"nodeType":"YulIf","src":"33335:179:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33534:4:21"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"33548:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"33556:1:21","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"33544:3:21"},"nodeType":"YulFunctionCall","src":"33544:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"33560:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33540:3:21"},"nodeType":"YulFunctionCall","src":"33540:22:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33527:6:21"},"nodeType":"YulFunctionCall","src":"33527:36:21"},"nodeType":"YulExpressionStatement","src":"33527:36:21"}]},"nodeType":"YulCase","src":"32955:618:21","value":{"kind":"number","nodeType":"YulLiteral","src":"32960:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"33590:222:21","statements":[{"nodeType":"YulVariableDeclaration","src":"33604:14:21","value":{"kind":"number","nodeType":"YulLiteral","src":"33617:1:21","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"33608:5:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"33641:67:21","statements":[{"nodeType":"YulAssignment","src":"33659:35:21","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"33678:3:21"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"33683:9:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33674:3:21"},"nodeType":"YulFunctionCall","src":"33674:19:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33668:5:21"},"nodeType":"YulFunctionCall","src":"33668:26:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33659:5:21"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"33634:6:21"},"nodeType":"YulIf","src":"33631:77:21"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33728:4:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33787:5:21"},{"name":"newLen","nodeType":"YulIdentifier","src":"33794:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"33734:52:21"},"nodeType":"YulFunctionCall","src":"33734:67:21"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33721:6:21"},"nodeType":"YulFunctionCall","src":"33721:81:21"},"nodeType":"YulExpressionStatement","src":"33721:81:21"}]},"nodeType":"YulCase","src":"33582:230:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"32935:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"32943:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32932:2:21"},"nodeType":"YulFunctionCall","src":"32932:14:21"},"nodeType":"YulSwitch","src":"32925:887:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"32504:4:21","type":""},{"name":"src","nodeType":"YulTypedName","src":"32510:3:21","type":""}],"src":"32423:1395:21"},{"body":{"nodeType":"YulBlock","src":"33889:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33906:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33929:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"33911:17:21"},"nodeType":"YulFunctionCall","src":"33911:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33899:6:21"},"nodeType":"YulFunctionCall","src":"33899:37:21"},"nodeType":"YulExpressionStatement","src":"33899:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33877:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33884:3:21","type":""}],"src":"33824:118:21"},{"body":{"nodeType":"YulBlock","src":"34046:124:21","statements":[{"nodeType":"YulAssignment","src":"34056:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34068:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34079:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34064:3:21"},"nodeType":"YulFunctionCall","src":"34064:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34056:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34136:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34149:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34160:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34145:3:21"},"nodeType":"YulFunctionCall","src":"34145:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34092:43:21"},"nodeType":"YulFunctionCall","src":"34092:71:21"},"nodeType":"YulExpressionStatement","src":"34092:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34018:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34030:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34041:4:21","type":""}],"src":"33948:222:21"},{"body":{"nodeType":"YulBlock","src":"34302:206:21","statements":[{"nodeType":"YulAssignment","src":"34312:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34324:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34335:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34320:3:21"},"nodeType":"YulFunctionCall","src":"34320:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34312:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34392:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34405:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34416:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34401:3:21"},"nodeType":"YulFunctionCall","src":"34401:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34348:43:21"},"nodeType":"YulFunctionCall","src":"34348:71:21"},"nodeType":"YulExpressionStatement","src":"34348:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34473:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34486:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34497:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34482:3:21"},"nodeType":"YulFunctionCall","src":"34482:18:21"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34429:43:21"},"nodeType":"YulFunctionCall","src":"34429:72:21"},"nodeType":"YulExpressionStatement","src":"34429:72:21"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34266:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34278:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34286:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34297:4:21","type":""}],"src":"34176:332:21"},{"body":{"nodeType":"YulBlock","src":"34696:371:21","statements":[{"nodeType":"YulAssignment","src":"34706:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34718:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34729:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34714:3:21"},"nodeType":"YulFunctionCall","src":"34714:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34706:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34787:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34800:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34811:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34796:3:21"},"nodeType":"YulFunctionCall","src":"34796:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"34743:43:21"},"nodeType":"YulFunctionCall","src":"34743:71:21"},"nodeType":"YulExpressionStatement","src":"34743:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34868:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34881:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34892:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34877:3:21"},"nodeType":"YulFunctionCall","src":"34877:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34824:43:21"},"nodeType":"YulFunctionCall","src":"34824:72:21"},"nodeType":"YulExpressionStatement","src":"34824:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34950:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34963:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"34974:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34959:3:21"},"nodeType":"YulFunctionCall","src":"34959:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34906:43:21"},"nodeType":"YulFunctionCall","src":"34906:72:21"},"nodeType":"YulExpressionStatement","src":"34906:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35032:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35045:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35056:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35041:3:21"},"nodeType":"YulFunctionCall","src":"35041:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34988:43:21"},"nodeType":"YulFunctionCall","src":"34988:72:21"},"nodeType":"YulExpressionStatement","src":"34988:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34644:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34656:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34664:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34672:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34680:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34691:4:21","type":""}],"src":"34514:553:21"},{"body":{"nodeType":"YulBlock","src":"35299:408:21","statements":[{"nodeType":"YulAssignment","src":"35309:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35321:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35332:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35317:3:21"},"nodeType":"YulFunctionCall","src":"35317:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35309:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35356:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35367:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35352:3:21"},"nodeType":"YulFunctionCall","src":"35352:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35375:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35381:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35371:3:21"},"nodeType":"YulFunctionCall","src":"35371:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35345:6:21"},"nodeType":"YulFunctionCall","src":"35345:47:21"},"nodeType":"YulExpressionStatement","src":"35345:47:21"},{"nodeType":"YulAssignment","src":"35401:116:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35503:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"35512:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35409:93:21"},"nodeType":"YulFunctionCall","src":"35409:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35401:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35538:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"35549:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35534:3:21"},"nodeType":"YulFunctionCall","src":"35534:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35558:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"35564:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35554:3:21"},"nodeType":"YulFunctionCall","src":"35554:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35527:6:21"},"nodeType":"YulFunctionCall","src":"35527:48:21"},"nodeType":"YulExpressionStatement","src":"35527:48:21"},{"nodeType":"YulAssignment","src":"35584:116:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35686:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"35695:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35592:93:21"},"nodeType":"YulFunctionCall","src":"35592:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35584:4:21"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35263:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35275:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35283:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35294:4:21","type":""}],"src":"35073:634:21"},{"body":{"nodeType":"YulBlock","src":"35771:40:21","statements":[{"nodeType":"YulAssignment","src":"35782:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35798:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35792:5:21"},"nodeType":"YulFunctionCall","src":"35792:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"35782:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35754:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"35764:6:21","type":""}],"src":"35713:98:21"},{"body":{"nodeType":"YulBlock","src":"35912:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35929:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"35934:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35922:6:21"},"nodeType":"YulFunctionCall","src":"35922:19:21"},"nodeType":"YulExpressionStatement","src":"35922:19:21"},{"nodeType":"YulAssignment","src":"35950:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35969:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"35974:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35965:3:21"},"nodeType":"YulFunctionCall","src":"35965:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"35950:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35884:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"35889:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"35900:11:21","type":""}],"src":"35817:168:21"},{"body":{"nodeType":"YulBlock","src":"36081:283:21","statements":[{"nodeType":"YulVariableDeclaration","src":"36091:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36137:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"36105:31:21"},"nodeType":"YulFunctionCall","src":"36105:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36095:6:21","type":""}]},{"nodeType":"YulAssignment","src":"36152:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36217:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36222:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36159:57:21"},"nodeType":"YulFunctionCall","src":"36159:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36152:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36277:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"36284:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36273:3:21"},"nodeType":"YulFunctionCall","src":"36273:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"36291:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"36296:6:21"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"36238:34:21"},"nodeType":"YulFunctionCall","src":"36238:65:21"},"nodeType":"YulExpressionStatement","src":"36238:65:21"},{"nodeType":"YulAssignment","src":"36312:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36323:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36350:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"36328:21:21"},"nodeType":"YulFunctionCall","src":"36328:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36319:3:21"},"nodeType":"YulFunctionCall","src":"36319:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36312:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36062:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36069:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36077:3:21","type":""}],"src":"35991:373:21"},{"body":{"nodeType":"YulBlock","src":"36598:523:21","statements":[{"nodeType":"YulAssignment","src":"36608:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36620:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36631:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36616:3:21"},"nodeType":"YulFunctionCall","src":"36616:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36608:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36689:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36702:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36713:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36698:3:21"},"nodeType":"YulFunctionCall","src":"36698:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36645:43:21"},"nodeType":"YulFunctionCall","src":"36645:71:21"},"nodeType":"YulExpressionStatement","src":"36645:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36770:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36783:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36794:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36779:3:21"},"nodeType":"YulFunctionCall","src":"36779:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"36726:43:21"},"nodeType":"YulFunctionCall","src":"36726:72:21"},"nodeType":"YulExpressionStatement","src":"36726:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"36852:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36865:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36876:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36861:3:21"},"nodeType":"YulFunctionCall","src":"36861:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36808:43:21"},"nodeType":"YulFunctionCall","src":"36808:72:21"},"nodeType":"YulExpressionStatement","src":"36808:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"36934:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36947:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36958:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36943:3:21"},"nodeType":"YulFunctionCall","src":"36943:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"36890:43:21"},"nodeType":"YulFunctionCall","src":"36890:72:21"},"nodeType":"YulExpressionStatement","src":"36890:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36983:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"36994:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36979:3:21"},"nodeType":"YulFunctionCall","src":"36979:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37004:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"37010:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37000:3:21"},"nodeType":"YulFunctionCall","src":"37000:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36972:6:21"},"nodeType":"YulFunctionCall","src":"36972:49:21"},"nodeType":"YulExpressionStatement","src":"36972:49:21"},{"nodeType":"YulAssignment","src":"37030:84:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"37100:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"37109:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37038:61:21"},"nodeType":"YulFunctionCall","src":"37038:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37030:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36538:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"36550:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"36558:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"36566:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36574:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36582:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36593:4:21","type":""}],"src":"36370:751:21"},{"body":{"nodeType":"YulBlock","src":"37189:79:21","statements":[{"nodeType":"YulAssignment","src":"37199:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"37214:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"37208:5:21"},"nodeType":"YulFunctionCall","src":"37208:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"37199:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37256:5:21"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"37230:25:21"},"nodeType":"YulFunctionCall","src":"37230:32:21"},"nodeType":"YulExpressionStatement","src":"37230:32:21"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"37167:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"37175:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"37183:5:21","type":""}],"src":"37127:141:21"},{"body":{"nodeType":"YulBlock","src":"37350:273:21","statements":[{"body":{"nodeType":"YulBlock","src":"37396:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"37398:77:21"},"nodeType":"YulFunctionCall","src":"37398:79:21"},"nodeType":"YulExpressionStatement","src":"37398:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"37371:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"37380:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37367:3:21"},"nodeType":"YulFunctionCall","src":"37367:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"37392:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"37363:3:21"},"nodeType":"YulFunctionCall","src":"37363:32:21"},"nodeType":"YulIf","src":"37360:119:21"},{"nodeType":"YulBlock","src":"37489:127:21","statements":[{"nodeType":"YulVariableDeclaration","src":"37504:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"37518:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"37508:6:21","type":""}]},{"nodeType":"YulAssignment","src":"37533:73:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37578:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"37589:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37574:3:21"},"nodeType":"YulFunctionCall","src":"37574:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"37598:7:21"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"37543:30:21"},"nodeType":"YulFunctionCall","src":"37543:63:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"37533:6:21"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37320:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"37331:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"37343:6:21","type":""}],"src":"37274:349:21"},{"body":{"nodeType":"YulBlock","src":"37957:725:21","statements":[{"nodeType":"YulAssignment","src":"37967:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37979:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"37990:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37975:3:21"},"nodeType":"YulFunctionCall","src":"37975:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37967:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38048:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38061:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38072:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38057:3:21"},"nodeType":"YulFunctionCall","src":"38057:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38004:43:21"},"nodeType":"YulFunctionCall","src":"38004:71:21"},"nodeType":"YulExpressionStatement","src":"38004:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38129:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38142:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38153:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38138:3:21"},"nodeType":"YulFunctionCall","src":"38138:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"38085:43:21"},"nodeType":"YulFunctionCall","src":"38085:72:21"},"nodeType":"YulExpressionStatement","src":"38085:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38178:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38189:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38174:3:21"},"nodeType":"YulFunctionCall","src":"38174:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38198:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38204:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38194:3:21"},"nodeType":"YulFunctionCall","src":"38194:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38167:6:21"},"nodeType":"YulFunctionCall","src":"38167:48:21"},"nodeType":"YulExpressionStatement","src":"38167:48:21"},{"nodeType":"YulAssignment","src":"38224:116:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38326:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"38335:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38232:93:21"},"nodeType":"YulFunctionCall","src":"38232:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38224:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38361:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38372:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38357:3:21"},"nodeType":"YulFunctionCall","src":"38357:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38381:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38387:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38377:3:21"},"nodeType":"YulFunctionCall","src":"38377:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38350:6:21"},"nodeType":"YulFunctionCall","src":"38350:48:21"},"nodeType":"YulExpressionStatement","src":"38350:48:21"},{"nodeType":"YulAssignment","src":"38407:116:21","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38509:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"38518:4:21"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38415:93:21"},"nodeType":"YulFunctionCall","src":"38415:108:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38407:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38544:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"38555:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38540:3:21"},"nodeType":"YulFunctionCall","src":"38540:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38565:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"38571:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38561:3:21"},"nodeType":"YulFunctionCall","src":"38561:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38533:6:21"},"nodeType":"YulFunctionCall","src":"38533:49:21"},"nodeType":"YulExpressionStatement","src":"38533:49:21"},{"nodeType":"YulAssignment","src":"38591:84:21","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"38661:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"38670:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38599:61:21"},"nodeType":"YulFunctionCall","src":"38599:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38591:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37897:9:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"37909:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37917:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37925:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37933:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37941:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37952:4:21","type":""}],"src":"37629:1053:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint16(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Soulbound: non-transferable\")\n\n    }\n\n    function abi_encode_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4707a1990ca0c31a08093aec6c63ae4a3299d698815db91a800201ed90e096ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e(memPtr) {\n\n        mstore(add(memPtr, 0), \"No badge\")\n\n    }\n\n    function abi_encode_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a3a7bf4403b922da78b66f548763a1d7489b0a8376054f4f00b078161223767e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae(memPtr) {\n\n        mstore(add(memPtr, 0), \"REMEMBRANCE_BADGE\")\n\n    }\n\n    function abi_encode_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae(pos)\n        end := add(pos, 17)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_240(value) -> newValue {\n        newValue :=\n\n        shl(240, value)\n\n    }\n\n    function leftAlign_t_uint16(value) -> aligned {\n        aligned := shift_left_240(value)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint16(cleanup_t_uint16(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_t_uint256_t_uint16__to_t_string_memory_ptr_t_uint256_t_uint16__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_efdb6e6aa7d172a9e3691b7d4371e9b6c7c316353f3c394c3ae3da5700f603ae_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint16_to_t_uint16_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 2)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bad recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_97e1d4f57199c00fdb5f6f27ee9681bcec5b86fb1a6ef59035e3a932592ddc88_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866(memPtr) {\n\n        mstore(add(memPtr, 0), \"Soulbound: approvals disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b6271265557422115c3a07c1131debe92d027fbed9f1a7a84a32b9881ec78866_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101415760003560e01c80635509dc1b116100b8578063a217fddf1161007c578063a217fddf146103ce578063a22cb465146103ec578063d539139314610408578063d547741f14610426578063e985e9c514610442578063f242432a1461047257610141565b80635509dc1b146103065780635ce695f1146103225780636eb2be00146103525780637bbdff8b1461038257806391d148541461039e57610141565b8063248a9ca31161010a578063248a9ca3146102225780632eb2c2d6146102525780632f2ff15d1461026e57806336568abe1461028a5780634dd6c8de146102a65780634e1273f4146102d657610141565b8062fdd58e1461014657806301ffc9a71461017657806302fe5305146101a65780630e89341c146101c257806313ba55df146101f2575b600080fd5b610160600480360381019061015b9190611b73565b61048e565b60405161016d9190611bc2565b60405180910390f35b610190600480360381019061018b9190611c35565b6104e8565b60405161019d9190611c7d565b60405180910390f35b6101c060048036038101906101bb9190611cfd565b6104fa565b005b6101dc60048036038101906101d79190611d4a565b610559565b6040516101e99190611e07565b60405180910390f35b61020c60048036038101906102079190611d4a565b6105ed565b6040516102199190611bc2565b60405180910390f35b61023c60048036038101906102379190611e5f565b610605565b6040516102499190611e9b565b60405180910390f35b61026c600480360381019061026791906120a9565b610625565b005b61028860048036038101906102839190612178565b610660565b005b6102a4600480360381019061029f9190612178565b610682565b005b6102c060048036038101906102bb9190611b73565b6106fd565b6040516102cd9190611c7d565b60405180910390f35b6102f060048036038101906102eb919061227b565b61072c565b6040516102fd91906123b1565b60405180910390f35b610320600480360381019061031b919061240d565b61083b565b005b61033c60048036038101906103379190612460565b6108b5565b6040516103499190611bc2565b60405180910390f35b61036c60048036038101906103679190611d4a565b6108eb565b6040516103799190611bc2565b60405180910390f35b61039c6004803603810190610397919061240d565b610903565b005b6103b860048036038101906103b39190612178565b610b7e565b6040516103c59190611c7d565b60405180910390f35b6103d6610be9565b6040516103e39190611e9b565b60405180910390f35b610406600480360381019061040191906124cc565b610bf0565b005b610410610c2b565b60405161041d9190611e9b565b60405180910390f35b610440600480360381019061043b9190612178565b610c4f565b005b61045c6004803603810190610457919061250c565b610c71565b6040516104699190611c7d565b60405180910390f35b61048c6004803603810190610487919061254c565b610d05565b005b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60006104f382610d40565b9050919050565b6000801b61050781610dba565b61055483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dce565b505050565b60606002805461056890612612565b80601f016020809104026020016040519081016040528092919081815260200182805461059490612612565b80156105e15780601f106105b6576101008083540402835291602001916105e1565b820191906000526020600020905b8154815290600101906020018083116105c457829003601f168201915b50505050509050919050565b60056020528060005260406000206000915090505481565b600060036000838152602001908152602001600020600101549050919050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106579061268f565b60405180910390fd5b61066982610605565b61067281610dba565b61067c8383610de1565b50505050565b61068a610ed3565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ee576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106f88282610edb565b505050565b60046020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6060815183511461077857815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161076f9291906126af565b60405180910390fd5b6000835167ffffffffffffffff81111561079557610794611eb6565b5b6040519080825280602002602001820160405280156107c35781602001602082028036833780820191505090505b50905060005b8451811015610830576108006107e88287610fce90919063ffffffff16565b6107fb8387610fe290919063ffffffff16565b61048e565b828281518110610813576108126126d8565b5b6020026020010181815250508061082990612736565b90506107c9565b508091505092915050565b6000801b61084881610dba565b600061085484846108b5565b90506001610862868361048e565b146108a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610899906127ca565b60405180910390fd5b6108ae85826001610ff6565b5050505050565b600082826040516020016108ca929190612898565b6040516020818303038152906040528051906020012060001c905092915050565b60066020528060005260406000206000915090505481565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661092d81610dba565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109939061291b565b60405180910390fd5b60006109a884846108b5565b9050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff1615610a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3f90612987565b60405180910390fd5b6001600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610acd858260016040518060200160405280600081525061109d565b6001600560008381526020019081526020016000206000828254610af191906129a7565b925050819055506001600660008681526020019081526020016000206000828254610b1c91906129a7565b925050819055508261ffff16848673ffffffffffffffffffffffffffffffffffffffff167fc5e4f97f4e1ac5c9db12a9e39353b3c61176f2578fe4145a469276997597fba184604051610b6f9190611bc2565b60405180910390a45050505050565b60006003600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000801b81565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2290612a27565b60405180910390fd5b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c5882610605565b610c6181610dba565b610c6b8383610edb565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d379061268f565b60405180910390fd5b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610db35750610db282611136565b5b9050919050565b610dcb81610dc6610ed3565b611218565b50565b8060029081610ddd9190612bf3565b5050565b6000610ded8383610b7e565b610ec85760016003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e65610ed3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ecd565b600090505b92915050565b600033905090565b6000610ee78383610b7e565b15610fc35760006003600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f60610ed3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610fc8565b600090505b92915050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110685760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161105f9190612cd4565b60405180910390fd5b6000806110758484611269565b91509150611096856000848460405180602001604052806000815250611299565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361110f5760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016111069190612cd4565b60405180910390fd5b60008061111c8585611269565b9150915061112e600087848487611299565b505050505050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061120157507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061121157506112108261134b565b5b9050919050565b6112228282610b7e565b6112655780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161125c929190612cef565b60405180910390fd5b5050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6112a5858585856113b5565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146113445760006112e3610ed3565b90506001845103611333576000611304600086610fe290919063ffffffff16565b9050600061131c600086610fe290919063ffffffff16565b905061132c838989858589611763565b5050611342565b611341818787878787611917565b5b505b5050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b80518251146113ff57815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016113f69291906126af565b60405180910390fd5b6000611409610ed3565b905060005b835181101561161e57600061142c8286610fe290919063ffffffff16565b905060006114438386610fe290919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161461157057600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561151857888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161150f9493929190612d18565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461160b578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461160391906129a7565b925050819055505b50508061161790612736565b905061140e565b5060018351036116dd57600061163e600085610fe290919063ffffffff16565b90506000611656600085610fe290919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516116ce9291906126af565b60405180910390a4505061175c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611753929190612d5d565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b111561190f578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016117c4959493929190612de9565b6020604051808303816000875af192505050801561180057506040513d601f19601f820116820180604052508101906117fd9190612e58565b60015b611884573d8060008114611830576040519150601f19603f3d011682016040523d82523d6000602084013e611835565b606091505b50600081510361187c57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016118739190612cd4565b60405180910390fd5b805160208201fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461190d57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016119049190612cd4565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611ac3578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611978959493929190612e85565b6020604051808303816000875af19250505080156119b457506040513d601f19601f820116820180604052508101906119b19190612e58565b60015b611a38573d80600081146119e4576040519150601f19603f3d011682016040523d82523d6000602084013e6119e9565b606091505b506000815103611a3057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a279190612cd4565b60405180910390fd5b805160208201fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611ac157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ab89190612cd4565b60405180910390fd5b505b505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b0a82611adf565b9050919050565b611b1a81611aff565b8114611b2557600080fd5b50565b600081359050611b3781611b11565b92915050565b6000819050919050565b611b5081611b3d565b8114611b5b57600080fd5b50565b600081359050611b6d81611b47565b92915050565b60008060408385031215611b8a57611b89611ad5565b5b6000611b9885828601611b28565b9250506020611ba985828601611b5e565b9150509250929050565b611bbc81611b3d565b82525050565b6000602082019050611bd76000830184611bb3565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c1281611bdd565b8114611c1d57600080fd5b50565b600081359050611c2f81611c09565b92915050565b600060208284031215611c4b57611c4a611ad5565b5b6000611c5984828501611c20565b91505092915050565b60008115159050919050565b611c7781611c62565b82525050565b6000602082019050611c926000830184611c6e565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611cbd57611cbc611c98565b5b8235905067ffffffffffffffff811115611cda57611cd9611c9d565b5b602083019150836001820283011115611cf657611cf5611ca2565b5b9250929050565b60008060208385031215611d1457611d13611ad5565b5b600083013567ffffffffffffffff811115611d3257611d31611ada565b5b611d3e85828601611ca7565b92509250509250929050565b600060208284031215611d6057611d5f611ad5565b5b6000611d6e84828501611b5e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611db1578082015181840152602081019050611d96565b60008484015250505050565b6000601f19601f8301169050919050565b6000611dd982611d77565b611de38185611d82565b9350611df3818560208601611d93565b611dfc81611dbd565b840191505092915050565b60006020820190508181036000830152611e218184611dce565b905092915050565b6000819050919050565b611e3c81611e29565b8114611e4757600080fd5b50565b600081359050611e5981611e33565b92915050565b600060208284031215611e7557611e74611ad5565b5b6000611e8384828501611e4a565b91505092915050565b611e9581611e29565b82525050565b6000602082019050611eb06000830184611e8c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eee82611dbd565b810181811067ffffffffffffffff82111715611f0d57611f0c611eb6565b5b80604052505050565b6000611f20611acb565b9050611f2c8282611ee5565b919050565b600067ffffffffffffffff821115611f4c57611f4b611eb6565b5b602082029050602081019050919050565b6000611f70611f6b84611f31565b611f16565b90508083825260208201905060208402830185811115611f9357611f92611ca2565b5b835b81811015611fbc5780611fa88882611b5e565b845260208401935050602081019050611f95565b5050509392505050565b600082601f830112611fdb57611fda611c98565b5b8135611feb848260208601611f5d565b91505092915050565b600080fd5b600067ffffffffffffffff82111561201457612013611eb6565b5b61201d82611dbd565b9050602081019050919050565b82818337600083830152505050565b600061204c61204784611ff9565b611f16565b90508281526020810184848401111561206857612067611ff4565b5b61207384828561202a565b509392505050565b600082601f8301126120905761208f611c98565b5b81356120a0848260208601612039565b91505092915050565b600080600080600060a086880312156120c5576120c4611ad5565b5b60006120d388828901611b28565b95505060206120e488828901611b28565b945050604086013567ffffffffffffffff81111561210557612104611ada565b5b61211188828901611fc6565b935050606086013567ffffffffffffffff81111561213257612131611ada565b5b61213e88828901611fc6565b925050608086013567ffffffffffffffff81111561215f5761215e611ada565b5b61216b8882890161207b565b9150509295509295909350565b6000806040838503121561218f5761218e611ad5565b5b600061219d85828601611e4a565b92505060206121ae85828601611b28565b9150509250929050565b600067ffffffffffffffff8211156121d3576121d2611eb6565b5b602082029050602081019050919050565b60006121f76121f2846121b8565b611f16565b9050808382526020820190506020840283018581111561221a57612219611ca2565b5b835b81811015612243578061222f8882611b28565b84526020840193505060208101905061221c565b5050509392505050565b600082601f83011261226257612261611c98565b5b81356122728482602086016121e4565b91505092915050565b6000806040838503121561229257612291611ad5565b5b600083013567ffffffffffffffff8111156122b0576122af611ada565b5b6122bc8582860161224d565b925050602083013567ffffffffffffffff8111156122dd576122dc611ada565b5b6122e985828601611fc6565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61232881611b3d565b82525050565b600061233a838361231f565b60208301905092915050565b6000602082019050919050565b600061235e826122f3565b61236881856122fe565b93506123738361230f565b8060005b838110156123a457815161238b888261232e565b975061239683612346565b925050600181019050612377565b5085935050505092915050565b600060208201905081810360008301526123cb8184612353565b905092915050565b600061ffff82169050919050565b6123ea816123d3565b81146123f557600080fd5b50565b600081359050612407816123e1565b92915050565b60008060006060848603121561242657612425611ad5565b5b600061243486828701611b28565b935050602061244586828701611b5e565b9250506040612456868287016123f8565b9150509250925092565b6000806040838503121561247757612476611ad5565b5b600061248585828601611b5e565b9250506020612496858286016123f8565b9150509250929050565b6124a981611c62565b81146124b457600080fd5b50565b6000813590506124c6816124a0565b92915050565b600080604083850312156124e3576124e2611ad5565b5b60006124f185828601611b28565b9250506020612502858286016124b7565b9150509250929050565b6000806040838503121561252357612522611ad5565b5b600061253185828601611b28565b925050602061254285828601611b28565b9150509250929050565b600080600080600060a0868803121561256857612567611ad5565b5b600061257688828901611b28565b955050602061258788828901611b28565b945050604061259888828901611b5e565b93505060606125a988828901611b5e565b925050608086013567ffffffffffffffff8111156125ca576125c9611ada565b5b6125d68882890161207b565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061262a57607f821691505b60208210810361263d5761263c6125e3565b5b50919050565b7f536f756c626f756e643a206e6f6e2d7472616e7366657261626c650000000000600082015250565b6000612679601b83611d82565b915061268482612643565b602082019050919050565b600060208201905081810360008301526126a88161266c565b9050919050565b60006040820190506126c46000830185611bb3565b6126d16020830184611bb3565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061274182611b3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361277357612772612707565b5b600182019050919050565b7f4e6f206261646765000000000000000000000000000000000000000000000000600082015250565b60006127b4600883611d82565b91506127bf8261277e565b602082019050919050565b600060208201905081810360008301526127e3816127a7565b9050919050565b600081905092915050565b7f52454d454d4252414e43455f4241444745000000000000000000000000000000600082015250565b600061282b6011836127ea565b9150612836826127f5565b601182019050919050565b6000819050919050565b61285c61285782611b3d565b612841565b82525050565b60008160f01b9050919050565b600061287a82612862565b9050919050565b61289261288d826123d3565b61286f565b82525050565b60006128a38261281e565b91506128af828561284b565b6020820191506128bf8284612881565b6002820191508190509392505050565b7f42616420726563697069656e7400000000000000000000000000000000000000600082015250565b6000612905600d83611d82565b9150612910826128cf565b602082019050919050565b60006020820190508181036000830152612934816128f8565b9050919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000612971600f83611d82565b915061297c8261293b565b602082019050919050565b600060208201905081810360008301526129a081612964565b9050919050565b60006129b282611b3d565b91506129bd83611b3d565b92508282019050808211156129d5576129d4612707565b5b92915050565b7f536f756c626f756e643a20617070726f76616c732064697361626c6564000000600082015250565b6000612a11601d83611d82565b9150612a1c826129db565b602082019050919050565b60006020820190508181036000830152612a4081612a04565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612aa97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a6c565b612ab38683612a6c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612af0612aeb612ae684611b3d565b612acb565b611b3d565b9050919050565b6000819050919050565b612b0a83612ad5565b612b1e612b1682612af7565b848454612a79565b825550505050565b600090565b612b33612b26565b612b3e818484612b01565b505050565b5b81811015612b6257612b57600082612b2b565b600181019050612b44565b5050565b601f821115612ba757612b7881612a47565b612b8184612a5c565b81016020851015612b90578190505b612ba4612b9c85612a5c565b830182612b43565b50505b505050565b600082821c905092915050565b6000612bca60001984600802612bac565b1980831691505092915050565b6000612be38383612bb9565b9150826002028217905092915050565b612bfc82611d77565b67ffffffffffffffff811115612c1557612c14611eb6565b5b612c1f8254612612565b612c2a828285612b66565b600060209050601f831160018114612c5d5760008415612c4b578287015190505b612c558582612bd7565b865550612cbd565b601f198416612c6b86612a47565b60005b82811015612c9357848901518255600182019150602085019450602081019050612c6e565b86831015612cb05784890151612cac601f891682612bb9565b8355505b6001600288020188555050505b505050505050565b612cce81611aff565b82525050565b6000602082019050612ce96000830184612cc5565b92915050565b6000604082019050612d046000830185612cc5565b612d116020830184611e8c565b9392505050565b6000608082019050612d2d6000830187612cc5565b612d3a6020830186611bb3565b612d476040830185611bb3565b612d546060830184611bb3565b95945050505050565b60006040820190508181036000830152612d778185612353565b90508181036020830152612d8b8184612353565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000612dbb82612d94565b612dc58185612d9f565b9350612dd5818560208601611d93565b612dde81611dbd565b840191505092915050565b600060a082019050612dfe6000830188612cc5565b612e0b6020830187612cc5565b612e186040830186611bb3565b612e256060830185611bb3565b8181036080830152612e378184612db0565b90509695505050505050565b600081519050612e5281611c09565b92915050565b600060208284031215612e6e57612e6d611ad5565b5b6000612e7c84828501612e43565b91505092915050565b600060a082019050612e9a6000830188612cc5565b612ea76020830187612cc5565b8181036040830152612eb98186612353565b90508181036060830152612ecd8185612353565b90508181036080830152612ee18184612db0565b9050969550505050505056fea26469706673582212205097f3481e1905344651492dcae0730843ec9aef94892583795ac6c25d3ed73c64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x141 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5509DC1B GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x472 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x5509DC1B EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x5CE695F1 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x6EB2BE00 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x7BBDFF8B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39E JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x4DD6C8DE EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x2D6 JUMPI PUSH2 0x141 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x13BA55DF EQ PUSH2 0x1F2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH2 0x4FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1B73 JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x227B JUMP JUMPDEST PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x23B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x8B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1D4A JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x240D JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C5 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D6 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x406 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH2 0xBF0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x410 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41D SWAP2 SWAP1 PUSH2 0x1E9B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x440 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x2178 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x469 SWAP2 SWAP1 PUSH2 0x1C7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x254C JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0xD40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x507 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x554 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x568 SWAP1 PUSH2 0x2612 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x594 SWAP1 PUSH2 0x2612 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x657 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x669 DUP3 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x672 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0x67C DUP4 DUP4 PUSH2 0xDE1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x68A PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP3 DUP3 PUSH2 0xEDB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x778 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7C3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x830 JUMPI PUSH2 0x800 PUSH2 0x7E8 DUP3 DUP8 PUSH2 0xFCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x7FB DUP4 DUP8 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x813 JUMPI PUSH2 0x812 PUSH2 0x26D8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x829 SWAP1 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP PUSH2 0x7C9 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x848 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP5 DUP5 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH2 0x862 DUP7 DUP4 PUSH2 0x48E JUMP JUMPDEST EQ PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x899 SWAP1 PUSH2 0x27CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8AE DUP6 DUP3 PUSH1 0x1 PUSH2 0xFF6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8CA SWAP3 SWAP2 SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x92D DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP1 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9A8 DUP5 DUP5 PUSH2 0x8B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3F SWAP1 PUSH2 0x2987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xACD DUP6 DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x109D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH2 0xFFFF AND DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5E4F97F4E1AC5C9DB12A9E39353B3C61176F2578FE4145A469276997597FBA1 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB6F SWAP2 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC22 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xC58 DUP3 PUSH2 0x605 JUMP JUMPDEST PUSH2 0xC61 DUP2 PUSH2 0xDBA JUMP JUMPDEST PUSH2 0xC6B DUP4 DUP4 PUSH2 0xEDB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD37 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xDB3 JUMPI POP PUSH2 0xDB2 DUP3 PUSH2 0x1136 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDCB DUP2 PUSH2 0xDC6 PUSH2 0xED3 JUMP JUMPDEST PUSH2 0x1218 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xDDD SWAP2 SWAP1 PUSH2 0x2BF3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDED DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0xEC8 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE65 PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECD JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE7 DUP4 DUP4 PUSH2 0xB7E JUMP JUMPDEST ISZERO PUSH2 0xFC3 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF60 PUSH2 0xED3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1068 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105F SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1075 DUP5 DUP5 PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1096 DUP6 PUSH1 0x0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x110F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1106 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x111C DUP6 DUP6 PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x112E PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1299 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1201 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1211 JUMPI POP PUSH2 0x1210 DUP3 PUSH2 0x134B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1222 DUP3 DUP3 PUSH2 0xB7E JUMP JUMPDEST PUSH2 0x1265 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP3 SWAP2 SWAP1 PUSH2 0x2CEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12A5 DUP6 DUP6 DUP6 DUP6 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1344 JUMPI PUSH1 0x0 PUSH2 0x12E3 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1333 JUMPI PUSH1 0x0 PUSH2 0x1304 PUSH1 0x0 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x131C PUSH1 0x0 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x132C DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1763 JUMP JUMPDEST POP POP PUSH2 0x1342 JUMP JUMPDEST PUSH2 0x1341 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1917 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x13FF JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F6 SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1409 PUSH2 0xED3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x161E JUMPI PUSH1 0x0 PUSH2 0x142C DUP3 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1443 DUP4 DUP7 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1570 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1518 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x160B JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1617 SWAP1 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP PUSH2 0x140E JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x16DD JUMPI PUSH1 0x0 PUSH2 0x163E PUSH1 0x0 DUP6 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1656 PUSH1 0x0 DUP6 PUSH2 0xFE2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x16CE SWAP3 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x175C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1753 SWAP3 SWAP2 SWAP1 PUSH2 0x2D5D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x190F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17C4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DE9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1800 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17FD SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1884 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1830 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1835 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x187C JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1873 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x190D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1904 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1AC3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E85 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19B4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B1 SWAP2 SWAP1 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A38 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x19E4 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x19E9 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1A30 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A27 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1AC1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB8 SWAP2 SWAP1 PUSH2 0x2CD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0A DUP3 PUSH2 0x1ADF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1A DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP2 EQ PUSH2 0x1B25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B37 DUP2 PUSH2 0x1B11 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B50 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6D DUP2 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B8A JUMPI PUSH2 0x1B89 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B98 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBC DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BD7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C12 DUP2 PUSH2 0x1BDD JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2F DUP2 PUSH2 0x1C09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH2 0x1C4A PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C59 DUP5 DUP3 DUP6 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x1C62 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C92 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1CBD JUMPI PUSH2 0x1CBC PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDA JUMPI PUSH2 0x1CD9 PUSH2 0x1C9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH2 0x1D13 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D32 JUMPI PUSH2 0x1D31 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x1D3E DUP6 DUP3 DUP7 ADD PUSH2 0x1CA7 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D60 JUMPI PUSH2 0x1D5F PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP5 DUP3 DUP6 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DB1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD9 DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH2 0x1DE3 DUP2 DUP6 PUSH2 0x1D82 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1DFC DUP2 PUSH2 0x1DBD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E21 DUP2 DUP5 PUSH2 0x1DCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0x1E29 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E59 DUP2 PUSH2 0x1E33 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E83 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E95 DUP2 PUSH2 0x1E29 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EEE DUP3 PUSH2 0x1DBD JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F0D JUMPI PUSH2 0x1F0C PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F20 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP PUSH2 0x1F2C DUP3 DUP3 PUSH2 0x1EE5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F70 PUSH2 0x1F6B DUP5 PUSH2 0x1F31 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F92 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FBC JUMPI DUP1 PUSH2 0x1FA8 DUP9 DUP3 PUSH2 0x1B5E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F95 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FEB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2014 JUMPI PUSH2 0x2013 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x201D DUP3 PUSH2 0x1DBD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204C PUSH2 0x2047 DUP5 PUSH2 0x1FF9 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2068 JUMPI PUSH2 0x2067 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2073 DUP5 DUP3 DUP6 PUSH2 0x202A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2090 JUMPI PUSH2 0x208F PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20A0 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20C5 JUMPI PUSH2 0x20C4 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D3 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20E4 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2104 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x2111 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x213E DUP9 DUP3 DUP10 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215F JUMPI PUSH2 0x215E PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x216B DUP9 DUP3 DUP10 ADD PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x218F JUMPI PUSH2 0x218E PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x219D DUP6 DUP3 DUP7 ADD PUSH2 0x1E4A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21AE DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D3 JUMPI PUSH2 0x21D2 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21F7 PUSH2 0x21F2 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1F16 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x1CA2 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2243 JUMPI DUP1 PUSH2 0x222F DUP9 DUP3 PUSH2 0x1B28 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x221C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2262 JUMPI PUSH2 0x2261 PUSH2 0x1C98 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2272 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2292 JUMPI PUSH2 0x2291 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22B0 JUMPI PUSH2 0x22AF PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x22BC DUP6 DUP3 DUP7 ADD PUSH2 0x224D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DD JUMPI PUSH2 0x22DC PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x22E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2328 DUP2 PUSH2 0x1B3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x233A DUP4 DUP4 PUSH2 0x231F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH2 0x2368 DUP2 DUP6 PUSH2 0x22FE JUMP JUMPDEST SWAP4 POP PUSH2 0x2373 DUP4 PUSH2 0x230F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23A4 JUMPI DUP2 MLOAD PUSH2 0x238B DUP9 DUP3 PUSH2 0x232E JUMP JUMPDEST SWAP8 POP PUSH2 0x2396 DUP4 PUSH2 0x2346 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2377 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23CB DUP2 DUP5 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23EA DUP2 PUSH2 0x23D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x23F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2407 DUP2 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2426 JUMPI PUSH2 0x2425 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2434 DUP7 DUP3 DUP8 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2445 DUP7 DUP3 DUP8 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2456 DUP7 DUP3 DUP8 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2477 JUMPI PUSH2 0x2476 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2485 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2496 DUP6 DUP3 DUP7 ADD PUSH2 0x23F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A9 DUP2 PUSH2 0x1C62 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C6 DUP2 PUSH2 0x24A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E3 JUMPI PUSH2 0x24E2 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x24B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2531 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2542 DUP6 DUP3 DUP7 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH2 0x2567 PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2576 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2587 DUP9 DUP3 DUP10 ADD PUSH2 0x1B28 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2598 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x25A9 DUP9 DUP3 DUP10 ADD PUSH2 0x1B5E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25CA JUMPI PUSH2 0x25C9 PUSH2 0x1ADA JUMP JUMPDEST JUMPDEST PUSH2 0x25D6 DUP9 DUP3 DUP10 ADD PUSH2 0x207B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x262A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x263D JUMPI PUSH2 0x263C PUSH2 0x25E3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F756C626F756E643A206E6F6E2D7472616E7366657261626C650000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2679 PUSH1 0x1B DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2684 DUP3 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A8 DUP2 PUSH2 0x266C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x26D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2741 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2773 JUMPI PUSH2 0x2772 PUSH2 0x2707 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206261646765000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B4 PUSH1 0x8 DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BF DUP3 PUSH2 0x277E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27E3 DUP2 PUSH2 0x27A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52454D454D4252414E43455F4241444745000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282B PUSH1 0x11 DUP4 PUSH2 0x27EA JUMP JUMPDEST SWAP2 POP PUSH2 0x2836 DUP3 PUSH2 0x27F5 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285C PUSH2 0x2857 DUP3 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x2841 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x287A DUP3 PUSH2 0x2862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2892 PUSH2 0x288D DUP3 PUSH2 0x23D3 JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A3 DUP3 PUSH2 0x281E JUMP JUMPDEST SWAP2 POP PUSH2 0x28AF DUP3 DUP6 PUSH2 0x284B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x28BF DUP3 DUP5 PUSH2 0x2881 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42616420726563697069656E7400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2905 PUSH1 0xD DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2910 DUP3 PUSH2 0x28CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2934 DUP2 PUSH2 0x28F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2971 PUSH1 0xF DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x297C DUP3 PUSH2 0x293B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29A0 DUP2 PUSH2 0x2964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B2 DUP3 PUSH2 0x1B3D JUMP JUMPDEST SWAP2 POP PUSH2 0x29BD DUP4 PUSH2 0x1B3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29D5 JUMPI PUSH2 0x29D4 PUSH2 0x2707 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536F756C626F756E643A20617070726F76616C732064697361626C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A11 PUSH1 0x1D DUP4 PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1C DUP3 PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A40 DUP2 PUSH2 0x2A04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2AA9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A6C JUMP JUMPDEST PUSH2 0x2AB3 DUP7 DUP4 PUSH2 0x2A6C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AF0 PUSH2 0x2AEB PUSH2 0x2AE6 DUP5 PUSH2 0x1B3D JUMP JUMPDEST PUSH2 0x2ACB JUMP JUMPDEST PUSH2 0x1B3D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B0A DUP4 PUSH2 0x2AD5 JUMP JUMPDEST PUSH2 0x2B1E PUSH2 0x2B16 DUP3 PUSH2 0x2AF7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2A79 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2B33 PUSH2 0x2B26 JUMP JUMPDEST PUSH2 0x2B3E DUP2 DUP5 DUP5 PUSH2 0x2B01 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2B62 JUMPI PUSH2 0x2B57 PUSH1 0x0 DUP3 PUSH2 0x2B2B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2BA7 JUMPI PUSH2 0x2B78 DUP2 PUSH2 0x2A47 JUMP JUMPDEST PUSH2 0x2B81 DUP5 PUSH2 0x2A5C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B90 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2BA4 PUSH2 0x2B9C DUP6 PUSH2 0x2A5C JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2B43 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BCA PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2BAC JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE3 DUP4 DUP4 PUSH2 0x2BB9 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BFC DUP3 PUSH2 0x1D77 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C15 JUMPI PUSH2 0x2C14 PUSH2 0x1EB6 JUMP JUMPDEST JUMPDEST PUSH2 0x2C1F DUP3 SLOAD PUSH2 0x2612 JUMP JUMPDEST PUSH2 0x2C2A DUP3 DUP3 DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C5D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C4B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2C55 DUP6 DUP3 PUSH2 0x2BD7 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2C6B DUP7 PUSH2 0x2A47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C93 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2C6E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2CB0 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2CAC PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BB9 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CCE DUP2 PUSH2 0x1AFF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CE9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D04 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D11 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D2D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2D3A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2D47 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2D54 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1BB3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D77 DUP2 DUP6 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2D8B DUP2 DUP5 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBB DUP3 PUSH2 0x2D94 JUMP JUMPDEST PUSH2 0x2DC5 DUP2 DUP6 PUSH2 0x2D9F JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x2DDE DUP2 PUSH2 0x1DBD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DFE PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2E0B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2E18 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x2E25 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1BB3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E37 DUP2 DUP5 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2E52 DUP2 PUSH2 0x1C09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E6E JUMPI PUSH2 0x2E6D PUSH2 0x1AD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E7C DUP5 DUP3 DUP6 ADD PUSH2 0x2E43 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2E9A PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x2EA7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2CC5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2EB9 DUP2 DUP7 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 DUP6 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2EE1 DUP2 DUP5 PUSH2 0x2DB0 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP SWAP8 RETURN BASEFEE 0x1E NOT SDIV CALLVALUE CHAINID MLOAD 0x49 0x2D 0xCA 0xE0 PUSH20 0x843EC9AEF94892583795AC6C25D3ED73C64736F PUSH13 0x63430008140033000000000000 ","sourceMap":"214:2810:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:132:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2409:219:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2912:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2049:103:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:47:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1887:268:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4202:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;342:59:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2476:552:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2661:245:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;888:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;496:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1076:452;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2218:122:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;273:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3242:157:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:243:20;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:132:4;2264:7;2290:9;:13;2300:2;2290:13;;;;;;;;;;;:22;2304:7;2290:22;;;;;;;;;;;;;;;;2283:29;;2187:132;;;;:::o;2409:219:20:-;2558:4;2585:36;2609:11;2585:23;:36::i;:::-;2578:43;;2409:219;;;:::o;2912:110::-;2241:4:0;2970:18:20;;2473:16:0;2484:4;2473:10;:16::i;:::-;3000:15:20::1;3008:6;;3000:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:15::i;:::-;2912:110:::0;;;:::o;2049:103:4:-;2109:13;2141:4;2134:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2049:103;;;:::o;407:47:20:-;;;;;;;;;;;;;;;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;1887:268:20:-;2111:37;;;;;;;;;;:::i;:::-;;;;;;;;4202:136:0;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;342:59:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2476:552:4:-;2600:16;2651:3;:10;2632:8;:15;:29;2628:121;;2710:3;:10;2722:8;:15;2684:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2628:121;2759:30;2806:8;:15;2792:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:63;;2838:9;2833:158;2857:8;:15;2853:1;:19;2833:158;;;2912:68;2922:30;2950:1;2922:8;:27;;:30;;;;:::i;:::-;2954:25;2977:1;2954:3;:22;;:25;;;;:::i;:::-;2912:9;:68::i;:::-;2893:13;2907:1;2893:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2874:3;;;;:::i;:::-;;;2833:158;;;;3008:13;3001:20;;;2476:552;;;;:::o;2661:245:20:-;2241:4:0;2745:18:20;;2473:16:0;2484:4;2473:10;:16::i;:::-;2775:10:20::1;2788:28;2799:10;2811:4;2788:10;:28::i;:::-;2775:41;;2857:1;2834:19;2844:4;2850:2;2834:9;:19::i;:::-;:24;2826:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2881:18;2887:4;2893:2;2897:1;2881:5;:18::i;:::-;2765:141;2661:245:::0;;;;:::o;888:182::-;962:7;1044:10;1056:4;1006:55;;;;;;;;;:::i;:::-;;;;;;;;;;;;;996:66;;;;;;988:75;;981:82;;888:182;;;;:::o;496:53::-;;;;;;;;;;;;;;;;;:::o;1076:452::-;311:24;2473:16:0;2484:4;2473:10;:16::i;:::-;1205:1:20::1;1191:16;;:2;:16;;::::0;1183:42:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1235:10;1248:28;1259:10;1271:4;1248:10;:28::i;:::-;1235:41;;1295:7;:11;1303:2;1295:11;;;;;;;;;;;;;;;:15;1307:2;1295:15;;;;;;;;;;;;;;;;;;;;;1294:16;1286:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:4;1341:7;:11;1349:2;1341:11;;;;;;;;;;;;;;;:15;1353:2;1341:15;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1373:20;1379:2;1383;1387:1;1373:20;;;;;;;;;;;::::0;:5:::1;:20::i;:::-;1424:1;1404:12;:16;1417:2;1404:16;;;;;;;;;;;;:21;;;;;;;:::i;:::-;;;;;;;;1469:1;1435:18;:30;1454:10;1435:30;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;1512:4;1486:35;;1500:10;1496:2;1486:35;;;1518:2;1486:35;;;;;;:::i;:::-;;;;;;;;1173:355;1076:452:::0;;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2196:49::-;2241:4;2196:49;;;:::o;2218:122:20:-;2294:39;;;;;;;;;;:::i;:::-;;;;;;;;273:62;311:24;273:62;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3242:157:4:-;3332:4;3355:18;:27;3374:7;3355:27;;;;;;;;;;;;;;;:37;3383:8;3355:37;;;;;;;;;;;;;;;;;;;;;;;;;3348:44;;3242:157;;;;:::o;1638:243:20:-;1837:37;;;;;;;;;;:::i;:::-;;;;;;;;2541:202:0;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;3175:103::-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;10098:86:4:-;10171:6;10164:4;:13;;;;;;:::i;:::-;;10098:86;:::o;6155:316:0:-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;6708:317:0:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;17085:197:9:-;17171:11;17259:4;17254:3;17250:14;17243:4;17238:3;17234:14;17230:35;17224:42;17217:49;;17085:197;;;;:::o;17883:::-;17969:11;18057:4;18052:3;18048:14;18041:4;18036:3;18032:14;18028:35;18022:42;18015:49;;17883:197;;;;:::o;11915:329:4:-;12010:1;11994:18;;:4;:18;;;11990:88;;12064:1;12035:32;;;;;;;;;;;:::i;:::-;;;;;;;;11990:88;12088:20;12110:23;12137:29;12156:2;12160:5;12137:18;:29::i;:::-;12087:79;;;;12176:61;12203:4;12217:1;12221:3;12226:6;12176:61;;;;;;;;;;;;:26;:61::i;:::-;11980:264;;11915:329;;;:::o;10562:346::-;10672:1;10658:16;;:2;:16;;;10654:88;;10728:1;10697:34;;;;;;;;;;;:::i;:::-;;;;;;;;10654:88;10752:20;10774:23;10801:29;10820:2;10824:5;10801:18;:29::i;:::-;10751:79;;;;10840:61;10875:1;10879:2;10883:3;10888:6;10896:4;10840:26;:61::i;:::-;10644:264;;10562:346;;;;:::o;1345:305::-;1447:4;1497:26;1482:41;;;:11;:41;;;;:109;;;;1554:37;1539:52;;;:11;:52;;;;1482:109;:161;;;;1607:36;1631:11;1607:23;:36::i;:::-;1482:161;1463:180;;1345:305;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;13515:822:4:-;13623:23;13648;13782:4;13776:11;13766:21;;13852:1;13844:6;13837:17;13990:8;13983:4;13975:6;13971:17;13964:35;14112:4;14104:6;14100:17;14090:27;;14145:1;14137:6;14130:17;14186:8;14179:4;14171:6;14167:17;14160:35;14315:4;14307:6;14303:17;14297:4;14290:31;13515:822;;;;;:::o;6810:700::-;7011:30;7019:4;7025:2;7029:3;7034:6;7011:7;:30::i;:::-;7069:1;7055:16;;:2;:16;;;7051:453;;7087:16;7106:12;:10;:12::i;:::-;7087:31;;7150:1;7136:3;:10;:15;7132:362;;7171:10;7184:25;7207:1;7184:3;:22;;:25;;;;:::i;:::-;7171:38;;7227:13;7243:28;7269:1;7243:6;:25;;:28;;;;:::i;:::-;7227:44;;7289:72;7325:8;7335:4;7341:2;7345;7349:5;7356:4;7289:35;:72::i;:::-;7153:223;;7132:362;;;7400:79;7441:8;7451:4;7457:2;7461:3;7466:6;7474:4;7400:40;:79::i;:::-;7132:362;7073:431;7051:453;6810:700;;;;;:::o;730:146:15:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;4950:1281:4:-;5085:6;:13;5071:3;:10;:27;5067:117;;5147:3;:10;5159:6;:13;5121:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5067:117;5194:16;5213:12;:10;:12::i;:::-;5194:31;;5241:9;5236:691;5260:3;:10;5256:1;:14;5236:691;;;5291:10;5304:25;5327:1;5304:3;:22;;:25;;;;:::i;:::-;5291:38;;5343:13;5359:28;5385:1;5359:6;:25;;:28;;;;:::i;:::-;5343:44;;5422:1;5406:18;;:4;:18;;;5402:420;;5444:19;5466:9;:13;5476:2;5466:13;;;;;;;;;;;:19;5480:4;5466:19;;;;;;;;;;;;;;;;5444:41;;5521:5;5507:11;:19;5503:129;;;5584:4;5590:11;5603:5;5610:2;5557:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5503:129;5784:5;5770:11;:19;5748:9;:13;5758:2;5748:13;;;;;;;;;;;:19;5762:4;5748:19;;;;;;;;;;;;;;;:41;;;;5426:396;5402:420;5854:1;5840:16;;:2;:16;;;5836:81;;5897:5;5876:9;:13;5886:2;5876:13;;;;;;;;;;;:17;5890:2;5876:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;5836:81;5277:650;;5272:3;;;;:::i;:::-;;;5236:691;;;;5955:1;5941:3;:10;:15;5937:288;;5972:10;5985:25;6008:1;5985:3;:22;;:25;;;;:::i;:::-;5972:38;;6024:13;6040:28;6066:1;6040:6;:25;;:28;;;;:::i;:::-;6024:44;;6118:2;6087:45;;6112:4;6087:45;;6102:8;6087:45;;;6122:2;6126:5;6087:45;;;;;;;:::i;:::-;;;;;;;;5958:185;;5937:288;;;6198:2;6168:46;;6192:4;6168:46;;6182:8;6168:46;;;6202:3;6207:6;6168:46;;;;;;;:::i;:::-;;;;;;;;5937:288;5057:1174;4950:1281;;;;:::o;1006:961:8:-;1222:1;1205:2;:14;;;:18;1201:760;;;1260:2;1243:38;;;1282:8;1292:4;1298:2;1302:5;1309:4;1243:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:1;1613:6;:13;:18;1609:328;;1756:2;1718:41;;;;;;;;;;;:::i;:::-;;;;;;;;1609:328;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;1375:43;;;1363:55;;;:8;:55;;;;1359:189;;1526:2;1488:41;;;;;;;;;;;:::i;:::-;;;;;;;;1359:189;1315:247;1201:760;1006:961;;;;;;:::o;2523:1028::-;2764:1;2747:2;:14;;;:18;2743:802;;;2802:2;2785:43;;;2829:8;2839:4;2845:3;2850:6;2858:4;2785:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:1;3197:6;:13;:18;3193:328;;3340:2;3302:41;;;;;;;;;;;:::i;:::-;;;;;;;;3193:328;3473:6;3467:13;3460:4;3452:6;3448:17;3441:40;2781:754;2954:48;;;2942:60;;;:8;:60;;;;2938:194;;3110:2;3072:41;;;;;;;;;;;:::i;:::-;;;;;;;;2938:194;2864:282;2743:802;2523:1028;;;;;;:::o;7:75:21:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:117;3568:1;3565;3558:12;3596:553;3654:8;3664:6;3714:3;3707:4;3699:6;3695:17;3691:27;3681:122;;3722:79;;:::i;:::-;3681:122;3835:6;3822:20;3812:30;;3865:18;3857:6;3854:30;3851:117;;;3887:79;;:::i;:::-;3851:117;4001:4;3993:6;3989:17;3977:29;;4055:3;4047:4;4039:6;4035:17;4025:8;4021:32;4018:41;4015:128;;;4062:79;;:::i;:::-;4015:128;3596:553;;;;;:::o;4155:529::-;4226:6;4234;4283:2;4271:9;4262:7;4258:23;4254:32;4251:119;;;4289:79;;:::i;:::-;4251:119;4437:1;4426:9;4422:17;4409:31;4467:18;4459:6;4456:30;4453:117;;;4489:79;;:::i;:::-;4453:117;4602:65;4659:7;4650:6;4639:9;4635:22;4602:65;:::i;:::-;4584:83;;;;4380:297;4155:529;;;;;:::o;4690:329::-;4749:6;4798:2;4786:9;4777:7;4773:23;4769:32;4766:119;;;4804:79;;:::i;:::-;4766:119;4924:1;4949:53;4994:7;4985:6;4974:9;4970:22;4949:53;:::i;:::-;4939:63;;4895:117;4690:329;;;;:::o;5025:99::-;5077:6;5111:5;5105:12;5095:22;;5025:99;;;:::o;5130:169::-;5214:11;5248:6;5243:3;5236:19;5288:4;5283:3;5279:14;5264:29;;5130:169;;;;:::o;5305:246::-;5386:1;5396:113;5410:6;5407:1;5404:13;5396:113;;;5495:1;5490:3;5486:11;5480:18;5476:1;5471:3;5467:11;5460:39;5432:2;5429:1;5425:10;5420:15;;5396:113;;;5543:1;5534:6;5529:3;5525:16;5518:27;5367:184;5305:246;;;:::o;5557:102::-;5598:6;5649:2;5645:7;5640:2;5633:5;5629:14;5625:28;5615:38;;5557:102;;;:::o;5665:377::-;5753:3;5781:39;5814:5;5781:39;:::i;:::-;5836:71;5900:6;5895:3;5836:71;:::i;:::-;5829:78;;5916:65;5974:6;5969:3;5962:4;5955:5;5951:16;5916:65;:::i;:::-;6006:29;6028:6;6006:29;:::i;:::-;6001:3;5997:39;5990:46;;5757:285;5665:377;;;;:::o;6048:313::-;6161:4;6199:2;6188:9;6184:18;6176:26;;6248:9;6242:4;6238:20;6234:1;6223:9;6219:17;6212:47;6276:78;6349:4;6340:6;6276:78;:::i;:::-;6268:86;;6048:313;;;;:::o;6367:77::-;6404:7;6433:5;6422:16;;6367:77;;;:::o;6450:122::-;6523:24;6541:5;6523:24;:::i;:::-;6516:5;6513:35;6503:63;;6562:1;6559;6552:12;6503:63;6450:122;:::o;6578:139::-;6624:5;6662:6;6649:20;6640:29;;6678:33;6705:5;6678:33;:::i;:::-;6578:139;;;;:::o;6723:329::-;6782:6;6831:2;6819:9;6810:7;6806:23;6802:32;6799:119;;;6837:79;;:::i;:::-;6799:119;6957:1;6982:53;7027:7;7018:6;7007:9;7003:22;6982:53;:::i;:::-;6972:63;;6928:117;6723:329;;;;:::o;7058:118::-;7145:24;7163:5;7145:24;:::i;:::-;7140:3;7133:37;7058:118;;:::o;7182:222::-;7275:4;7313:2;7302:9;7298:18;7290:26;;7326:71;7394:1;7383:9;7379:17;7370:6;7326:71;:::i;:::-;7182:222;;;;:::o;7410:180::-;7458:77;7455:1;7448:88;7555:4;7552:1;7545:15;7579:4;7576:1;7569:15;7596:281;7679:27;7701:4;7679:27;:::i;:::-;7671:6;7667:40;7809:6;7797:10;7794:22;7773:18;7761:10;7758:34;7755:62;7752:88;;;7820:18;;:::i;:::-;7752:88;7860:10;7856:2;7849:22;7639:238;7596:281;;:::o;7883:129::-;7917:6;7944:20;;:::i;:::-;7934:30;;7973:33;8001:4;7993:6;7973:33;:::i;:::-;7883:129;;;:::o;8018:311::-;8095:4;8185:18;8177:6;8174:30;8171:56;;;8207:18;;:::i;:::-;8171:56;8257:4;8249:6;8245:17;8237:25;;8317:4;8311;8307:15;8299:23;;8018:311;;;:::o;8352:710::-;8448:5;8473:81;8489:64;8546:6;8489:64;:::i;:::-;8473:81;:::i;:::-;8464:90;;8574:5;8603:6;8596:5;8589:21;8637:4;8630:5;8626:16;8619:23;;8690:4;8682:6;8678:17;8670:6;8666:30;8719:3;8711:6;8708:15;8705:122;;;8738:79;;:::i;:::-;8705:122;8853:6;8836:220;8870:6;8865:3;8862:15;8836:220;;;8945:3;8974:37;9007:3;8995:10;8974:37;:::i;:::-;8969:3;8962:50;9041:4;9036:3;9032:14;9025:21;;8912:144;8896:4;8891:3;8887:14;8880:21;;8836:220;;;8840:21;8454:608;;8352:710;;;;;:::o;9085:370::-;9156:5;9205:3;9198:4;9190:6;9186:17;9182:27;9172:122;;9213:79;;:::i;:::-;9172:122;9330:6;9317:20;9355:94;9445:3;9437:6;9430:4;9422:6;9418:17;9355:94;:::i;:::-;9346:103;;9162:293;9085:370;;;;:::o;9461:117::-;9570:1;9567;9560:12;9584:307;9645:4;9735:18;9727:6;9724:30;9721:56;;;9757:18;;:::i;:::-;9721:56;9795:29;9817:6;9795:29;:::i;:::-;9787:37;;9879:4;9873;9869:15;9861:23;;9584:307;;;:::o;9897:146::-;9994:6;9989:3;9984;9971:30;10035:1;10026:6;10021:3;10017:16;10010:27;9897:146;;;:::o;10049:423::-;10126:5;10151:65;10167:48;10208:6;10167:48;:::i;:::-;10151:65;:::i;:::-;10142:74;;10239:6;10232:5;10225:21;10277:4;10270:5;10266:16;10315:3;10306:6;10301:3;10297:16;10294:25;10291:112;;;10322:79;;:::i;:::-;10291:112;10412:54;10459:6;10454:3;10449;10412:54;:::i;:::-;10132:340;10049:423;;;;;:::o;10491:338::-;10546:5;10595:3;10588:4;10580:6;10576:17;10572:27;10562:122;;10603:79;;:::i;:::-;10562:122;10720:6;10707:20;10745:78;10819:3;10811:6;10804:4;10796:6;10792:17;10745:78;:::i;:::-;10736:87;;10552:277;10491:338;;;;:::o;10835:1509::-;10989:6;10997;11005;11013;11021;11070:3;11058:9;11049:7;11045:23;11041:33;11038:120;;;11077:79;;:::i;:::-;11038:120;11197:1;11222:53;11267:7;11258:6;11247:9;11243:22;11222:53;:::i;:::-;11212:63;;11168:117;11324:2;11350:53;11395:7;11386:6;11375:9;11371:22;11350:53;:::i;:::-;11340:63;;11295:118;11480:2;11469:9;11465:18;11452:32;11511:18;11503:6;11500:30;11497:117;;;11533:79;;:::i;:::-;11497:117;11638:78;11708:7;11699:6;11688:9;11684:22;11638:78;:::i;:::-;11628:88;;11423:303;11793:2;11782:9;11778:18;11765:32;11824:18;11816:6;11813:30;11810:117;;;11846:79;;:::i;:::-;11810:117;11951:78;12021:7;12012:6;12001:9;11997:22;11951:78;:::i;:::-;11941:88;;11736:303;12106:3;12095:9;12091:19;12078:33;12138:18;12130:6;12127:30;12124:117;;;12160:79;;:::i;:::-;12124:117;12265:62;12319:7;12310:6;12299:9;12295:22;12265:62;:::i;:::-;12255:72;;12049:288;10835:1509;;;;;;;;:::o;12350:474::-;12418:6;12426;12475:2;12463:9;12454:7;12450:23;12446:32;12443:119;;;12481:79;;:::i;:::-;12443:119;12601:1;12626:53;12671:7;12662:6;12651:9;12647:22;12626:53;:::i;:::-;12616:63;;12572:117;12728:2;12754:53;12799:7;12790:6;12779:9;12775:22;12754:53;:::i;:::-;12744:63;;12699:118;12350:474;;;;;:::o;12830:311::-;12907:4;12997:18;12989:6;12986:30;12983:56;;;13019:18;;:::i;:::-;12983:56;13069:4;13061:6;13057:17;13049:25;;13129:4;13123;13119:15;13111:23;;12830:311;;;:::o;13164:710::-;13260:5;13285:81;13301:64;13358:6;13301:64;:::i;:::-;13285:81;:::i;:::-;13276:90;;13386:5;13415:6;13408:5;13401:21;13449:4;13442:5;13438:16;13431:23;;13502:4;13494:6;13490:17;13482:6;13478:30;13531:3;13523:6;13520:15;13517:122;;;13550:79;;:::i;:::-;13517:122;13665:6;13648:220;13682:6;13677:3;13674:15;13648:220;;;13757:3;13786:37;13819:3;13807:10;13786:37;:::i;:::-;13781:3;13774:50;13853:4;13848:3;13844:14;13837:21;;13724:144;13708:4;13703:3;13699:14;13692:21;;13648:220;;;13652:21;13266:608;;13164:710;;;;;:::o;13897:370::-;13968:5;14017:3;14010:4;14002:6;13998:17;13994:27;13984:122;;14025:79;;:::i;:::-;13984:122;14142:6;14129:20;14167:94;14257:3;14249:6;14242:4;14234:6;14230:17;14167:94;:::i;:::-;14158:103;;13974:293;13897:370;;;;:::o;14273:894::-;14391:6;14399;14448:2;14436:9;14427:7;14423:23;14419:32;14416:119;;;14454:79;;:::i;:::-;14416:119;14602:1;14591:9;14587:17;14574:31;14632:18;14624:6;14621:30;14618:117;;;14654:79;;:::i;:::-;14618:117;14759:78;14829:7;14820:6;14809:9;14805:22;14759:78;:::i;:::-;14749:88;;14545:302;14914:2;14903:9;14899:18;14886:32;14945:18;14937:6;14934:30;14931:117;;;14967:79;;:::i;:::-;14931:117;15072:78;15142:7;15133:6;15122:9;15118:22;15072:78;:::i;:::-;15062:88;;14857:303;14273:894;;;;;:::o;15173:114::-;15240:6;15274:5;15268:12;15258:22;;15173:114;;;:::o;15293:184::-;15392:11;15426:6;15421:3;15414:19;15466:4;15461:3;15457:14;15442:29;;15293:184;;;;:::o;15483:132::-;15550:4;15573:3;15565:11;;15603:4;15598:3;15594:14;15586:22;;15483:132;;;:::o;15621:108::-;15698:24;15716:5;15698:24;:::i;:::-;15693:3;15686:37;15621:108;;:::o;15735:179::-;15804:10;15825:46;15867:3;15859:6;15825:46;:::i;:::-;15903:4;15898:3;15894:14;15880:28;;15735:179;;;;:::o;15920:113::-;15990:4;16022;16017:3;16013:14;16005:22;;15920:113;;;:::o;16069:732::-;16188:3;16217:54;16265:5;16217:54;:::i;:::-;16287:86;16366:6;16361:3;16287:86;:::i;:::-;16280:93;;16397:56;16447:5;16397:56;:::i;:::-;16476:7;16507:1;16492:284;16517:6;16514:1;16511:13;16492:284;;;16593:6;16587:13;16620:63;16679:3;16664:13;16620:63;:::i;:::-;16613:70;;16706:60;16759:6;16706:60;:::i;:::-;16696:70;;16552:224;16539:1;16536;16532:9;16527:14;;16492:284;;;16496:14;16792:3;16785:10;;16193:608;;;16069:732;;;;:::o;16807:373::-;16950:4;16988:2;16977:9;16973:18;16965:26;;17037:9;17031:4;17027:20;17023:1;17012:9;17008:17;17001:47;17065:108;17168:4;17159:6;17065:108;:::i;:::-;17057:116;;16807:373;;;;:::o;17186:89::-;17222:7;17262:6;17255:5;17251:18;17240:29;;17186:89;;;:::o;17281:120::-;17353:23;17370:5;17353:23;:::i;:::-;17346:5;17343:34;17333:62;;17391:1;17388;17381:12;17333:62;17281:120;:::o;17407:137::-;17452:5;17490:6;17477:20;17468:29;;17506:32;17532:5;17506:32;:::i;:::-;17407:137;;;;:::o;17550:617::-;17626:6;17634;17642;17691:2;17679:9;17670:7;17666:23;17662:32;17659:119;;;17697:79;;:::i;:::-;17659:119;17817:1;17842:53;17887:7;17878:6;17867:9;17863:22;17842:53;:::i;:::-;17832:63;;17788:117;17944:2;17970:53;18015:7;18006:6;17995:9;17991:22;17970:53;:::i;:::-;17960:63;;17915:118;18072:2;18098:52;18142:7;18133:6;18122:9;18118:22;18098:52;:::i;:::-;18088:62;;18043:117;17550:617;;;;;:::o;18173:472::-;18240:6;18248;18297:2;18285:9;18276:7;18272:23;18268:32;18265:119;;;18303:79;;:::i;:::-;18265:119;18423:1;18448:53;18493:7;18484:6;18473:9;18469:22;18448:53;:::i;:::-;18438:63;;18394:117;18550:2;18576:52;18620:7;18611:6;18600:9;18596:22;18576:52;:::i;:::-;18566:62;;18521:117;18173:472;;;;;:::o;18651:116::-;18721:21;18736:5;18721:21;:::i;:::-;18714:5;18711:32;18701:60;;18757:1;18754;18747:12;18701:60;18651:116;:::o;18773:133::-;18816:5;18854:6;18841:20;18832:29;;18870:30;18894:5;18870:30;:::i;:::-;18773:133;;;;:::o;18912:468::-;18977:6;18985;19034:2;19022:9;19013:7;19009:23;19005:32;19002:119;;;19040:79;;:::i;:::-;19002:119;19160:1;19185:53;19230:7;19221:6;19210:9;19206:22;19185:53;:::i;:::-;19175:63;;19131:117;19287:2;19313:50;19355:7;19346:6;19335:9;19331:22;19313:50;:::i;:::-;19303:60;;19258:115;18912:468;;;;;:::o;19386:474::-;19454:6;19462;19511:2;19499:9;19490:7;19486:23;19482:32;19479:119;;;19517:79;;:::i;:::-;19479:119;19637:1;19662:53;19707:7;19698:6;19687:9;19683:22;19662:53;:::i;:::-;19652:63;;19608:117;19764:2;19790:53;19835:7;19826:6;19815:9;19811:22;19790:53;:::i;:::-;19780:63;;19735:118;19386:474;;;;;:::o;19866:1089::-;19970:6;19978;19986;19994;20002;20051:3;20039:9;20030:7;20026:23;20022:33;20019:120;;;20058:79;;:::i;:::-;20019:120;20178:1;20203:53;20248:7;20239:6;20228:9;20224:22;20203:53;:::i;:::-;20193:63;;20149:117;20305:2;20331:53;20376:7;20367:6;20356:9;20352:22;20331:53;:::i;:::-;20321:63;;20276:118;20433:2;20459:53;20504:7;20495:6;20484:9;20480:22;20459:53;:::i;:::-;20449:63;;20404:118;20561:2;20587:53;20632:7;20623:6;20612:9;20608:22;20587:53;:::i;:::-;20577:63;;20532:118;20717:3;20706:9;20702:19;20689:33;20749:18;20741:6;20738:30;20735:117;;;20771:79;;:::i;:::-;20735:117;20876:62;20930:7;20921:6;20910:9;20906:22;20876:62;:::i;:::-;20866:72;;20660:288;19866:1089;;;;;;;;:::o;20961:180::-;21009:77;21006:1;20999:88;21106:4;21103:1;21096:15;21130:4;21127:1;21120:15;21147:320;21191:6;21228:1;21222:4;21218:12;21208:22;;21275:1;21269:4;21265:12;21296:18;21286:81;;21352:4;21344:6;21340:17;21330:27;;21286:81;21414:2;21406:6;21403:14;21383:18;21380:38;21377:84;;21433:18;;:::i;:::-;21377:84;21198:269;21147:320;;;:::o;21473:177::-;21613:29;21609:1;21601:6;21597:14;21590:53;21473:177;:::o;21656:366::-;21798:3;21819:67;21883:2;21878:3;21819:67;:::i;:::-;21812:74;;21895:93;21984:3;21895:93;:::i;:::-;22013:2;22008:3;22004:12;21997:19;;21656:366;;;:::o;22028:419::-;22194:4;22232:2;22221:9;22217:18;22209:26;;22281:9;22275:4;22271:20;22267:1;22256:9;22252:17;22245:47;22309:131;22435:4;22309:131;:::i;:::-;22301:139;;22028:419;;;:::o;22453:332::-;22574:4;22612:2;22601:9;22597:18;22589:26;;22625:71;22693:1;22682:9;22678:17;22669:6;22625:71;:::i;:::-;22706:72;22774:2;22763:9;22759:18;22750:6;22706:72;:::i;:::-;22453:332;;;;;:::o;22791:180::-;22839:77;22836:1;22829:88;22936:4;22933:1;22926:15;22960:4;22957:1;22950:15;22977:180;23025:77;23022:1;23015:88;23122:4;23119:1;23112:15;23146:4;23143:1;23136:15;23163:233;23202:3;23225:24;23243:5;23225:24;:::i;:::-;23216:33;;23271:66;23264:5;23261:77;23258:103;;23341:18;;:::i;:::-;23258:103;23388:1;23381:5;23377:13;23370:20;;23163:233;;;:::o;23402:158::-;23542:10;23538:1;23530:6;23526:14;23519:34;23402:158;:::o;23566:365::-;23708:3;23729:66;23793:1;23788:3;23729:66;:::i;:::-;23722:73;;23804:93;23893:3;23804:93;:::i;:::-;23922:2;23917:3;23913:12;23906:19;;23566:365;;;:::o;23937:419::-;24103:4;24141:2;24130:9;24126:18;24118:26;;24190:9;24184:4;24180:20;24176:1;24165:9;24161:17;24154:47;24218:131;24344:4;24218:131;:::i;:::-;24210:139;;23937:419;;;:::o;24362:148::-;24464:11;24501:3;24486:18;;24362:148;;;;:::o;24516:167::-;24656:19;24652:1;24644:6;24640:14;24633:43;24516:167;:::o;24689:402::-;24849:3;24870:85;24952:2;24947:3;24870:85;:::i;:::-;24863:92;;24964:93;25053:3;24964:93;:::i;:::-;25082:2;25077:3;25073:12;25066:19;;24689:402;;;:::o;25097:79::-;25136:7;25165:5;25154:16;;25097:79;;;:::o;25182:157::-;25287:45;25307:24;25325:5;25307:24;:::i;:::-;25287:45;:::i;:::-;25282:3;25275:58;25182:157;;:::o;25345:96::-;25379:8;25428:5;25423:3;25419:15;25398:36;;25345:96;;;:::o;25447:94::-;25485:7;25514:21;25529:5;25514:21;:::i;:::-;25503:32;;25447:94;;;:::o;25547:153::-;25650:43;25669:23;25686:5;25669:23;:::i;:::-;25650:43;:::i;:::-;25645:3;25638:56;25547:153;;:::o;25706:658::-;25945:3;25967:148;26111:3;25967:148;:::i;:::-;25960:155;;26125:75;26196:3;26187:6;26125:75;:::i;:::-;26225:2;26220:3;26216:12;26209:19;;26238:73;26307:3;26298:6;26238:73;:::i;:::-;26336:1;26331:3;26327:11;26320:18;;26355:3;26348:10;;25706:658;;;;;:::o;26370:163::-;26510:15;26506:1;26498:6;26494:14;26487:39;26370:163;:::o;26539:366::-;26681:3;26702:67;26766:2;26761:3;26702:67;:::i;:::-;26695:74;;26778:93;26867:3;26778:93;:::i;:::-;26896:2;26891:3;26887:12;26880:19;;26539:366;;;:::o;26911:419::-;27077:4;27115:2;27104:9;27100:18;27092:26;;27164:9;27158:4;27154:20;27150:1;27139:9;27135:17;27128:47;27192:131;27318:4;27192:131;:::i;:::-;27184:139;;26911:419;;;:::o;27336:165::-;27476:17;27472:1;27464:6;27460:14;27453:41;27336:165;:::o;27507:366::-;27649:3;27670:67;27734:2;27729:3;27670:67;:::i;:::-;27663:74;;27746:93;27835:3;27746:93;:::i;:::-;27864:2;27859:3;27855:12;27848:19;;27507:366;;;:::o;27879:419::-;28045:4;28083:2;28072:9;28068:18;28060:26;;28132:9;28126:4;28122:20;28118:1;28107:9;28103:17;28096:47;28160:131;28286:4;28160:131;:::i;:::-;28152:139;;27879:419;;;:::o;28304:191::-;28344:3;28363:20;28381:1;28363:20;:::i;:::-;28358:25;;28397:20;28415:1;28397:20;:::i;:::-;28392:25;;28440:1;28437;28433:9;28426:16;;28461:3;28458:1;28455:10;28452:36;;;28468:18;;:::i;:::-;28452:36;28304:191;;;;:::o;28501:179::-;28641:31;28637:1;28629:6;28625:14;28618:55;28501:179;:::o;28686:366::-;28828:3;28849:67;28913:2;28908:3;28849:67;:::i;:::-;28842:74;;28925:93;29014:3;28925:93;:::i;:::-;29043:2;29038:3;29034:12;29027:19;;28686:366;;;:::o;29058:419::-;29224:4;29262:2;29251:9;29247:18;29239:26;;29311:9;29305:4;29301:20;29297:1;29286:9;29282:17;29275:47;29339:131;29465:4;29339:131;:::i;:::-;29331:139;;29058:419;;;:::o;29483:141::-;29532:4;29555:3;29547:11;;29578:3;29575:1;29568:14;29612:4;29609:1;29599:18;29591:26;;29483:141;;;:::o;29630:93::-;29667:6;29714:2;29709;29702:5;29698:14;29694:23;29684:33;;29630:93;;;:::o;29729:107::-;29773:8;29823:5;29817:4;29813:16;29792:37;;29729:107;;;;:::o;29842:393::-;29911:6;29961:1;29949:10;29945:18;29984:97;30014:66;30003:9;29984:97;:::i;:::-;30102:39;30132:8;30121:9;30102:39;:::i;:::-;30090:51;;30174:4;30170:9;30163:5;30159:21;30150:30;;30223:4;30213:8;30209:19;30202:5;30199:30;30189:40;;29918:317;;29842:393;;;;;:::o;30241:60::-;30269:3;30290:5;30283:12;;30241:60;;;:::o;30307:142::-;30357:9;30390:53;30408:34;30417:24;30435:5;30417:24;:::i;:::-;30408:34;:::i;:::-;30390:53;:::i;:::-;30377:66;;30307:142;;;:::o;30455:75::-;30498:3;30519:5;30512:12;;30455:75;;;:::o;30536:269::-;30646:39;30677:7;30646:39;:::i;:::-;30707:91;30756:41;30780:16;30756:41;:::i;:::-;30748:6;30741:4;30735:11;30707:91;:::i;:::-;30701:4;30694:105;30612:193;30536:269;;;:::o;30811:73::-;30856:3;30811:73;:::o;30890:189::-;30967:32;;:::i;:::-;31008:65;31066:6;31058;31052:4;31008:65;:::i;:::-;30943:136;30890:189;;:::o;31085:186::-;31145:120;31162:3;31155:5;31152:14;31145:120;;;31216:39;31253:1;31246:5;31216:39;:::i;:::-;31189:1;31182:5;31178:13;31169:22;;31145:120;;;31085:186;;:::o;31277:543::-;31378:2;31373:3;31370:11;31367:446;;;31412:38;31444:5;31412:38;:::i;:::-;31496:29;31514:10;31496:29;:::i;:::-;31486:8;31482:44;31679:2;31667:10;31664:18;31661:49;;;31700:8;31685:23;;31661:49;31723:80;31779:22;31797:3;31779:22;:::i;:::-;31769:8;31765:37;31752:11;31723:80;:::i;:::-;31382:431;;31367:446;31277:543;;;:::o;31826:117::-;31880:8;31930:5;31924:4;31920:16;31899:37;;31826:117;;;;:::o;31949:169::-;31993:6;32026:51;32074:1;32070:6;32062:5;32059:1;32055:13;32026:51;:::i;:::-;32022:56;32107:4;32101;32097:15;32087:25;;32000:118;31949:169;;;;:::o;32123:295::-;32199:4;32345:29;32370:3;32364:4;32345:29;:::i;:::-;32337:37;;32407:3;32404:1;32400:11;32394:4;32391:21;32383:29;;32123:295;;;;:::o;32423:1395::-;32540:37;32573:3;32540:37;:::i;:::-;32642:18;32634:6;32631:30;32628:56;;;32664:18;;:::i;:::-;32628:56;32708:38;32740:4;32734:11;32708:38;:::i;:::-;32793:67;32853:6;32845;32839:4;32793:67;:::i;:::-;32887:1;32911:4;32898:17;;32943:2;32935:6;32932:14;32960:1;32955:618;;;;33617:1;33634:6;33631:77;;;33683:9;33678:3;33674:19;33668:26;33659:35;;33631:77;33734:67;33794:6;33787:5;33734:67;:::i;:::-;33728:4;33721:81;33590:222;32925:887;;32955:618;33007:4;33003:9;32995:6;32991:22;33041:37;33073:4;33041:37;:::i;:::-;33100:1;33114:208;33128:7;33125:1;33122:14;33114:208;;;33207:9;33202:3;33198:19;33192:26;33184:6;33177:42;33258:1;33250:6;33246:14;33236:24;;33305:2;33294:9;33290:18;33277:31;;33151:4;33148:1;33144:12;33139:17;;33114:208;;;33350:6;33341:7;33338:19;33335:179;;;33408:9;33403:3;33399:19;33393:26;33451:48;33493:4;33485:6;33481:17;33470:9;33451:48;:::i;:::-;33443:6;33436:64;33358:156;33335:179;33560:1;33556;33548:6;33544:14;33540:22;33534:4;33527:36;32962:611;;;32925:887;;32515:1303;;;32423:1395;;:::o;33824:118::-;33911:24;33929:5;33911:24;:::i;:::-;33906:3;33899:37;33824:118;;:::o;33948:222::-;34041:4;34079:2;34068:9;34064:18;34056:26;;34092:71;34160:1;34149:9;34145:17;34136:6;34092:71;:::i;:::-;33948:222;;;;:::o;34176:332::-;34297:4;34335:2;34324:9;34320:18;34312:26;;34348:71;34416:1;34405:9;34401:17;34392:6;34348:71;:::i;:::-;34429:72;34497:2;34486:9;34482:18;34473:6;34429:72;:::i;:::-;34176:332;;;;;:::o;34514:553::-;34691:4;34729:3;34718:9;34714:19;34706:27;;34743:71;34811:1;34800:9;34796:17;34787:6;34743:71;:::i;:::-;34824:72;34892:2;34881:9;34877:18;34868:6;34824:72;:::i;:::-;34906;34974:2;34963:9;34959:18;34950:6;34906:72;:::i;:::-;34988;35056:2;35045:9;35041:18;35032:6;34988:72;:::i;:::-;34514:553;;;;;;;:::o;35073:634::-;35294:4;35332:2;35321:9;35317:18;35309:26;;35381:9;35375:4;35371:20;35367:1;35356:9;35352:17;35345:47;35409:108;35512:4;35503:6;35409:108;:::i;:::-;35401:116;;35564:9;35558:4;35554:20;35549:2;35538:9;35534:18;35527:48;35592:108;35695:4;35686:6;35592:108;:::i;:::-;35584:116;;35073:634;;;;;:::o;35713:98::-;35764:6;35798:5;35792:12;35782:22;;35713:98;;;:::o;35817:168::-;35900:11;35934:6;35929:3;35922:19;35974:4;35969:3;35965:14;35950:29;;35817:168;;;;:::o;35991:373::-;36077:3;36105:38;36137:5;36105:38;:::i;:::-;36159:70;36222:6;36217:3;36159:70;:::i;:::-;36152:77;;36238:65;36296:6;36291:3;36284:4;36277:5;36273:16;36238:65;:::i;:::-;36328:29;36350:6;36328:29;:::i;:::-;36323:3;36319:39;36312:46;;36081:283;35991:373;;;;:::o;36370:751::-;36593:4;36631:3;36620:9;36616:19;36608:27;;36645:71;36713:1;36702:9;36698:17;36689:6;36645:71;:::i;:::-;36726:72;36794:2;36783:9;36779:18;36770:6;36726:72;:::i;:::-;36808;36876:2;36865:9;36861:18;36852:6;36808:72;:::i;:::-;36890;36958:2;36947:9;36943:18;36934:6;36890:72;:::i;:::-;37010:9;37004:4;37000:20;36994:3;36983:9;36979:19;36972:49;37038:76;37109:4;37100:6;37038:76;:::i;:::-;37030:84;;36370:751;;;;;;;;:::o;37127:141::-;37183:5;37214:6;37208:13;37199:22;;37230:32;37256:5;37230:32;:::i;:::-;37127:141;;;;:::o;37274:349::-;37343:6;37392:2;37380:9;37371:7;37367:23;37363:32;37360:119;;;37398:79;;:::i;:::-;37360:119;37518:1;37543:63;37598:7;37589:6;37578:9;37574:22;37543:63;:::i;:::-;37533:73;;37489:127;37274:349;;;;:::o;37629:1053::-;37952:4;37990:3;37979:9;37975:19;37967:27;;38004:71;38072:1;38061:9;38057:17;38048:6;38004:71;:::i;:::-;38085:72;38153:2;38142:9;38138:18;38129:6;38085:72;:::i;:::-;38204:9;38198:4;38194:20;38189:2;38178:9;38174:18;38167:48;38232:108;38335:4;38326:6;38232:108;:::i;:::-;38224:116;;38387:9;38381:4;38377:20;38372:2;38361:9;38357:18;38350:48;38415:108;38518:4;38509:6;38415:108;:::i;:::-;38407:116;;38571:9;38565:4;38561:20;38555:3;38544:9;38540:19;38533:49;38599:76;38670:4;38661:6;38599:76;:::i;:::-;38591:84;;37629:1053;;;;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","adminBurn(address,uint256,uint16)":"5509dc1b","badgeIdFor(uint256,uint16)":"5ce695f1","balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","candlesForMemorial(uint256)":"6eb2be00","claimed(address,uint256)":"4dd6c8de","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","lightCandle(address,uint256,uint16)":"7bbdff8b","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","setURI(string)":"02fe5305","supportsInterface(bytes4)":"01ffc9a7","totalHolders(uint256)":"13ba55df","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"badgeId\",\"type\":\"uint256\"}],\"name\":\"CandleLit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"}],\"name\":\"adminBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"}],\"name\":\"badgeIdFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candlesForMemorial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"memorialId\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"year\",\"type\":\"uint16\"}],\"name\":\"lightCandle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RemembranceBadges.sol\":\"RemembranceBadges\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/RemembranceBadges.sol\":{\"keccak256\":\"0x199571ad4fbd8d2823adc6d08e44be6243fe189f1873b6e7a7f1b7e80b87d234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41127607b300ed67646809a9e2cd1036aa1bdea294f0c5cc56a2b9b253b6fe93\",\"dweb:/ipfs/QmTYbEMFUpQf1U2axcWXrXn8ks4rMumg3LfdDNRWakMRj2\"]}},\"version\":1}"}}}}}